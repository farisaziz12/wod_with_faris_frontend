{"version":3,"sources":["Images/faris_img.JPG","Images/about_img_1.JPG","virtual_business_card/vbc.vcf","base.js","Components/Schedule.js","Components/Home.js","Auth.js","PrivateRoute.js","Components/Login.js","Components/SignUp.js","Components/StyledLink.js","Components/StyledDropdownLink.js","Components/NavBar.js","Components/ClassModal.js","Components/Classes.js","Components/ClassCard.js","Components/CoachClassCard.js","Components/AllUpcomingClasses.js","Components/CardSection.js","Components/PTSessionCheckoutForm.js","Components/PTSessionCard.js","Components/CoachPTSessionCard.js","Components/Profile.js","Components/CreateClass.js","Components/Client.js","Components/Clients.js","Components/CheckoutForm.js","Components/BuyPasses.js","Components/LeaderboardStat.js","Components/Leaderboard.js","Components/CreatePTSession.js","Components/About.js","App.js","serviceWorker.js","webpack:///./src/index.js?b635"],"names":["module","exports","app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_SENDER_ID","measurementId","REACT_APP_MEASUREMENT_ID","Schedule","this","props","show","toggleShow","position","open","closeBtn","closeOnEsc","onClose","closeOnOverlay","className","href","Component","IG","require","Home","state","currentUser","instaPosts","showSchedule","setState","user","ReactGA","event","category","action","first_name","last_name","initialize","pageview","auth","onAuthStateChanged","setUser","profile","then","SlicedPosts","slice","onClick","map","post","node","shortcode","alt","id","src","display_url","AuthContext","React","createContext","AuthProvider","children","useState","setCurrentUser","useEffect","Provider","value","PrivateRoute","RouteComponent","component","rest","useContext","render","routeProps","to","Login","email","password","passwordResetEmail","emailSent","emailError","handlelogin","a","signInWithEmailAndPassword","setHome","alert","handleChange","target","name","handlePasswordResetEmailChange","sendPasswordResetEmail","checkAccount","resp","fetch","json","onChange","type","placeholder","withRouter","SignUp","firstName","lastName","passwordConfirm","passwordMatchError","emptyFieldsError","handleSignUp","createUserWithEmailAndPassword","method","headers","body","JSON","stringify","tokens","coach","console","log","token","message","handleSetUser","emailVerified","sendEmailVerification","StyledLink","styled","Link","StyledDropdownLink","lastPage","localStorage","getItem","NavBar","setPage","handleNavChange","e","setItem","userData","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","Button","logout","ClassModal","oneClass","clients","error","removeSelectedClass","handleBookandUnBookClass","isBooked","find","client","undefined","length","class_capacity","Accept","user_id","session_id","ClientsWithNewBooking","deductToken","sound","time","dateFormat","date","deletedBooking","filter","addToken","now","Date","isInPast","style","width","toFixed","description","split","sentence","class","localizer","momentLocalizer","moment","Classes","classes","chosenClass","isLoading","screenWidth","window","innerWidth","handleWindowSizeChange","handleDateChange","dateFetch","handlePickClass","pickedClass","formatedClasses","prototype","addHours","h","setHours","getHours","start","end","allDay","addEventListener","isMobile","color","onSelectEvent","defaultView","events","startAccessor","endAccessor","height","backgroundColor","ClassCard","handleCancelBooking","handleCancel","upcomingClass","CoachClassCard","askDeleteConfirm","editMode","classDescription","addClient","allClients","clientToAdd","handleClients","formatedClients","label","handleDeleteClass","ids","client_ids","tokenError","toggleDeleteConfirm","toggleEditMode","handleSubmit","toggleAddClient","handleAddClientOrCancel","handleSetClient","options","AllUpcomingClasses","upcomingClasses","timeOrderedClasses","sort","b","CARD_ELEMENT_OPTIONS","iconStyle","hidePostalCode","base","iconColor","fontSize","fontFamily","fontSmoothing","invalid","CardSection","PTSessionCheckoutForm","paymentSuccess","paymentError","paymentPending","handleNameChange","preventDefault","stripe","elements","card","getElement","CardElement","createToken","result","upcomingPTSession","price","cardPayment","client_secret","clientSecret","confirmCardPayment","payment_method","billing_details","paymentIntent","status","handlePaid","pt_session","setTimeout","onSubmit","required","stripePromise","loadStripe","PTSessionCard","paid","textAlign","location","userEmail","CoachPTSessionCard","ptDescription","ptLocation","ptTime","ptDate","ptPrice","handleDeletePTSession","handleDeletedBooking","parseInt","Profile","setUpcomingClasses","upcomingPTSessions","setUpcomingPTSessions","showUpcomingClasses","setShowUpcomingClasses","handleUser","upcoming","handleUpcomingClasses","ptsessions","updatedUser","booking","session","deletedClass","ptSession","ptsession","toggleShowUpcomingClasses","timeOrderedPTSessions","orderedByDateUpcomingClasses","orderedByDateUpcomingPTsessions","SlicedUpcomingClasses","SlicedUpcomingPTSessions","display","marginLeft","marginRight","Badge","CreateClass","classCapacity","success","errorMessage","handleCreateClass","catch","Client","submitEdit","Clients","search","handleSearch","fuzzyMatch","compareTerm","term","string","toLowerCase","compare","matches","i","indexOf","sortSearch","results","alphebetizedClients","localeCompare","filteredClients","CheckoutForm","quantity","user_email","resetQuantity","BuyPasses","purchaseAmountLimit","handleQuantityChange","amount","LeaderboardStat","stat","attendances_and_activities","calories_burned","highestNoOfAttendances","Leaderboard","stats","handleLeaderboardStats","leaderboardStats","setLeaderboardStats","setIsLoading","sortedLeaderboardStats","Math","max","apply","CreatePTSession","setName","setLocation","setClient","setDescription","setDate","setTime","setErrorMessage","setSuccess","setClients","setPrice","handleSuccess","coach_email","client_email","About","Container","fluid","Image","aboutImg1","farisPic","thumbnail","vbc","pill","App","isHome","handleLogout","signOut","removeItem","exact","path","Boolean","hostname","match","Bugsnag","plugins","BugsnagPluginReact","ErrorBoundary","getPlugin","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f6658a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/faris_img.5bd14a09.JPG\";","module.exports = __webpack_public_path__ + \"static/media/about_img_1.04d15c22.JPG\";","module.exports = __webpack_public_path__ + \"static/media/vbc.8b1b7968.vcf\";","import * as firebase from 'firebase/app'\nimport 'firebase/auth'\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n});\n\nexport default app;","import React, { Component } from 'react'\nimport PopPop from 'react-poppop';\nimport './Schedule.css';\n\nexport default class Schedule extends Component {\n\n    render() {\n        const { show, toggleShow } = this.props\n        return (\n            <div>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => toggleShow(false)}\n                        closeOnOverlay={true}>\n                <h1 className='schedule-title'>Schedule</h1>\n                <div className='schedule-container'>\n                    <h3 className='schedule-h3'>Classes with less than 2 people will be cancelled 2 hours before class start time and early morning classes before 10:00 will be cancelled the night before at 20:00</h3>\n                    <p><strong>Monday:</strong> Outdoor Workout of the Day @ 12:15</p>\n                    <p><strong>Tuesday:</strong> Outdoor Workout of the Day @ 12:15</p>\n                    <p><strong>Wednesday:</strong> Outdoor Workout of the Day @ 9:00</p>\n                    <p><strong>Thursday:</strong> Zoom Workout of the Day @ 7:00 & Outdoor Workout of the Day @ 12:15</p>\n                    <p><strong>Friday:</strong> Outdoor Workout of the Day @ 9:00</p>\n                    <p><strong>Saturday:</strong> Zoom Mobility Class @ 9:30 & Outdoor WOD @ 10:30</p>\n                    <p><strong>Sunday:</strong> Outdoor Workout of the Day @ 10:00 & 11:00</p>\n                    <p><strong>Email <a href='mailto:faziztraining@gmail.com'>faziztraining@gmail.com</a> if you would like to suggest a new class time</strong></p>\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n   ","import React, { Component } from \"react\";\nimport app from \"../base\";\nimport \"./Home.css\";\nimport Schedule from \"./Schedule\";\nimport ReactGA from \"react-ga\";\nconst IG = require(\"instagrammer\");\nconst instagramUsername = \"faziz_training\";\n\nfunction initializeReactGA() {\n  ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n  ReactGA.pageview(\"/home\");\n}\n\nexport default class Home extends Component {\n  state = {\n    currentUser: this.props.currentUser,\n    instaPosts: [],\n    showSchedule: false,\n  };\n\n  componentDidMount() {\n    initializeReactGA();\n    app.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n      }\n    });\n\n    const setUser = (user) => {\n      this.setState({ currentUser: user });\n      this.props.setUser(user);\n    };\n\n    IG.profile(instagramUsername).then((instaPosts) => {\n      this.setState({ instaPosts });\n    });\n  }\n\n  toggleShow = (show) => {\n    this.setState({ showSchedule: show });\n    this.props.user &&\n      ReactGA.event({\n        category: \"User\",\n        action: `${\n          this.props.user.first_name + \" \" + this.props.user.last_name\n        } checked out the Schedule`,\n      });\n  };\n\n  render() {\n    const { instaPosts } = this.state;\n    const SlicedPosts = instaPosts[0] ? instaPosts.slice(0, 8) : [];\n    return (\n      <>\n        <button\n          onClick={() => this.toggleShow(true)}\n          className=\"class-schedule-btn\"\n        >\n          View Class Schedule\n        </button>\n        <Schedule show={this.state.showSchedule} toggleShow={this.toggleShow} />\n        <div className=\"posts-container\">\n          <h2 className=\"title\">\n            Recent Posts{\" \"}\n            <a\n              className=\"title\"\n              href={`https://www.instagram.com/faziz_training/`}\n            >\n              @faziz_training\n            </a>\n          </h2>\n          <div className=\"posts-container\">\n            {SlicedPosts.map((post) => (\n              <a href={`https://www.instagram.com/p/${post.node.shortcode}/`}>\n                <img\n                  alt=\"\"\n                  id=\"insta-post\"\n                  className=\"insta-post\"\n                  src={post.node.display_url}\n                />\n              </a>\n            ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport app from './base'\n\nexport const AuthContext  = React.createContext();\n\n\nexport function AuthProvider({ children }) {\n    const  [currentUser, setCurrentUser] = useState(null);\n\n    useEffect(() => {\n        app.auth().onAuthStateChanged(setCurrentUser);\n    }, []);\n\n    return (\n        <AuthContext.Provider\n        value={{currentUser}}\n        > \n            {children}\n        </AuthContext.Provider>\n    )\n}\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Auth'\n\nexport default function PrivateRoute({ component: RouteComponent, ...rest }) {\n    const {currentUser} = useContext(AuthContext)\n    return (\n        <Route\n        {...rest}\n        render={routeProps =>\n        !!currentUser ? (\n            <RouteComponent {...routeProps} currentUser={currentUser} />\n        ) : (\n            <Redirect to={'/login'}/>\n        )\n        }\n        />\n    )\n}\n","import React from 'react';\nimport { withRouter, Redirect } from 'react-router';\nimport app from '../base';\nimport './Login.css'\nimport { NavLink } from 'react-router-dom'\nimport PopPop from 'react-poppop';\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/login');\n}\n\n\nclass Login extends React.Component {\n\n    state = {\n        currentUser: null, \n        email: null, \n        password: null,\n        show: false,\n        passwordResetEmail: null, \n        emailSent: false,\n        emailError: false\n    }\n\n    componentDidMount(){\n        initializeReactGA()\n\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n\n        const setUser = user => {\n            this.setState({currentUser: user})\n            this.props.setUser(user)\n        }\n    }\n\n    handlelogin = async () => {\n            const { email, password } = this.state;\n            try {\n                await app\n                  .auth()\n                  .signInWithEmailAndPassword(email, password);\n                  this.props.setHome(true)\n            } catch (error) {\n                alert(error);\n            }\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n\n    handleChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n    handlePasswordResetEmailChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n\n    sendPasswordResetEmail = email => {\n        this.checkAccount(email).then(resp => {\n            if (resp) {\n                app.auth().sendPasswordResetEmail(email).then(this.setState({emailSent: true, emailError: false}))\n            } else {\n                this.setState({emailError: true})\n            }\n        })\n    }\n\n    checkAccount = email => {\n        return fetch(`https://wod-with-faris-backend.herokuapp.com/users/check?email=${email}`)\n        .then(resp => resp.json())\n    }\n\n    render(){\n        const { currentUser, show, passwordResetEmail, emailSent, emailError } = this.state\n        if (currentUser) {\n            return <Redirect to='/'/>;\n        }\n        return (\n            <div>\n                <div className=\"form-structor\">\n                    <div className=\"signup\">\n                        <h2 className=\"form-title\" id=\"signup\"><span>or</span>Log In</h2>\n                        <div className=\"form-holder\">\n                        <input onChange={this.handleChange} name='email' type=\"email\" className=\"input\" placeholder=\"Email\" />\n                        <input onChange={this.handleChange} name='password' type=\"password\" className=\"input\" placeholder=\"Password\" />\n                        </div>\n                        <button onClick={this.handlelogin} className=\"submit-btn\">Log In</button>\n                        <h3 onClick={this.toggleShow} className='forgot-password'><u>Forgot Password</u></h3>\n                        <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                            <div className='forgot-password-modal-container'>\n                                <h2 className='forgot-password-txt'>Password Reset</h2>\n                                {emailSent&& <p className='email-send-success'>Email Sent!</p>}\n                                {emailError&& <p className='email-send-error'>Sorry, no account matches this email</p>}\n                                <p className='forgot-password-txt'>Please enter the email associated with your account:</p>\n                                <input value={passwordResetEmail} onChange={this.handlePasswordResetEmailChange} name='passwordResetEmail' className='forgot-password-input' type='email'/>\n                                <button onClick={() => this.sendPasswordResetEmail(passwordResetEmail)} className='forgot-password-btn'>Send Password Reset Email</button>\n                                \n                            </div>\n                        </PopPop>\n                    </div>\n                    <div className=\"login slide-up\">\n                        <div className=\"center\">\n                            <NavLink to='/signup'>\n                                <h2 className=\"form-title\" id=\"login\"><span>or</span>Sign Up</h2>\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(Login);\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom'\nimport app from '../base';\nimport './Login.css'\nimport { NavLink } from 'react-router-dom'\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/signup');\n}\n\nclass SignUp extends React.Component {\n\n    state = {\n        firstName: null,\n        lastName: null, \n        email: null,\n        password: null,\n        passwordConfirm: null,\n        currentUser: null,\n        passwordMatchError: \"\",\n        emailSent: false,\n        emptyFieldsError: null\n    }\n\n\n    componentDidMount(){\n        initializeReactGA()\n\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n\n        const setUser = user => {\n            this.setState({currentUser: user})\n        }\n    }\n\n    handleSignUp = async () => {\n        const { email, password, passwordConfirm , firstName, lastName} = this.state;\n        try {\n           if (password === passwordConfirm && email !== null) { \n            await app\n            .auth()\n            .createUserWithEmailAndPassword(email, password);\n            this.setState({passwordMatchError: null, emptyFieldsError: null})\n\n            fetch(\"https://wod-with-faris-backend.herokuapp.com/user/create\", {\n            method: \"POST\", \n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                first_name: this.state.firstName,\n                last_name: this.state.lastName,\n                tokens: 0,\n                coach: false\n            })\n            }).then(resp => resp.json()).then(resp => console.log(resp))\n\n            fetch(\"https://api.pushover.net/1/messages.json\", {\n                    method: \"POST\", \n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        token: 'adohia1ym9d8bopuvjys6zrgdu4psa',\n                        user: 'ubujnjnpw22cv58byd8w6kot7yx648',\n                        message: `${this.state.firstName + \" \" + this.state.lastName} signed up!`\n                    })\n            })\n\n           } else if (!password || !passwordConfirm || !email || !firstName || !lastName){\n               this.setState({emptyFieldsError: \"Please fill all the fields\", passwordMatchError: null})\n           } else {\n            this.setState({passwordMatchError: \"Passwords do not match\", emptyFieldsError: null})\n           }\n\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    handleChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n\n    handleSetUser = user => {\n        this.setState({currentUser: user})\n    }\n\n\n\n    \n    render (){\n        const {currentUser, emailSent, passwordMatchError, emptyFieldsError} = this.state\n        if (currentUser) {\n            if(!currentUser.emailVerified && !emailSent){\n                currentUser.sendEmailVerification();\n                this.setState({emailSent: true})\n            } else {\n                this.props.setHome(true)\n                return <Redirect to='/'/>;\n            }\n        }\n        return (\n            <div>\n                <div className=\"form-structor\">\n                    <div className=\"signup\">\n                        {passwordMatchError&& <p className='sign-up-error'>{passwordMatchError}</p>}{emptyFieldsError&& <p className='sign-up-error'>{emptyFieldsError}</p>}\n                        <h2 className=\"form-title\" id=\"signup\"><span>or</span>Sign up</h2>\n                        <div className=\"form-holder\">\n                            <form>\n                                <input onChange={this.handleChange} name='firstName' type=\"text\" className=\"input\" placeholder=\"First Name\" />\n                                <input onChange={this.handleChange} name='lastName' type=\"text\" className=\"input\" placeholder=\"Last Name\" />\n                                <input onChange={this.handleChange} name='email' type=\"email\" className=\"input\" placeholder=\"Email\" />\n                                <input onChange={this.handleChange} name='password' type=\"password\" className=\"input\" placeholder=\"Password\" />\n                                <input onChange={this.handleChange} name='passwordConfirm' type=\"password\" className=\"input\" placeholder=\"Confirm Password\" />\n                            </form>\n                        </div>\n                        <button onClick={this.handleSignUp} className=\"submit-btn\">Sign up</button>\n                    </div>\n                    <div className=\"login slide-up\">\n                        <div className=\"center\">\n                            <NavLink to='/login'>\n                                <h2 className=\"form-title\" id=\"login\"><span>or</span>Log in</h2>\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(SignUp)\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: hsla(0, 0%, 100%, 0.5);\n  &:focus,\n  &:hover {\n    color: white;\n  }\n  ,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\n\nexport default (props) => <StyledLink {...props} />;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledDropdownLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  &:focus,\n  &:hover {\n    color: grey;\n  }\n  ,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\n\nexport default (props) => <StyledDropdownLink {...props} />;\n","import React, { useState, useEffect } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport ReactGA from \"react-ga\";\nimport StyledLink from \"./StyledLink\";\nimport StyledDropdownLink from \"./StyledDropdownLink\";\nimport Button from \"react-bootstrap/Button\";\n\nconst lastPage = localStorage.getItem(\"prevUrl\");\n\nexport default function NavBar(props) {\n  // eslint-disable-next-line\n  const [page, setPage] = useState(null);\n\n  useEffect(() => {\n    setPage(lastPage ? lastPage : \"/\");\n  }, []);\n\n  const handleNavChange = (e) => {\n    setPage(e.target.name);\n    if (e.target.name === \"/\") {\n      props.setHome(true);\n      localStorage.setItem(\"prevUrl\", \"/\");\n    } else {\n      localStorage.setItem(\"prevUrl\", e.target.name);\n      props.setHome(false);\n    }\n    props.userData &&\n      ReactGA.event({\n        category: \"User\",\n        action: `${\n          props.userData.first_name + \" \" + props.userData.last_name\n        } looked at ${e.target.name}`,\n      });\n  };\n\n  const { currentUser, userData } = props;\n  return (\n    <div className=\"nav-bar\">\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"#243b55\" variant=\"dark\">\n        <Navbar.Brand>WOD-WITH-FARIS</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link>\n              <StyledLink name=\"/\" onClick={handleNavChange} to=\"/\">\n                Home\n              </StyledLink>\n            </Nav.Link>\n            <Nav.Link>\n              <StyledLink name=\"/about\" onClick={handleNavChange} to=\"/about\">\n                About\n              </StyledLink>\n            </Nav.Link>\n            {currentUser && (\n              <Nav.Link>\n                <StyledLink\n                  name=\"/profile\"\n                  onClick={handleNavChange}\n                  to=\"/profile\"\n                >\n                  Profile\n                </StyledLink>\n              </Nav.Link>\n            )}\n            {currentUser && userData && userData.coach && (\n              <>\n                <Nav.Link>\n                  <StyledLink\n                    name=\"/clients\"\n                    onClick={handleNavChange}\n                    to=\"/clients\"\n                  >\n                    Clients\n                  </StyledLink>\n                </Nav.Link>\n                <NavDropdown title=\"Create\" id=\"collasible-nav-dropdown\">\n                  <NavDropdown.Item>\n                    <StyledDropdownLink\n                      name=\"/createclass\"\n                      onClick={handleNavChange}\n                      to=\"/createclass\"\n                    >\n                      Class\n                    </StyledDropdownLink>\n                  </NavDropdown.Item>\n                  <NavDropdown.Item>\n                    <StyledDropdownLink\n                      name=\"/createptsession\"\n                      onClick={handleNavChange}\n                      to=\"/createptsession\"\n                    >\n                      PT Session\n                    </StyledDropdownLink>\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </>\n            )}\n            {currentUser && userData && !userData.coach && (\n              <>\n                <Nav.Link>\n                  <StyledLink\n                    name=\"/leaderboard\"\n                    onClick={handleNavChange}\n                    to=\"/leaderboard\"\n                  >\n                    Leaderboard\n                  </StyledLink>\n                </Nav.Link>\n                <NavDropdown title=\"Classes\" id=\"collasible-nav-dropdown\">\n                  <NavDropdown.Item>\n                    <StyledDropdownLink\n                      name=\"/classes\"\n                      onClick={handleNavChange}\n                      to=\"/classes\"\n                    >\n                      Book Class\n                    </StyledDropdownLink>\n                  </NavDropdown.Item>\n                  <NavDropdown.Item>\n                    <StyledDropdownLink\n                      name=\"/buypasses\"\n                      onClick={handleNavChange}\n                      to=\"/buypasses\"\n                    >\n                      Buy Passes\n                    </StyledDropdownLink>\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </>\n            )}\n          </Nav>\n          <Nav>\n            {currentUser ? (\n              <Nav.Link>\n                <Button onClick={props.logout} variant=\"secondary\">\n                  Log Out\n                </Button>\n              </Nav.Link>\n            ) : (\n              <Nav.Link>\n                <StyledLink name=\"/login\" to=\"/login\">\n                  <Button variant=\"primary\" onClick={handleNavChange}>\n                    Log In\n                  </Button>\n                </StyledLink>\n              </Nav.Link>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport PopPop from \"react-poppop\";\nimport dateFormat from \"dateformat\";\nimport \"./Classes.css\";\n\nexport default class ClassModal extends Component {\n  state = {\n    show: this.props.oneClass ? true : false,\n    clients: [],\n    error: null,\n  };\n\n  componentDidMount() {\n    fetch(\n      `https://wod-with-faris-backend.herokuapp.com/usersessions?class_id=${this.props.oneClass.id}`,\n      {}\n    )\n      .then((resp) => resp.json())\n      .then((clients) => this.setState({ clients }));\n  }\n\n  toggleShow = (show) => {\n    this.setState({ show: show, error: null });\n    this.props.removeSelectedClass();\n  };\n\n  handleBookandUnBookClass = (id) => {\n    const isBooked = this.state.clients.find(\n      (client) => client.user.id === this.props.user.id\n    );\n    if (\n      isBooked === undefined &&\n      this.props.user.tokens > 0 &&\n      this.state.clients.length < this.props.oneClass.class_capacity\n    ) {\n      fetch(\"https://wod-with-faris-backend.herokuapp.com/usersession/book\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          user_id: this.props.user.id,\n          session_id: id,\n        }),\n      })\n        .then((resp) => resp.json())\n        .then((ClientsWithNewBooking) =>\n          this.setState({ clients: ClientsWithNewBooking, error: null })\n        )\n        .then(this.props.deductToken);\n\n      fetch(\"https://api.pushover.net/1/messages.json\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          token: \"adohia1ym9d8bopuvjys6zrgdu4psa\",\n          user: \"ubujnjnpw22cv58byd8w6kot7yx648\",\n          sound: \"cashregister\",\n          message: `${\n            this.props.user.first_name + \" \" + this.props.user.last_name\n          } booked the ${this.props.oneClass.time} class that's on ${dateFormat(\n            this.props.oneClass.date,\n            \"fullDate\"\n          )}`,\n        }),\n      });\n    } else if (isBooked && this.props.user.tokens >= 0) {\n      fetch(`https://wod-with-faris-backend.herokuapp.com/usersession/unbook`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          user_id: this.props.user.id,\n          session_id: id,\n        }),\n      })\n        .then((resp) => resp.json())\n        .then((deletedBooking) =>\n          this.setState({\n            clients: this.state.clients.filter(\n              (client) => client.user.id !== deletedBooking.user.id\n            ),\n            error: null,\n          })\n        )\n        .then(this.props.addToken);\n\n      fetch(\"https://api.pushover.net/1/messages.json\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          token: \"adohia1ym9d8bopuvjys6zrgdu4psa\",\n          user: \"ubujnjnpw22cv58byd8w6kot7yx648\",\n          message: `${\n            this.props.user.first_name + \" \" + this.props.user.last_name\n          } unbooked the ${\n            this.props.oneClass.time + \" \" + this.props.oneClass.name\n          } class that's on ${dateFormat(\n            this.props.oneClass.date,\n            \"fullDate\"\n          )}`,\n        }),\n      });\n    } else if (this.props.user.tokens <= 0) {\n      this.setState({\n        error:\n          'Sorry, you have run out of passes. Please buy some more on the \"Buy Passes\" page.',\n      });\n    } else if (\n      this.state.clients.length === this.props.oneClass.class_capacity ||\n      this.state.clients.length > this.props.oneClass.class_capacity\n    ) {\n      this.setState({ error: \"Sorry, this class is fully booked\" });\n    }\n  };\n\n  render() {\n    const { show, clients, error } = this.state;\n    const { oneClass } = this.props;\n    const isBooked =\n      clients[0] &&\n      this.props.user &&\n      clients.find((client) => client.user.id === this.props.user.id)\n        ? true\n        : false;\n    const now = new Date();\n    const classDateAndTime = new Date(oneClass.date + \"T\" + oneClass.time);\n    const isInPast = classDateAndTime < now ? true : false;\n    return (\n      <div>\n        <PopPop\n          position=\"centerCenter\"\n          open={show}\n          closeBtn={true}\n          closeOnEsc={true}\n          onClose={() => this.toggleShow(false)}\n          closeOnOverlay={true}\n        >\n          <h1 className=\"workout-title\">\n            {oneClass.time + \" \" + oneClass.name}\n          </h1>{\" \"}\n          <div className=\"attending-progress-bar\">\n            <div\n              style={{\n                width: `${((clients.length / oneClass.class_capacity) * 100 >\n                100\n                  ? 100\n                  : (clients.length / oneClass.class_capacity) * 100\n                ).toFixed(2)}px`,\n              }}\n              className=\"inner-progress-bar\"\n            >\n              <span className=\"attending-txt\">\n                {clients.length === oneClass.class_capacity\n                  ? \"Fully Booked\"\n                  : clients.length + ` / ${oneClass.class_capacity}`}\n              </span>\n            </div>\n          </div>\n          <h3 className=\"coach-name\">\n            <strong>Coach: </strong>\n            {oneClass.coach.first_name + \" \" + oneClass.coach.last_name}\n          </h3>\n          {oneClass.description.split(\"\\n\").map((sentence) => (\n            <p className=\"desc-txt\">{sentence}</p>\n          ))}\n          {!isInPast ? (\n            <button\n              onClick={() =>\n                this.handleBookandUnBookClass(this.props.oneClass.id)\n              }\n              class=\"book-btn\"\n            >\n              {isBooked ? \"Cancel\" : \"Book Class\"}\n            </button>\n          ) : (\n            <button class=\"past-btn\">Already Passed</button>\n          )}\n          {error && <p className=\"error\">{this.state.error}</p>}\n        </PopPop>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ClassModal from \"./ClassModal\";\nimport ReactGA from \"react-ga\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"./Classes.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nfunction initializeReactGA() {\n  ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n  ReactGA.pageview(\"/classes\");\n}\n\nconst localizer = momentLocalizer(moment);\n\nexport default class Classes extends Component {\n  state = {\n    classes: [],\n    chosenClass: null,\n    user: null,\n    isLoading: true,\n    screenWidth: window.innerWidth,\n  };\n\n  componentWillMount() {\n    window.addEventListener(\"resize\", this.handleWindowSizeChange);\n  }\n\n  componentDidMount() {\n    initializeReactGA();\n\n    fetch(`https://wod-with-faris-backend.herokuapp.com/sessions`)\n      .then((resp) => resp.json())\n      .then((classes) =>\n        this.setState({\n          classes: classes,\n          isLoading: false,\n        })\n      );\n\n    fetch(\n      `https://wod-with-faris-backend.herokuapp.com/user/getuser?email=${this.props.currentUser.email}`\n    )\n      .then((resp) => resp.json())\n      .then((user) => this.setState({ user }));\n  }\n\n  handleWindowSizeChange = () => {\n    this.setState({ screenWidth: window.innerWidth });\n  };\n\n  handleDateChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      isLoading: true,\n    });\n    this.dateFetch(e.target.value);\n  };\n\n  handlePickClass = (e) => {\n    const pickedClass = this.state.classes.find(\n      (oneClass) => oneClass.id === e.id\n    );\n    this.setState({ chosenClass: pickedClass });\n  };\n\n  deductToken = () => {\n    const { user } = this.state;\n    this.setState({\n      user: {\n        id: user.id,\n        coach: user.coach,\n        first_name: user.first_name,\n        last_name: user.last_name,\n        email: user.email,\n        tokens: user.tokens - 1,\n      },\n    });\n    ReactGA.event({\n      category: \"User\",\n      action: `${\n        this.state.user.first_name + \" \" + this.state.user.last_name\n      } Booked a Class`,\n    });\n  };\n  addToken = () => {\n    const { user } = this.state;\n    this.setState({\n      user: {\n        id: user.id,\n        coach: user.coach,\n        first_name: user.first_name,\n        last_name: user.last_name,\n        email: user.email,\n        tokens: user.tokens + 1,\n      },\n    });\n    ReactGA.event({\n      category: \"User\",\n      action: `${\n        this.state.user.first_name + \" \" + this.state.user.last_name\n      } Cancelled a Class`,\n    });\n  };\n\n  dateFetch = (date) => {\n    fetch(`https://wod-with-faris-backend.herokuapp.com/sessions?date=${date}`)\n      .then((resp) => resp.json())\n      .then((classes) =>\n        this.setState({\n          classes: classes,\n          isLoading: false,\n        })\n      );\n  };\n\n  formatedClasses = (classes) => {\n    // eslint-disable-next-line\n    Date.prototype.addHours = function (h) {\n      this.setHours(this.getHours() + h);\n      return this;\n    };\n    return classes.map((oneClass) => ({\n      title: oneClass.name,\n      start: new Date(oneClass.date + \"T\" + oneClass.time),\n      end: new Date(oneClass.date + \"T\" + oneClass.time).addHours(1),\n      allDay: false,\n      id: oneClass.id,\n    }));\n  };\n\n  removeSelectedClass = () => {\n    this.setState({ chosenClass: null });\n  };\n\n  render() {\n    const { classes, isLoading, chosenClass, screenWidth } = this.state;\n    const isMobile = screenWidth <= 500;\n    return (\n      <div>\n        <h1 style={{ color: \"white\" }}>Book Class</h1>\n\n        <div className=\"container\">\n          <Calendar\n            onSelectEvent={this.handlePickClass}\n            defaultView={isMobile ? \"day\" : \"week\"}\n            localizer={localizer}\n            events={this.formatedClasses(classes)}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            style={{ height: 600, color: \"black\", backgroundColor: \"white\" }}\n          />\n          {isLoading && <button className=\"loading\"></button>}\n          {classes[0]\n            ? chosenClass && (\n                <ClassModal\n                  addToken={this.addToken}\n                  deductToken={this.deductToken}\n                  user={this.state.user}\n                  oneClass={chosenClass}\n                  handlePickClass={this.handlePickClass}\n                  removeSelectedClass={this.removeSelectedClass}\n                />\n              )\n            : !isLoading && <h1 style={{ color: \"white\" }}>No Classes</h1>}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport dateFormat from 'dateformat'\nimport './Classes.css'\n\nexport default class ClassCard extends Component {\n\n\n    handleCancelBooking = id => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/usersession/unbook`, {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.props.user.id,\n                    session_id: id\n                })\n            }).then(resp => resp.json()).then(deletedBooking => this.props.handleCancel(deletedBooking)).then(this.props.addToken)\n\n            fetch(\"https://api.pushover.net/1/messages.json\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    token: 'adohia1ym9d8bopuvjys6zrgdu4psa',\n                    user: 'ubujnjnpw22cv58byd8w6kot7yx648',\n                    message: `${this.props.user.first_name + \" \" + this.props.user.last_name} unbooked the ${this.props.upcomingClass.time + \" \" + this.props.upcomingClass.name} class that's on ${dateFormat(this.props.upcomingClass.date, \"fullDate\")}`\n                })\n            })\n    }\n\n    render() {\n        const { upcomingClass } = this.props\n        return (\n            <div className='class-card'>\n                <h2 className='card-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h2>\n                <p className='card-date'>{dateFormat(upcomingClass.date, \"fullDate\")}</p>\n                <button onClick={() => this.handleCancelBooking(upcomingClass.id)} className='book-btn'>Cancel</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport dateFormat from 'dateformat'\nimport PopPop from 'react-poppop';\nimport Select from 'react-select'\nimport './Classes.css'\n\nexport default class CoachClassCard extends Component {\n\n    state = {\n        show: false,\n        clients: [],\n        askDeleteConfirm: false,\n        editMode: false,\n        classDescription: this.props.upcomingClass.description,\n        addClient: false,\n        allClients: [],\n        clientToAdd: null\n    }\n    \n    componentDidMount(){\n        fetch(`https://wod-with-faris-backend.herokuapp.com/usersessions?class_id=${this.props.upcomingClass.id}`, {\n        }).then(resp => resp.json()).then(clients => this.setState({clients}))\n    }\n\n\n    handleClients = allClients => {\n        const formatedClients = allClients[0]&& allClients.map(client => {\n            return { label: client.first_name + \" \" + client.last_name, client: {first_name: client.first_name, last_name: client.last_name, id: client.id} }\n        })\n        this.setState({allClients: formatedClients})\n    }\n\n    handleDeleteClass = id => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/sessions/deleted/${id}`, {\n                method: \"DELETE\"\n            }).then(resp => resp.json()).then(deletedBooking => this.props.handleCancel(deletedBooking))\n        const ids = this.state.clients.map(client => {return client.user.id})\n        fetch(\"https://wod-with-faris-backend.herokuapp.com/sessions/returntokens\", {\n            method: \"POST\", \n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                client_ids: ids\n            })\n        }).then(this.setState({askDeleteConfirm: false}))\n    }\n\n    toggleShow = show => {\n        this.setState({show: show, tokenError: null});\n    }\n    toggleDeleteConfirm = () => {\n        this.setState({askDeleteConfirm: !this.state.askDeleteConfirm});\n    }\n\n\n    toggleEditMode = () => {\n        this.setState({editMode: !this.state.editMode})\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit = id => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/sessions/update/${id}`, {\n                method: \"PATCH\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    description: this.state.classDescription\n                })\n        }).then(this.setState({editMode: false}))\n    }\n\n    toggleAddClient = () => {\n        this.setState({addClient: !this.state.addClient})\n        fetch('https://wod-with-faris-backend.herokuapp.com/users/index').then(resp => resp.json()).then(allClients => this.handleClients(allClients))\n    }\n\n    handleAddClientOrCancel = () => {\n        if (!this.state.clientToAdd){\n            this.setState({addClient: false})\n        } else if (this.state.clientToAdd){\n            fetch(\"https://wod-with-faris-backend.herokuapp.com/usersession/book\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.state.clientToAdd.id,\n                    session_id: this.props.upcomingClass.id\n                })\n            }).then(resp => resp.json()).then(this.setState({clients: [...this.state.clients, {user: this.state.clientToAdd}], clientToAdd: null, addClient: null}))\n        }\n    }\n\n    handleSetClient = e => {\n        this.setState({clientToAdd: e.client})\n    }\n\n    render() {\n        const { upcomingClass, coach } = this.props\n        const { show, clients, askDeleteConfirm, editMode, classDescription, addClient, clientToAdd, allClients } = this.state\n        return (\n            <div className='coach-class-card'>\n                <h2 className='card-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h2>\n                <p className='card-date'>{dateFormat(upcomingClass.date, \"fullDate\")}</p>\n                {askDeleteConfirm? <div> <button onClick={() => this.handleDeleteClass(upcomingClass.id)} className='book-btn'>Confirm Delete</button> <button onClick={this.toggleDeleteConfirm} className='book-btn'>Cancel Delete</button> </div>: <button onClick={this.toggleDeleteConfirm} className='book-btn'>Delete Class</button>}\n                {askDeleteConfirm? undefined : <button onClick={() => this.toggleShow(true)} className='book-btn'>More Info</button>}\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                    <h1 className='workout-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h1> <div className='attending-progress-bar'><div style={{width:`${((clients.length/upcomingClass.class_capacity) * 100 > 100? 100 : (clients.length/upcomingClass.class_capacity) * 100).toFixed(2)}px`}}className='inner-progress-bar'><span className='attending-txt'>{clients.length === 8? \"Fully Booked\" : clients.length + ` / ${upcomingClass.class_capacity}`}</span></div></div>\n                    <h3 className='desc-txt'><strong>Coach: </strong>{coach.first_name + \" \" + coach.last_name}</h3>\n                    {!editMode?\n                    classDescription.split('\\n').map(sentence => (\n                        <p className='desc-txt'>{sentence}</p> \n                    ))\n                    :\n                    <textarea className='edit-desc' value={classDescription} onChange={this.handleChange} name='classDescription'/>\n                    } \n                    <div>\n                    {!editMode? <button className='book-btn' onClick={this.toggleEditMode}>Edit Workout</button> : <button className='book-btn' onClick={() => this.handleSubmit(upcomingClass.id)}>Submit</button>}\n                        <h3 className='desc-txt'>Signed  Up Clients</h3>\n                        {clients.map(client => (\n                            <p className='desc-txt'>- {client.user.first_name + \" \" + client.user.last_name}</p>\n                        ))}\n                        {!clients[0]&&\n                            <p className='desc-txt'>None</p>\n                        }\n                    {!addClient? <button className='book-btn' onClick={this.toggleAddClient}>Add Client</button> :<><Select className='activity-input' options={allClients} onChange={this.handleSetClient}/> <button className='book-btn' onClick={this.handleAddClientOrCancel}>{clientToAdd? 'Submit' : 'Cancel'}</button></>}\n                    </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport PopPop from 'react-poppop';\nimport './AllUpcomingClasses.css'\nimport CoachClassCard from './CoachClassCard';\n\nexport default class AllUpcomingClasses extends Component {\n    render() {\n        const { show, upcomingClasses, handleCancel, user, toggleShow } = this.props\n        const timeOrderedClasses = upcomingClasses[0]? upcomingClasses.sort((a, b) => new Date(a.date + \" \" + a.time) - new Date(b.date + \" \" + b.time)) : upcomingClasses\n        return (\n            <div>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => toggleShow(false)}\n                        closeOnOverlay={true}>\n                <div className='all-upcoming-classes-container'>\n                    <h1 className='header'>All Upcoming Classes</h1>\n                    {timeOrderedClasses.map(upcomingClass => (\n                        <>\n                            <CoachClassCard handleCancel={handleCancel} user={user} coach={upcomingClass.coach} upcomingClass={upcomingClass.class}/>\n                        </>\n                    ))}\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { CardElement } from \"@stripe/react-stripe-js\";\n\nconst CARD_ELEMENT_OPTIONS = {\n  iconStyle: \"solid\",\n  hidePostalCode: true,\n  style: {\n    base: {\n      iconColor: \"rgb(240, 57, 122)\",\n      color: \"rgb(240, 57, 122)\",\n      fontSize: \"16px\",\n      fontFamily: '\"Open Sans\", sans-serif',\n      fontSmoothing: \"antialiased\",\n      \"::placeholder\": {\n        color: \"#CFD7DF\"\n      }\n    },\n    invalid: {\n      color: \"#e5424d\",\n      \":focus\": {\n        color: \"#303238\"\n      }\n    }\n  }\n};\n\nfunction CardSection() {\n  return <CardElement options={CARD_ELEMENT_OPTIONS} />;\n}\n\nexport default CardSection","import React, { Component } from 'react'\nimport { CardElement } from \"@stripe/react-stripe-js\"\nimport CardSection from './CardSection'\nimport dateFormat from 'dateformat'\nimport './CheckoutForm.css'\n\nexport default class PTSessionCheckoutForm extends Component {\n\n    state = {\n        name: \"\",\n        paymentSuccess: false, \n        paymentError: null,\n        paymentPending: false\n    }\n\n\n    handleNameChange = event => {\n        this.setState({name: event.target.value})\n    }\n\n    handleSubmit = async event => {\n        this.setState({paymentPending: true})\n        event.preventDefault();\n    \n        const { stripe, elements } = this.props;\n        if (!stripe || !elements) {\n            return;\n        }\n\n        const card = elements.getElement(CardElement);\n        const result = await stripe.createToken(card);\n        if (result.error) {\n            window.alert(result.error.message);\n        } else {\n            const { upcomingPTSession } = this.props\n            fetch(\"https://wod-with-faris-backend.herokuapp.com/users/payforptsession\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    price: upcomingPTSession.price,\n                    description: `Personal Training Session`, \n                    token: result.token.id\n                })\n            }).then(resp => resp.json()).then(resp => this.cardPayment(resp.client_secret))\n        }\n    };\n\n\n    cardPayment = async (clientSecret) => {\n        const { stripe, elements } = this.props;\n        const { name } = this.state\n\n        const result = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n              card: elements.getElement(CardElement),\n              billing_details: {\n                name: name,\n              },\n            }\n    })\n\n        if (result.error) {\n            this.setState({paymentPending: false, paymentError: result.error.message})\n          } else {\n            if (result.paymentIntent.status === 'succeeded') {\n                this.setState({paymentPending: false, paymentSuccess: true, paymentError: null})\n                this.props.handlePaid()\n                \n                const { upcomingPTSession } = this.props\n                fetch(\"https://wod-with-faris-backend.herokuapp.com/ptsessions/confirmptsession\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    pt_session: upcomingPTSession.id\n                })\n            }).then(\n                setTimeout(() => {\n                    this.setState({paymentSuccess: false})\n                }, 6000)\n                )\n\n                fetch(\"https://api.pushover.net/1/messages.json\", {\n                    method: \"POST\", \n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        token: 'adohia1ym9d8bopuvjys6zrgdu4psa',\n                        user: 'ubujnjnpw22cv58byd8w6kot7yx648',\n                        sound: 'cashregister',\n                        message: `${this.state.name} paid CHF${this.props.upcomingPTSession.price} and confirmed the Personal Training that is on ${dateFormat(this.props.upcomingPTSession.date, \"fullDate\")} at ${this.props.upcomingPTSession.time}`\n                    })\n                })\n            }\n        }\n    }\n\n    render() {\n        const { upcomingPTSession } = this.props\n        const { name, paymentSuccess, paymentError, paymentPending } = this.state\n        return (\n            <div>\n                <div className='checkout-form'>\n                    {paymentSuccess&&<p className='payment-success'>Payment Successful</p>}\n                    {paymentError&&<p className='payment-error'>Error: {paymentError}</p>}\n                {paymentSuccess?\n                    <h1 className='payment-success'>Thank you! Your PT Session has been confirmed!</h1>\n                :\n                <>\n                    <div class=\"product-info\">\n                        <h4 className=\"product-price\">Total: CHF {upcomingPTSession.price}</h4>\n                    </div>\n                    <form className='form' onSubmit={this.handleSubmit}>\n                        <input className='name-card-input' required value={name} onChange={this.handleNameChange} type='text' placeholder='Full Name as displayed on card'/>\n                        <CardSection/>\n                        {paymentPending? <button className='loading-spinner'> </button> : <button className=\"btn-pay\">Pay</button>}\n                    </form>\n                </>\n                }\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport PopPop from 'react-poppop'\nimport dateFormat from 'dateformat'\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { ElementsConsumer } from \"@stripe/react-stripe-js\"\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport PTSessionCheckoutForm from './PTSessionCheckoutForm'\nimport './PTSessionCard.css'\n\nconst stripePromise = loadStripe('pk_live_4g3t1ZRoe5slZQbs5Vy3IaGe00fOR9THIq');\n\nexport default class PTSessionCard extends Component {\n\n    state = {\n        show: false,\n        paid: this.props.upcomingPTSession.paid\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n\n    handlePaid = () => {\n        this.setState({paid: true})\n    }\n\n    render() {\n        const { upcomingPTSession, user } = this.props\n        const { show, paid } = this.state \n        return (\n            <div className='class-card'>\n                <h2 className='card-title'>{upcomingPTSession.time + \" \" + upcomingPTSession.name}</h2>\n                <p className='card-date'>{dateFormat(upcomingPTSession.date, \"fullDate\")}</p>\n                <button onClick={() => this.toggleShow(true)} className='book-btn'>{!paid? 'Confirm' : 'Confirmed!'}</button>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                <div className='pt-session-modal'>\n                    <h1 className='pt-modal-title'>{upcomingPTSession.time + \" \" + upcomingPTSession.name}</h1>\n                    <div className='pt-paid-status'><p style={{textAlign: 'center'}}>Status: <p style={paid? {color: 'green'} : {color: 'red'}}>{paid? 'Paid' : 'Not Paid'}</p></p></div>\n                    {/* <h3 className='desc-txt'><strong>Coach: </strong>{upcomingPTSession.coach.first_name + \" \" + upcomingPTSession.coach.last_name}</h3> */}\n                    <h3 className='desc-txt'><strong>Location: </strong>{upcomingPTSession.location}</h3>\n                    {upcomingPTSession.description.split('\\n').map(sentence => (\n                    <p className='desc-txt'>{sentence}</p> \n                    ))\n                    }\n                    {!paid&&\n                        <Elements stripe={stripePromise}>\n                        <ElementsConsumer>\n                            {({ stripe, elements }) => (\n                            <PTSessionCheckoutForm handlePaid={this.handlePaid} userEmail={user.email} upcomingPTSession={upcomingPTSession} stripe={stripe} elements={elements} />\n                            )}\n                        </ElementsConsumer>\n                        </Elements>\n                    }\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport dateFormat from 'dateformat'\nimport PopPop from 'react-poppop';\nimport './Classes.css'\n\nexport default class CoachPTSessionCard extends Component {\n\n    state = {\n        show: false,\n        askDeleteConfirm: false,\n        editMode: false,\n        ptDescription: this.props.upcomingPTSession.description,\n        ptLocation: this.props.upcomingPTSession.location,\n        ptTime: this.props.upcomingPTSession.time, \n        ptDate: this.props.upcomingPTSession.date,\n        ptPrice: this.props.upcomingPTSession.price\n\n    }\n    \n    componentDidMount(){\n\n    }\n\n\n    handleDeletePTSession = id => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/ptsessions/delete/${id}`, {\n                method: \"DELETE\"\n            }).then(resp => resp.json()).then(deletedBooking => this.handleDeletedBooking(deletedBooking))\n    }\n\n    handleDeletedBooking = deletedBooking => {\n        this.props.handleCancel(deletedBooking)\n        this.setState({askDeleteConfirm: false})\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n    toggleDeleteConfirm = () => {\n        this.setState({askDeleteConfirm: !this.state.askDeleteConfirm});\n    }\n\n\n    toggleEditMode = () => {\n        this.setState({editMode: !this.state.editMode})\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit = id => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/ptsessions/update/${id}`, {\n                method: \"PATCH\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    description: this.state.ptDescription,\n                    location: this.state.ptLocation, \n                    time: this.state.ptTime,\n                    date: this.state.ptDate,\n                    price: parseInt(this.state.ptPrice)\n                })\n        }).then(this.setState({editMode: false}))\n    }\n\n    render() {\n        const { upcomingPTSession, client } = this.props\n        const { show, askDeleteConfirm, editMode, ptDescription, ptLocation, ptTime, ptDate, ptPrice } = this.state\n        return (\n            <div className='coach-class-card'>\n                <h2 className='card-title'>{upcomingPTSession.time + \" \" + upcomingPTSession.name}</h2>\n                <p className='card-date'>{dateFormat(upcomingPTSession.date, \"fullDate\")}</p>\n                {askDeleteConfirm? <div> <button onClick={() => this.handleDeletePTSession(upcomingPTSession.id)} className='book-btn'>Confirm Delete</button> <button onClick={this.toggleDeleteConfirm} className='book-btn'>Cancel Delete</button> </div>: <button onClick={this.toggleDeleteConfirm} className='book-btn'>Delete Class</button>}\n                {askDeleteConfirm? undefined : <button onClick={() => this.toggleShow(true)} className='book-btn'>More Info</button>}\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                    <h1 className='workout-title'>{upcomingPTSession.time + \" \" + upcomingPTSession.name}</h1>\n                    <div><p style={{textAlign: 'center', color: 'black'}}>Status: <p style={upcomingPTSession.paid? {color: 'green'} : {color: 'red'}}>{upcomingPTSession.paid? 'Paid' : 'Not Paid'}</p></p></div>\n                    <h3 className='desc-txt'>Client: {client.first_name + \" \" + client.last_name}</h3>\n                    <h3 className='desc-txt'>Price: CHF {!editMode? ptPrice : <input type='number' name='ptPrice' value={ptPrice} onChange={this.handleChange}/>}</h3>\n                    <h3 className='desc-txt'>Location: {!editMode? ptLocation : <input type='text' name='ptLocation' value={ptLocation} onChange={this.handleChange}/>}</h3>\n                    <h3 className='desc-txt'>Date: {!editMode? dateFormat(ptDate, \"fullDate\") : <input type='date' name='ptDate' value={ptDate} onChange={this.handleChange}/>}</h3>\n                    <h3 className='desc-txt'>Time: {!editMode? ptTime : <input type='time' name='ptTime' value={ptTime} onChange={this.handleChange}/>}</h3>\n                    {!editMode?\n                    ptDescription.split('\\n').map(sentence => (\n                        <p className='desc-txt'>{sentence}</p> \n                    ))\n                    :\n                    <textarea className='edit-desc' value={ptDescription} onChange={this.handleChange} name='ptDescription'/>\n                    } \n                    <div>\n                    {!editMode? <button className='book-btn' onClick={this.toggleEditMode}>Edit Workout</button> : <button className='book-btn' onClick={() => this.handleSubmit(upcomingPTSession.id)}>Submit</button>}\n\n                    </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { useState, useEffect } from \"react\";\nimport ClassCard from \"./ClassCard\";\nimport CoachClassCard from \"./CoachClassCard\";\nimport ReactGA from \"react-ga\";\nimport AllUpcomingClasses from \"./AllUpcomingClasses\";\nimport PTSessionCard from \"./PTSessionCard\";\nimport CoachPTSessionCard from \"./CoachPTSessionCard\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport \"./Profile.css\";\n\nfunction initializeReactGA() {\n  ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n  ReactGA.pageview(\"/profile\");\n}\n\nexport default function Profile(props) {\n  const [user, setUser] = useState(null);\n  const [upcomingClasses, setUpcomingClasses] = useState([]);\n  const [upcomingPTSessions, setUpcomingPTSessions] = useState([]);\n  const [showUpcomingClasses, setShowUpcomingClasses] = useState(false);\n\n  useEffect(() => {\n    initializeReactGA();\n\n    fetch(\n      `https://wod-with-faris-backend.herokuapp.com/user/getuser?email=${props.currentUser.email}`\n    )\n      .then((resp) => resp.json())\n      .then((user) => handleUser(user));\n\n    fetch(\n      `https://wod-with-faris-backend.herokuapp.com/usersession/upcomingclasses?email=${props.currentUser.email}`\n    )\n      .then((resp) => resp.json())\n      .then((upcoming) => handleUpcomingClasses(upcoming));\n  }, [props.currentUser.email]);\n\n  const handleUpcomingClasses = (upcoming) => {\n    setUpcomingClasses(upcoming.classes);\n    setUpcomingPTSessions(upcoming.ptsessions);\n  };\n\n  const handleUser = (user) => {\n    setUser(user);\n  };\n\n  const addToken = () => {\n    const updatedUser = {\n      id: user.id,\n      coach: user.coach,\n      first_name: user.first_name,\n      last_name: user.last_name,\n      email: user.email,\n      tokens: user.tokens + 1,\n    };\n    setUser(updatedUser);\n  };\n\n  const handleCancel = (deletedBooking) => {\n    setUpcomingClasses(\n      upcomingClasses.filter(\n        (booking) => booking.class.id !== deletedBooking.session.id\n      )\n    );\n  };\n  const handleDeleteClass = (deletedClass) => {\n    setUpcomingClasses(\n      upcomingClasses.filter((booking) => booking.class.id !== deletedClass.id)\n    );\n  };\n  const handleDeletePTSession = (deletedClass) => {\n    setUpcomingPTSessions(\n      upcomingPTSessions.filter(\n        (ptSession) => ptSession.ptsession.id !== deletedClass.id\n      )\n    );\n  };\n\n  const toggleShowUpcomingClasses = (show) => {\n    setShowUpcomingClasses(show);\n  };\n\n  const timeOrderedClasses = upcomingClasses[0]\n    ? upcomingClasses[0].class\n      ? upcomingClasses.sort(\n          (a, b) =>\n            new Date(a.class.date + \"T\" + a.class.time) -\n            new Date(b.class.date + \"T\" + b.class.time)\n        )\n      : upcomingClasses.sort(\n          (a, b) =>\n            new Date(a.date + \"T\" + a.time) - new Date(b.date + \"T\" + b.time)\n        )\n    : upcomingClasses;\n  const timeOrderedPTSessions = upcomingPTSessions[0]\n    ? upcomingPTSessions[0].ptsession\n      ? upcomingPTSessions.sort(\n          (a, b) =>\n            new Date(a.ptsession.date + \" \" + a.ptsession.time) -\n            new Date(b.ptsession.date + \" \" + b.ptsession.time)\n        )\n      : upcomingPTSessions.sort(\n          (a, b) =>\n            new Date(a.date + \" \" + a.time) - new Date(b.date + \" \" + b.time)\n        )\n    : upcomingPTSessions;\n  const orderedByDateUpcomingClasses =\n    timeOrderedClasses &&\n    timeOrderedClasses.sort((a, b) => new Date(a.date) - new Date(b.date));\n  const orderedByDateUpcomingPTsessions =\n    timeOrderedPTSessions &&\n    timeOrderedPTSessions.sort((a, b) => new Date(a.date) - new Date(b.date));\n  const SlicedUpcomingClasses =\n    orderedByDateUpcomingClasses && orderedByDateUpcomingClasses.slice(0, 2);\n  const SlicedUpcomingPTSessions =\n    orderedByDateUpcomingPTsessions &&\n    orderedByDateUpcomingPTsessions.slice(0, 2);\n  return (\n    <div>\n      <div className=\"profile-container\">\n        {user ? (\n          <>\n            <h1 className=\"name-h1\">\n              {user.first_name + \" \" + user.last_name}\n            </h1>\n            {!user.coach && (\n              <Button\n                style={{\n                  display: \"block\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                }}\n                variant={user.tokens > 1 ? \"primary\" : \"danger\"}\n              >\n                Class Passes <Badge variant=\"light\">{user.tokens}</Badge>\n                <span className=\"sr-only\">class passes</span>\n              </Button>\n            )}\n            <div className=\"upcoming-classes-container\">\n              <div>\n                <h2 className=\"upcoming-classes-title\">Upcoming Classes: </h2>\n                {!user.coach &&\n                  upcomingClasses[0] &&\n                  SlicedUpcomingClasses.map((upcomingClass) => (\n                    <ClassCard\n                      handleCancel={handleCancel}\n                      addToken={addToken}\n                      user={user}\n                      upcomingClass={upcomingClass.class}\n                    />\n                  ))}\n                {user.coach && upcomingClasses[0] && (\n                  <button\n                    onClick={() => toggleShowUpcomingClasses(true)}\n                    className=\"all-upcoming-classes-btn\"\n                  >\n                    All upcoming classes\n                  </button>\n                )}\n                {showUpcomingClasses && (\n                  <AllUpcomingClasses\n                    toggleShow={toggleShowUpcomingClasses}\n                    handleCancel={handleDeleteClass}\n                    user={user}\n                    show={showUpcomingClasses}\n                    upcomingClasses={orderedByDateUpcomingClasses}\n                  />\n                )}\n                {user.coach &&\n                  upcomingClasses[0] &&\n                  SlicedUpcomingClasses.map((upcomingClass) => (\n                    <CoachClassCard\n                      handleCancel={handleDeleteClass}\n                      user={user}\n                      coach={upcomingClass.coach}\n                      upcomingClass={upcomingClass.class}\n                    />\n                  ))}\n                {!upcomingClasses[0] && <h3 className=\"none\">None</h3>}\n              </div>\n              <div className=\"upcoming-pt-sessions\">\n                <h2 className=\"upcoming-classes-title\">\n                  Upcoming PT Sessions:{\" \"}\n                </h2>\n                {!user.coach &&\n                  upcomingPTSessions[0] &&\n                  SlicedUpcomingPTSessions.map((upcomingPTSession) => (\n                    <PTSessionCard\n                      user={user}\n                      upcomingPTSession={upcomingPTSession}\n                    />\n                  ))}\n                {user.coach &&\n                  upcomingPTSessions[0] &&\n                  SlicedUpcomingPTSessions.map((upcomingPTSession) => (\n                    <CoachPTSessionCard\n                      handleCancel={handleDeletePTSession}\n                      user={user}\n                      upcomingPTSession={upcomingPTSession.ptsession}\n                      client={upcomingPTSession.user}\n                    />\n                  ))}\n              </div>\n\n              {!upcomingPTSessions[0] && <h3 className=\"none\">None</h3>}\n            </div>\n          </>\n        ) : (\n          <button className=\"loading\"></button>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react'\nimport './CreateClass.css'\n\nexport default class CreateClass extends Component {\n\n    state = {\n        name: null,\n        description: null,\n        date: null,\n        time: null,\n        classCapacity: 8, \n        coach: null, \n        success: false,\n        errorMessage: null\n    }\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris-backend.herokuapp.com/user/getuser?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(coach => this.setState({coach}))\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n         })\n    }\n\n    handleCreateClass = () => {\n        const { name, description, date, time, coach, classCapacity } = this.state\n        if ( name && description && date && time && classCapacity  ){\n        fetch(\"https://wod-with-faris-backend.herokuapp.com/sessions/create\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: name, \n                    description: description,\n                    date: date,\n                    time: time,\n                    class_capacity: parseInt(classCapacity),\n                    user_id: coach.id\n                })\n            }).then(resp => resp.json()).then(this.setState({success: true, errorMessage: null, name: \"\", description: \"\", date: \"\", time: \"\"}))\n            .catch(errorMessage => this.setState({errorMessage}))\n        } else {\n            this.setState({errorMessage: \"Please fill all fields\"})\n        }\n    } \n\n    render() {\n        const { success, errorMessage, name, date, description, time, classCapacity } = this.state\n        return (\n            <div>\n                <h1 className='create-class-title'>Create Class</h1>\n                {success&&\n                        <h2 className='success'>Class Created!</h2>\n                }\n                {errorMessage&&\n                        <h2 className='error-message'>{errorMessage}</h2>\n                }\n                <div className='create-class-div'>\n                    <h3 className='create-class-h3'>Name</h3>\n                    <input name='name' value={name} onChange={this.handleChange} className='create-class-input' type='text'/>\n                    <h3 className='create-class-h3' >Description</h3>\n                    <textarea name='description' value={description} onChange={this.handleChange} className='create-class-textarea'/>\n                    <h3 className='create-class-h3'>Date</h3>\n                    <input name='date' value={date} onChange={this.handleChange} className='create-class-input' type='date'/>\n                    <h3 className='create-class-h3'>Time</h3>\n                    <input name='time' value={time} onChange={this.handleChange} className='create-class-input' type='time'/>\n                    <h3 className='create-class-h3'>Class Capacity</h3>\n                    <input name='classCapacity' value={classCapacity} onChange={this.handleChange} className='create-class-input' type='number'/>\n                    <button className='create-class-btn' onClick={this.handleCreateClass}>Create Class</button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Clients.css'\nimport PopPop from 'react-poppop';\n\nexport default class Client extends Component {\n\n    state = {\n        show: false, \n        editMode: false,\n        email: this.props.client.email,\n        tokens: this.props.client.tokens\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n    \n    toggleEditMode = () => {\n        this.setState({editMode: true})\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    submitEdit = id => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/user/update/${id}`, {\n                method: \"PATCH\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: this.state.email,\n                    tokens: this.state.tokens\n                })\n        }).then(this.setState({editMode: false}))\n    }\n\n    render() {\n        const { client } = this.props\n        const { show, email, tokens, editMode } = this.state\n        return (\n            <div>\n                <h3 onClick={this.toggleShow}  className={tokens <=1? 'low-on-tokens-client' : 'client'}>{client.first_name + \" \" + client.last_name}</h3>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                            <div className='client-modal-container'>\n                                <h3 className='client-txt'>{client.first_name + \" \" + client.last_name}</h3>\n                                <p className='client-txt'>Email: </p> {!editMode? <p className='client-txt'>{email}</p> : <input onChange={this.handleChange} className='edit-input' value={email} name='email'/>}\n                                <p className='client-txt'>Class Passes: </p> {!editMode? <p className='client-txt'>{tokens}</p> : <input onChange={this.handleChange} className='edit-input' type='number' value={tokens} name='tokens'/>}\n                                {!editMode? <button onClick={this.toggleEditMode} className='edit-btn'>Edit</button> : <button onClick={() => this.submitEdit(client.id)} className='edit-btn'>Submit</button>}\n                            </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Clients.css'\nimport Client from './Client';\n\nexport default class Clients extends Component {\n\n    state = {\n        search: null,\n        allClients: []\n    }\n\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris-backend.herokuapp.com/users/index`)\n        .then(resp => resp.json())\n        .then(allClients => this.setState({allClients}))\n    }\n\n    handleSearch = e => {\n        const search = e.target.value\n        if (search.length > 0) {\n            this.setState({search})\n        } else if (search.length === 0){\n            this.setState({search: null})\n        }\n \n    }\n\n    fuzzyMatch = (compareTerm ,term) => {\n        if (term.length === 0)\n            return 1;\n        let string = compareTerm.toLowerCase();\n        let compare = term.toLowerCase();\n        let matches = 0;\n        for (let i = 0; i < compare.length; i++) {\n            string.indexOf(compare[i]) > -1 ? matches += 1 : matches -=1;\n        }\n        return matches / compareTerm.length;\n    }\n\n    sortSearch = (clients) => {\n        const results = clients.map(client => [client, this.fuzzyMatch(client.first_name + \" \" + client.last_name, this.state.search)]);\n        results.sort((a, b) => b[1] - a[1]);\n        const filteredResults = results.filter(result => result[1] > 0)\n        return filteredResults\n    }\n\n    render() {\n        const { allClients, search } = this.state\n        const alphebetizedClients = allClients.sort((a,b) =>  a.last_name.localeCompare(b.last_name))\n        const filteredClients = search? this.sortSearch(allClients) : alphebetizedClients\n        return (\n            <div>\n                <h1>Clients</h1>\n                <input className='search-bar' onChange={this.handleSearch} name='search' type='text'/>\n                <div className='clients-container'>\n                    {allClients&& allClients[0]&&\n\n                    filteredClients.map(client => (\n                        <Client client={search? client[0] : client}/>\n                    ))\n\n                    }\n                    {allClients&& !allClients[0]&&\n                        <h2>None</h2>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport PopPop from 'react-poppop';\nimport { CardElement } from \"@stripe/react-stripe-js\"\nimport CardSection from './CardSection'\nimport './CheckoutForm.css'\n\nexport default class CheckoutForm extends Component {\n\n    state = {\n        name: \"\",\n        paymentSuccess: false, \n        paymentError: null,\n        paymentPending: false\n    }\n\n\n    handleNameChange = event => {\n        this.setState({name: event.target.value})\n    }\n\n    handleSubmit = async event => {\n        this.setState({paymentPending: true})\n        event.preventDefault();\n    \n        const { stripe, elements } = this.props;\n        if (!stripe || !elements) {\n            return;\n        }\n\n        const card = elements.getElement(CardElement);\n        const result = await stripe.createToken(card);\n        if (result.error) {\n            window.alert(result.error.message);\n            this.setState({paymentPending: false})\n        } else {\n            const { quantity } = this.props\n            fetch(\"https://wod-with-faris-backend.herokuapp.com/users/buyclasspasses\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    quantity: quantity,\n                    description: `${quantity}X Class Passes`, \n                    token: result.token.id\n                })\n            }).then(resp => resp.json()).then(resp => this.cardPayment(resp.client_secret))\n        }\n    };\n\n\n    cardPayment = async (clientSecret) => {\n        const { stripe, elements } = this.props;\n        const { name } = this.state\n\n        const result = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n              card: elements.getElement(CardElement),\n              billing_details: {\n                name: name,\n              },\n            }\n    })\n\n        if (result.error) {\n            this.setState({paymentPending: false, paymentError: result.error.message})\n          } else {\n            if (result.paymentIntent.status === 'succeeded') {\n                this.setState({paymentPending: false, paymentSuccess: true, paymentError: null})\n                \n                const { quantity, userEmail } = this.props\n                fetch(\"https://wod-with-faris-backend.herokuapp.com/users/addclasspasses\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    quantity: quantity,\n                    user_email: userEmail\n                })\n            }).then(\n                setTimeout(() => {\n                    this.setState({paymentSuccess: false})\n                    this.props.toggleShow(false)\n                    this.props.resetQuantity()\n                }, 6000)\n                )\n\n                fetch(\"https://api.pushover.net/1/messages.json\", {\n                    method: \"POST\", \n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        token: 'adohia1ym9d8bopuvjys6zrgdu4psa',\n                        user: 'ubujnjnpw22cv58byd8w6kot7yx648',\n                        sound: 'cashregister',\n                        message: `${this.state.name} purchased ${this.props.quantity}X class passes`\n                    })\n                })\n            }\n        }\n    }\n\n    render() {\n        const { show, toggleShow, quantity } = this.props\n        const { name, paymentSuccess, paymentError, paymentPending } = this.state\n        return (\n            <div>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={false}\n                        onClose={() => toggleShow(false)}\n                        closeOnOverlay={false}>\n                <div className='checkout-form'>\n                    {paymentSuccess&&<p className='payment-success'>Payment Successful</p>}\n                    {paymentError&&<p className='payment-error'>Error: {paymentError}</p>}\n                {paymentSuccess?\n                    <h1 className='payment-success'>Thank you! {this.props.quantity}X Class Passes have been added to your account!</h1>\n                :\n                <>\n                    <div class=\"product-info\">\n                        <h3 className=\"product-title\">{quantity === 1? \"1X Class Pass\": quantity + \"X Class Passes\"}</h3>\n                        <h4 className=\"product-price\">Total: CHF {quantity * 10}</h4>\n                    </div>\n                    <form className='form' onSubmit={this.handleSubmit}>\n                        <input className='name-card-input' required value={name} onChange={this.handleNameChange} type='text' placeholder='Full Name as displayed on card'/>\n                        <CardSection/>\n                        {paymentPending? <button className='loading-spinner'> </button> : <button className=\"btn-pay\">Buy Now</button>}\n                    </form>\n                </>\n                }\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n\n\n","import React, { Component } from 'react'\nimport ReactGA from 'react-ga';\nimport './BuyPasses.css'\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { ElementsConsumer } from \"@stripe/react-stripe-js\"\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport CheckoutForm from './CheckoutForm';\n\nconst stripePromise = loadStripe('pk_live_4g3t1ZRoe5slZQbs5Vy3IaGe00fOR9THIq');\n\nexport default class BuyPasses extends Component {\n\n    state = {\n        quantity: 0, \n        purchaseAmountLimit: false, \n        show: false\n    }\n\n    handleQuantityChange = amount => {\n        const { quantity } = this.state\n        if (quantity > 0 && quantity < 5) {\n            this.setState({quantity: quantity + amount, purchaseAmountLimit: false})\n        } else if ( quantity === 0 && amount === 1) {\n            this.setState({quantity: 1, purchaseAmountLimit: false})\n        }else if (quantity === 5 && amount === -1) {\n            this.setState({quantity: quantity + amount, purchaseAmountLimit: false})\n        } else if (quantity === 5) {\n            this.setState({purchaseAmountLimit: true})\n        }\n        ReactGA.event({\n            category: 'User',\n            action: `${amount}X classes was added to the cart.`\n        });\n    }\n\n    resetQuantity = () => {\n        this.setState({quantity: 0})\n    }\n\n    toggleShow = show => {\n        if (this.state.quantity > 0) {\n            this.setState({show: show});\n        } else if (this.state.quantity === 0) {\n            window.alert(\"Quantity of class passes must be more than 0\")\n        }\n\n        ReactGA.event({\n            category: 'User',\n            action: `Checkout button was hit`\n        });\n    }\n\n    render() {\n        const { quantity, purchaseAmountLimit } = this.state\n        return (\n            <div>\n                <h1>Buy Passes</h1>\n                <div className='purchase-box'>\n                    <div>\n                        <h1 className='quantity-title'>Class Passes</h1>\n                        {purchaseAmountLimit&& <p className='limit'>Purchase limit is 5 classes</p>}\n                        <h1 className='quantity'>{quantity}</h1>\n                        <div className='buttons-container'>\n                            <button className='quantity-btn' onClick={() => this.handleQuantityChange(-1)}>-</button>\n                            <button className='quantity-btn' onClick={() => this.handleQuantityChange(1)}>+</button>\n                        </div>\n                        <h1 className='total'>Total: CHF {quantity * 10}</h1>\n                        <button onClick={() => this.toggleShow(true)} className='checkout-btn'>Checkout</button>\n                        <Elements stripe={stripePromise}>\n                        <ElementsConsumer>\n                            {({ stripe, elements }) => (\n                            <CheckoutForm resetQuantity={this.resetQuantity} userEmail={this.props.currentUser.email} show={this.state.show} toggleShow={this.toggleShow} quantity={quantity} stripe={stripe} elements={elements} />\n                            )}\n                        </ElementsConsumer>\n                        </Elements>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport './LeaderboardStat.css'\n\nexport default function LeaderboardStat(props) {\n\n    const { user, attendances_and_activities, calories_burned } = props.stat\n    \n    return (\n        <tr className='leaderboard-stat' style={props.highestNoOfAttendances === attendances_and_activities? {color: \"white\", backgroundColor: \"green\"} : null}>\n            <td>{user}</td>\n            <td>{attendances_and_activities}</td>\n            <td>~{calories_burned} Cal.</td>\n        </tr>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport LeaderboardStat from \"./LeaderboardStat\";\nimport \"./LeaderboardStat.css\";\n\nexport default function Leaderboard() {\n  useEffect(() => {\n    fetch(\n      \"https://wod-with-faris-backend.herokuapp.com/users/getallattendances\"\n    )\n      .then((resp) => resp.json())\n      .then((stats) => handleLeaderboardStats(stats));\n  }, []);\n\n  const [leaderboardStats, setLeaderboardStats] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const handleLeaderboardStats = (leaderboardStats) => {\n    setLeaderboardStats(leaderboardStats);\n    setIsLoading(false);\n  };\n\n  const sortedLeaderboardStats =\n    leaderboardStats[0] &&\n    leaderboardStats.sort(\n      (a, b) => b.attendances_and_activities - a.attendances_and_activities\n    );\n\n  const attendances_and_activities =\n    leaderboardStats[0] &&\n    leaderboardStats.map((stat) => stat.attendances_and_activities);\n\n  const highestNoOfAttendances = Math.max.apply(\n    Math,\n    attendances_and_activities\n  );\n\n  return (\n    <div>\n      <h1 style={{ color: \"white\" }}>Leaderboard</h1>\n      <div className=\"stats-container\">\n        <table className=\"leaderboard-table\">\n          <tr>\n            <th>Name</th>\n            <th>Classes</th>\n            <th>Calories Burned</th>\n          </tr>\n          {sortedLeaderboardStats &&\n            sortedLeaderboardStats.map((stat) => (\n              <LeaderboardStat\n                stat={stat}\n                highestNoOfAttendances={highestNoOfAttendances}\n              />\n            ))}\n        </table>\n        {isLoading && (\n          <div className=\"loading-btn-div\">\n            <button className=\"loading\"></button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react'\nimport Select from 'react-select'\nimport './CreateClass.css'\n\nexport default function CreatePTSession(props) {\n    const [name, setName] = useState(null)\n    const [location, setLocation] = useState(null)\n    const [client, setClient] = useState(null)\n    const [description, setDescription] = useState(null)\n    const [date, setDate] = useState(null)\n    const [time, setTime] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(false)\n    const [success, setSuccess] = useState(false)\n    const [clients, setClients] = useState([])\n    const [price, setPrice] = useState(50)\n\n    useEffect(() => {\n        fetch('https://wod-with-faris-backend.herokuapp.com/users/index').then(resp => resp.json()).then(allClients => handleClients(allClients))\n    }, [])\n\n    const handleCreatePtSession = () => {\n        if ( name && description && date && time && client && location && price  ){\n            fetch(\"https://wod-with-faris-backend.herokuapp.com/ptsessions/create\", {\n                    method: \"POST\", \n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        name: name, \n                        description: description,\n                        date: date,\n                        time: time,\n                        location: location,\n                        paid: false,\n                        price: parseInt(price),\n                        coach_email: props.currentUser.email,\n                        client_email: client\n                    })\n                }).then(resp => resp.json()).then(handleSuccess)\n                .catch(errorMessage => setErrorMessage(errorMessage))\n            } else {\n                setErrorMessage(\"Please fill all fields\")\n            }\n    }\n\n    const handleSuccess = () => {\n        setSuccess(\"PT Session Created!\")\n        setErrorMessage(\"\")\n        setName(\"\")\n        setDescription(\"\")\n        setDate(\"\")\n        setTime(\"\")\n        setClient(\"\")\n        setLocation(\"\")\n        setPrice(\"\")\n    }\n\n    const handleClients = allClients => {\n        const formatedClients = allClients[0]&& allClients.map(client => {\n            return { label: client.first_name + \" \" + client.last_name, email: client.email }\n        })\n        setClients(formatedClients)\n    }\n\n    const handleSetClient = e => {\n        setClient(e.email)\n    }\n\n    return (\n        <div>\n            <h1 className='create-class-title'>Create PT Session</h1>\n                {success&&\n                        <h2 className='success'>PT Session Created!</h2>\n                }\n                {errorMessage&&\n                        <h2 className='error-message'>{errorMessage}</h2>\n                }\n                <div className='create-class-div'>\n                    <h3 className='create-class-h3'>Name</h3>\n                    <input name='name' value={name} onChange={(e) => setName(e.target.value)} className='create-class-input' type='text'/>\n                    <h3 className='create-class-h3' >Description</h3>\n                    <textarea name='description' value={description} onChange={(e) => setDescription(e.target.value)} className='create-class-textarea'/>\n                    <h3 className='create-class-h3'>Date</h3>\n                    <input name='date' value={date} onChange={(e) => setDate(e.target.value)} className='create-class-input' type='date'/>\n                    <h3 className='create-class-h3'>Time</h3>\n                    <input name='time' onChange={(e) => setTime(e.target.value)} className='create-class-input' type='time'/>\n                    <h3 className='create-class-h3'>Location</h3>\n                    <input name='location' value={location} onChange={(e) => setLocation(e.target.value)} className='create-class-input' type='text'/>\n                    <h3 className='create-class-h3'>Price (CHF)</h3>\n                    <input name='price' value={price} onChange={(e) => setPrice(e.target.value)} className='create-class-input' type='number'/>\n                    <h3 className='create-class-h3'>Client</h3>\n                    <Select className='client-select-input' options={clients} onChange={handleSetClient}/>\n                    <button className='create-pt-session-btn' onClick={handleCreatePtSession}>Create PT Session</button>\n                </div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\nimport farisPic from \"../Images/faris_img.JPG\";\nimport aboutImg1 from \"../Images/about_img_1.JPG\";\nimport vbc from \"../virtual_business_card/vbc.vcf\";\nimport Badge from \"react-bootstrap/Badge\";\nimport \"./About.css\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1>About</h1>\n      <Container fluid>\n        <p className=\"about-txt\">\n          WOD-WITH-FARIS was created with the sole purpose of making high\n          quality fitness coaching easily accesible to the masses. Workouts are\n          designed for athletes of all levels and from all backgrounds. They are\n          scalable and adjustable to any injury and the inclusion or exclusion\n          of equipment. The W-W-F program is fashioned to increase atheltic\n          perfomance (power, speed, endurance & stength) along with help improve\n          general health and quality of life.\n        </p>\n        <Image className=\"about-main-img\" src={aboutImg1} fluid={true} />\n        <h2 className=\"about-team-heading\">The Team</h2>\n        <Image className=\"about-team-img\" src={farisPic} thumbnail />\n        <h3 className=\"about-team-heading-2\">Founder and Coach: Faris Aziz</h3>\n        <Button className=\"contact-button\" variant=\"primary\">\n          <a className=\"contact-button\" href={vbc}>\n            Contact\n          </a>\n        </Button>\n        <h2 className=\"about-team-heading\">Qualifications:</h2>\n        <p className=\"qualifications-txt\">- CrossFit Level 2 Trainer</p>\n        <p className=\"qualifications-txt\">- CrossFit Level 1 Trainer</p>\n        <p className=\"qualifications-txt\">- CrossFit Scaling Certificate</p>\n        <p className=\"qualifications-txt\">\n          - CrossFit Spot the Flaw Certificate\n        </p>\n        <p className=\"qualifications-txt\">\n          - CrossFit Lesson Planning Certificate\n        </p>\n        <p className=\"qualifications-txt\">\n          Experience With:\n          <Badge className=\"experience-pill\" pill variant=\"primary\">\n            Strongman\n          </Badge>\n          <Badge className=\"experience-pill\" pill variant=\"primary\">\n            Gymnastics\n          </Badge>\n          <Badge className=\"experience-pill\" pill variant=\"primary\">\n            Olympic Lifting\n          </Badge>\n          <Badge className=\"experience-pill\" pill variant=\"primary\">\n            Functional Training\n          </Badge>\n          <Badge className=\"experience-pill\" pill variant=\"primary\">\n            Powerlifting\n          </Badge>\n          <Badge className=\"experience-pill\" pill variant=\"primary\">\n            Aerobic Capacity Training\n          </Badge>\n          <Badge className=\"experience-pill\" pill variant=\"primary\">\n            5+ Years CrossFit\n          </Badge>\n        </p>\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { Route } from \"react-router-dom\";\nimport ReactGA from \"react-ga\";\nimport Home from \"./Components/Home\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Login from \"./Components/Login\";\nimport SignUp from \"./Components/SignUp\";\nimport app from \"./base\";\nimport NavBar from \"./Components/NavBar\";\nimport Classes from \"./Components/Classes\";\nimport Profile from \"./Components/Profile\";\nimport CreateClass from \"./Components/CreateClass\";\nimport Clients from \"./Components/Clients\";\nimport BuyPasses from \"./Components/BuyPasses\";\nimport Leaderboard from \"./Components/Leaderboard\";\nimport { Redirect } from \"react-router\";\nimport CreatePTSession from \"./Components/CreatePTSession\";\nimport About from \"./Components/About\";\n\nclass App extends React.Component {\n  state = {\n    currentUser: null,\n    userData: null,\n    isHome: true,\n  };\n\n  componentWillMount() {\n    const lastPage = localStorage.getItem(\"prevUrl\");\n    if (lastPage === \"/\") {\n      this.setState({ isHome: true });\n    } else {\n      this.setState({ isHome: false });\n    }\n  }\n\n  handleSetUser = (user) => {\n    this.setState({ currentUser: user });\n    fetch(\n      `https://wod-with-faris-backend.herokuapp.com/user/getuser?email=${user.email}`\n    )\n      .then((resp) => resp.json())\n      .then((userData) => this.setState({ userData }));\n  };\n\n  setHome = (state) => {\n    this.setState({ isHome: state });\n  };\n\n  handleLogout = () => {\n    ReactGA.event({\n      category: \"User\",\n      action: `${\n        this.state.userData.first_name + \" \" + this.state.userData.last_name\n      } logged out`,\n    });\n    app.auth().signOut();\n    this.setState({ currentUser: null });\n\n    localStorage.removeItem(\"prevUrl\");\n  };\n\n  render() {\n    const lastPage = localStorage.getItem(\"prevUrl\");\n    const { currentUser, userData, isHome } = this.state;\n    return (\n      <>\n        <NavBar\n          setHome={this.setHome}\n          userData={userData}\n          logout={this.handleLogout}\n          currentUser={currentUser}\n        />\n        <PrivateRoute exact path=\"/classes\" component={Classes} />\n        <PrivateRoute exact path=\"/profile\" component={Profile} />\n        <PrivateRoute exact path=\"/createclass\" component={CreateClass} />\n        <PrivateRoute exact path=\"/clients\" component={Clients} />\n        <PrivateRoute exact path=\"/buypasses\" component={BuyPasses} />\n        <PrivateRoute exact path=\"/leaderboard\" component={Leaderboard} />\n        <Route exact path=\"/about\">\n          <About />\n        </Route>\n        <PrivateRoute\n          exact\n          path=\"/createptsession\"\n          component={CreatePTSession}\n        />\n        <Route exact path=\"/\">\n          {isHome ? (\n            <Home user={userData} setUser={this.handleSetUser} />\n          ) : lastPage ? (\n            <Redirect to={lastPage} />\n          ) : (\n            <Home user={userData} setUser={this.handleSetUser} />\n          )}\n        </Route>\n        <Route exact path=\"/login\">\n          <Login setHome={this.setHome} setUser={this.handleSetUser} />\n        </Route>\n        <Route exact path=\"/signup\">\n          <SignUp setHome={this.setHome} />\n        </Route>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport Bugsnag from '@bugsnag/js'\nimport BugsnagPluginReact from '@bugsnag/plugin-react'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { AuthProvider } from './Auth'\n\nBugsnag.start({\n  apiKey: 'f2c95ccfa378c93b437a0d07e1619053',\n  plugins: [new BugsnagPluginReact(React)]\n})\n\nconst ErrorBoundary = Bugsnag.getPlugin('react')\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <Router>\n        <ErrorBoundary>\n          <App />\n        </ErrorBoundary>\n      </Router>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}