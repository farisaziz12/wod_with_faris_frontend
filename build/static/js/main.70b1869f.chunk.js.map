{"version":3,"sources":["base.js","Components/Schedule.js","Components/Home.js","Auth.js","PrivateRoute.js","Components/Login.js","Components/SignUp.js","Components/NavBar.js","Components/DatePick.js","Components/ClassModal.js","Components/Classes.js","Components/ClassCard.js","Components/CoachClassCard.js","Components/Profile.js","Components/CreateClass.js","Components/Client.js","Components/Clients.js","App.js","serviceWorker.js","index.js"],"names":["app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_SENDER_ID","measurementId","REACT_APP_MEASUREMENT_ID","Schedule","this","props","show","toggleShow","position","open","closeBtn","closeOnEsc","onClose","closeOnOverlay","className","to","Component","IG","require","Home","state","currentUser","instaPosts","showSchedule","setState","ReactGA","initialize","pageview","auth","onAuthStateChanged","user","setUser","profile","then","SlicedPosts","slice","onClick","href","target","map","post","node","shortcode","id","src","display_url","AuthContext","React","createContext","AuthProvider","children","useState","setCurrentUser","useEffect","Provider","value","PrivateRoute","RouteComponent","component","rest","useContext","render","routeProps","Login","email","password","passwordResetEmail","emailSent","handlelogin","a","signInWithEmailAndPassword","alert","handleChange","event","name","handlePasswordResetEmailChange","sendPasswordResetEmail","onChange","type","placeholder","withRouter","SignUp","firstName","lastName","passwordConfirm","passwordMatchError","emptyFieldsError","handleSignUp","createUserWithEmailAndPassword","fetch","method","headers","body","JSON","stringify","first_name","last_name","tokens","coach","resp","json","console","log","handleSetUser","emailVerified","sendEmailVerification","NavBar","page","handleActiveBtnChange","e","window","location","pathname","userData","logout","DatePick","date","handleOffset","ClassModal","clients","error","handleBookandUnBookClass","isBooked","find","client","undefined","length","user_id","session_id","ClientsWithNewBooking","deductToken","deletedBooking","filter","addToken","oneClass","now","Date","isInPast","time","class","style","width","toFixed","description","split","sentence","today","dd","getDate","mm","getMonth","todaydate","getFullYear","Classes","classes","chosenClass","isLoading","handleDateChange","dateFetch","handlePickClass","pickedClass","handleDayOffset","offset","d","prev","setDate","toISOString","filteredClasses","ClassCard","handleCancelBooking","handleCancel","upcomingClass","CoachClassCard","askDeleteConfirm","editMode","classDescription","handleDeleteClass","ids","client_ids","tokenError","toggleDeleteConfirm","toggleEditMode","handleSubmit","Profile","upcomingClasses","showGetClassPasses","booking","session","handleDelete","deletedClass","orderedByDateUpcomingClasses","sort","b","CreateClass","success","errorMessage","handleCreateClass","catch","Client","submitEdit","Clients","search","allClients","handleSearch","fuzzyMatch","compareTerm","term","string","toLowerCase","compare","matches","i","indexOf","sortSearch","results","result","alphebetizedClients","localeCompare","filteredClients","App","handleLogout","signOut","exact","path","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.70b1869f.chunk.js","sourcesContent":["import * as firebase from 'firebase/app'\nimport 'firebase/auth'\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n});\n\nexport default app;","import React, { Component } from 'react'\nimport PopPop from 'react-poppop';\nimport './Schedule.css';\nimport { Link } from 'react-router-dom';\n\nexport default class Schedule extends Component {\n    render() {\n        const { show, toggleShow } = this.props\n        return (\n            <div>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => toggleShow(false)}\n                        closeOnOverlay={true}>\n                <h1 className='schedule-title'>Schedule</h1>\n                <div className='schedule-container'>\n                    <h3 className='schedule-h3'>Classes with less than 2 people will be cancelled 2 hours before class start time</h3>\n                    <p><strong>Monday:</strong> None</p>\n                    <p><strong>Tuesday:</strong> Workout of the Day @ 18:30</p>\n                    <p><strong>Wednesday:</strong> Core360 @ 18:30</p>\n                    <p><strong>Thursday:</strong> Workout of the Day @ 18:30</p>\n                    <p><strong>Friday:</strong> None</p>\n                    <p><strong>Saturday:</strong> Mobility Class @ 11:00</p>\n                    <p><strong>Sunday:</strong> Workout of the Day @ 15:00</p>\n                    <Link to='/classes'><button className='class-link'>Book a Class</button></Link>\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n   ","import React, { Component } from 'react'\nimport app from '../base'\nimport './Home.css'\nimport Schedule from './Schedule';\nimport ReactGA from 'react-ga';\nconst IG = require('instagrammer');\nconst instagramUsername = 'faziz_training';\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/home');\n}\n\n\nexport default class Home extends Component {\n    \n    state = {\n        currentUser: this.props.currentUser,\n        instaPosts: [],\n        showSchedule: false\n    }\n    \n    componentDidMount(){\n        initializeReactGA()\n\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n    \n        const setUser = user => {\n            this.setState({currentUser: user})\n            this.props.setUser(user)\n        }\n        \n        IG.profile(instagramUsername).then((instaPosts) => {\n            this.setState({instaPosts})\n        });\n      \n    }\n\n    toggleShow = show => {\n        this.setState({showSchedule: show })\n    }\n\n    render() {\n        const { instaPosts } = this.state\n        const SlicedPosts = instaPosts[0]? instaPosts.slice(0, 8) : []\n        return (\n            <>\n            <button onClick={() => this.toggleShow(true)} className='class-schedule-btn'>View Class Schedule</button>\n            <Schedule show={this.state.showSchedule} toggleShow={this.toggleShow}/>\n                <div className='posts-container'>\n                    <h2 className='title'>Recent Posts <a className='title' href={`https://www.instagram.com/faziz_training/`} target=\"_blank\">@faziz_training</a></h2>\n                    <div className='posts-container'>\n                        {SlicedPosts.map(post => (\n                                <a href={`https://www.instagram.com/p/${post.node.shortcode}/`} target=\"_blank\">\n                                    <img id='insta-post' className='insta-post' src={post.node.display_url} />\n                                </a>\n                        ))}\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport app from './base'\n\nexport const AuthContext  = React.createContext();\n\n\nexport function AuthProvider({ children }) {\n    const  [currentUser, setCurrentUser] = useState(null);\n\n    useEffect(() => {\n        app.auth().onAuthStateChanged(setCurrentUser);\n    }, []);\n\n    return (\n        <AuthContext.Provider\n        value={{currentUser}}\n        > \n            {children}\n        </AuthContext.Provider>\n    )\n}\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Auth'\n\nexport default function PrivateRoute({ component: RouteComponent, ...rest }) {\n    const {currentUser} = useContext(AuthContext)\n    return (\n        <Route\n        {...rest}\n        render={routeProps =>\n        !!currentUser ? (\n            <RouteComponent {...routeProps} currentUser={currentUser} />\n        ) : (\n            <Redirect to={'/login'}/>\n        )\n        }\n        />\n    )\n}\n","import React from 'react';\nimport { withRouter, Redirect } from 'react-router';\nimport app from '../base';\nimport './Login.css'\nimport { NavLink } from 'react-router-dom'\nimport PopPop from 'react-poppop';\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/login');\n}\n\n\nclass Login extends React.Component {\n\n    state = {\n        currentUser: null, \n        email: null, \n        password: null,\n        show: false,\n        passwordResetEmail: null, \n        emailSent: false\n    }\n\n    componentDidMount(){\n        initializeReactGA()\n\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n\n        const setUser = user => {\n            this.setState({currentUser: user})\n            this.props.setUser(user)\n        }\n    }\n\n    handlelogin = async () => {\n            const { email, password } = this.state;\n            try {\n                await app\n                  .auth()\n                  .signInWithEmailAndPassword(email, password);\n            } catch (error) {\n                alert(error);\n            }\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n\n    handleChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n    handlePasswordResetEmailChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n\n    sendPasswordResetEmail = email => {\n        app.auth().sendPasswordResetEmail(email).then(this.setState({emailSent: true}))\n    }\n\n    render(){\n        const { currentUser, show, passwordResetEmail, emailSent } = this.state\n        if (currentUser) {\n            return <Redirect to='/'/>;\n        }\n        return (\n            <div>\n                <div className=\"form-structor\">\n                    <div className=\"signup\">\n                        <h2 className=\"form-title\" id=\"signup\"><span>or</span>Log In</h2>\n                        <div className=\"form-holder\">\n                        <input onChange={this.handleChange} name='email' type=\"email\" className=\"input\" placeholder=\"Email\" />\n                        <input onChange={this.handleChange} name='password' type=\"password\" className=\"input\" placeholder=\"Password\" />\n                        </div>\n                        <button onClick={this.handlelogin} className=\"submit-btn\">Log In</button>\n                        <h3 onClick={this.toggleShow} className='forgot-password'><u>Forgot Password</u></h3>\n                        <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                            <div className='forgot-password-modal-container'>\n                                <h2 className='forgot-password-txt'>Password Reset</h2>\n                                {emailSent&& <p className='email-send-success'>Email Sent!</p>}\n                                <p className='forgot-password-txt'>Please enter the email associated with your account:</p>\n                                <input value={passwordResetEmail} onChange={this.handlePasswordResetEmailChange} name='passwordResetEmail' className='forgot-password-input' type='email'/>\n                                <button onClick={() => this.sendPasswordResetEmail(passwordResetEmail)} className='forgot-password-btn'>Send Password Reset Email</button>\n                                \n                            </div>\n                        </PopPop>\n                    </div>\n                    <div className=\"login slide-up\">\n                        <div className=\"center\">\n                            <NavLink to='/signup'>\n                                <h2 className=\"form-title\" id=\"login\"><span>or</span>Sign Up</h2>\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(Login);\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom'\nimport app from '../base';\nimport './Login.css'\nimport { NavLink } from 'react-router-dom'\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/signup');\n}\n\nclass SignUp extends React.Component {\n\n    state = {\n        firstName: null,\n        lastName: null, \n        email: null,\n        password: null,\n        passwordConfirm: null,\n        currentUser: null,\n        passwordMatchError: \"\",\n        emailSent: false,\n        emptyFieldsError: null\n    }\n\n\n    componentDidMount(){\n        initializeReactGA()\n\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n\n        const setUser = user => {\n            this.setState({currentUser: user})\n        }\n    }\n\n    handleSignUp = async () => {\n        const { email, password, passwordConfirm , firstName, lastName} = this.state;\n        try {\n           if (password === passwordConfirm && email !== null) { \n            await app\n            .auth()\n            .createUserWithEmailAndPassword(email, password);\n            this.setState({passwordMatchError: null, emptyFieldsError: null})\n\n            fetch(\"https://wod-with-faris.herokuapp.com/user/create\", {\n            method: \"POST\", \n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                first_name: this.state.firstName,\n                last_name: this.state.lastName,\n                tokens: 1,\n                coach: false\n            })\n            }).then(resp => resp.json()).then(resp => console.log(resp))\n\n           } else if (!password || !passwordConfirm || !email || !firstName || !lastName){\n               this.setState({emptyFieldsError: \"Please fill all the fields\", passwordMatchError: null})\n           } else {\n            this.setState({passwordMatchError: \"Passwords do not match\", emptyFieldsError: null})\n           }\n\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    handleChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n\n    handleSetUser = user => {\n        this.setState({currentUser: user})\n    }\n\n\n\n    \n    render (){\n        const {currentUser, emailSent, passwordMatchError, emptyFieldsError} = this.state\n        if (currentUser) {\n            if(!currentUser.emailVerified && !emailSent){\n                currentUser.sendEmailVerification();\n                this.setState({emailSent: true})\n            }\n            return <Redirect to='/'/>;\n        }\n        return (\n            <div>\n                <div className=\"form-structor\">\n                    <div className=\"signup\">\n                        {passwordMatchError&& <p className='sign-up-error'>{passwordMatchError}</p>}{emptyFieldsError&& <p className='sign-up-error'>{emptyFieldsError}</p>}\n                        <h2 className=\"form-title\" id=\"signup\"><span>or</span>Sign up</h2>\n                        <div className=\"form-holder\">\n                            <form>\n                                <input onChange={this.handleChange} name='firstName' type=\"text\" className=\"input\" placeholder=\"First Name\" />\n                                <input onChange={this.handleChange} name='lastName' type=\"text\" className=\"input\" placeholder=\"Last Name\" />\n                                <input onChange={this.handleChange} name='email' type=\"email\" className=\"input\" placeholder=\"Email\" />\n                                <input onChange={this.handleChange} name='password' type=\"password\" className=\"input\" placeholder=\"Password\" />\n                                <input onChange={this.handleChange} name='passwordConfirm' type=\"password\" className=\"input\" placeholder=\"Confirm Password\" />\n                            </form>\n                        </div>\n                        <button onClick={this.handleSignUp} className=\"submit-btn\">Sign up</button>\n                    </div>\n                    <div className=\"login slide-up\">\n                        <div className=\"center\">\n                            <NavLink to='/login'>\n                                <h2 className=\"form-title\" id=\"login\"><span>or</span>Log in</h2>\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(SignUp)\n","import React, { Component } from 'react'\nimport app from '../base'\nimport { NavLink } from 'react-router-dom'\nimport './NavBar.css'\n\nexport default class NavBar extends Component {\n\n    state = {\n        page: null\n    }\n\n    componentDidMount() {\n        this.setState({page: window.location.pathname})\n    }\n\n    handleActiveBtnChange = (e) => {\n        if(e.target.name === '/profile' || e.target.name === '/classes'){\n            this.props.currentUser? this.setState({page: e.target.name}) : this.setState({page: '/login'}) \n        } else {\n            this.setState({page: e.target.name})\n        }\n    }\n\n    render() {\n        const { page } = this.state \n        const { currentUser, userData } = this.props\n        return (\n            <div className='nav-bar'>\n                <NavLink to='/'>\n                    <button onClick={this.handleActiveBtnChange} name='/' className={page === '/'? 'nav-btn active' : 'nav-btn'}>Home</button>\n                </NavLink>\n                {currentUser&& userData&& userData.coach&&\n                    <NavLink to='/createclass'>\n                        <button onClick={this.handleActiveBtnChange} name='/createclass' className={page === '/createclass'? 'nav-btn active' : 'nav-btn'}>Create Class</button>\n                    </NavLink>\n                }\n                {currentUser&& userData&& userData.coach&&\n                    <NavLink to='/clients'>\n                        <button onClick={this.handleActiveBtnChange} name='/clients' className={page === '/clients'? 'nav-btn active' : 'nav-btn'}>Clients</button>\n                    </NavLink>\n                }\n                {currentUser&& userData&& !userData.coach&&\n                <NavLink to='/classes'>\n                    <button onClick={this.handleActiveBtnChange} name='/classes' className={page === '/classes'? 'nav-btn active' : 'nav-btn'}>Book Class</button>\n                </NavLink>\n                }\n                {currentUser&&\n                <NavLink to='/profile'>\n                    <button onClick={this.handleActiveBtnChange} name='/profile' className={page === '/profile'? 'nav-btn active' : 'nav-btn'}>Profile</button>\n                </NavLink >\n                }\n                {currentUser?\n                <button className='nav-btn' onClick={this.props.logout}>Log Out</button> \n                :\n                <NavLink to='/login'>\n                    <button onClick={this.handleActiveBtnChange} name='/login' className={page === '/login'? 'nav-btn active' : 'nav-btn'}>Log In</button>\n                </NavLink>\n                }\n                <h3 className='logo-2'>WOD WITH FARIS</h3>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './Classes.css'\n\nexport default class DatePick extends Component {\n\n\n\n\n  render() {\n    const { handleChange, date, handleOffset } = this.props\n    return (\n      <div className='date-picker-container'>\n        <span onClick={() => handleOffset(-1)} ><i className=\"i left\"></i></span><input onChange={handleChange} value={date} className='date-picker' type='date' name='date'/><span onClick={() => handleOffset(1)}><i className=\"i right\"></i></span>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react'\nimport PopPop from 'react-poppop';\nimport './Classes.css'\n\nexport default class ClassModal extends Component {\n    state = {\n        show: false, \n        clients: [], \n        error: null,\n      }\n\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/usersessions?class_id=${this.props.oneClass.id}`, {\n        }).then(resp => resp.json()).then(clients => this.setState({clients}))\n    }\n  \n  \n    toggleShow = show => {\n      this.setState({show: show, error: null});\n    }\n\n    handleBookandUnBookClass =  id => {\n        const isBooked = this.state.clients.find(client => client.user.id === this.props.user.id)\n        if (isBooked === undefined && this.props.user.tokens > 0 && this.state.clients.length < 8) {\n            console.log(\"booking\")\n            fetch(\"https://wod-with-faris.herokuapp.com/usersession/book\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.props.user.id,\n                    session_id: id\n                })\n            }).then(resp => resp.json()).then(ClientsWithNewBooking => this.setState({clients: ClientsWithNewBooking, error: null})).then(this.props.deductToken)\n            \n        } else if(isBooked && this.props.user.tokens >= 0) {\n            fetch(`https://wod-with-faris.herokuapp.com/usersession/unbook`, {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.props.user.id,\n                    session_id: id\n                })\n            }).then(resp => resp.json()).then(deletedBooking => this.setState({clients: this.state.clients.filter(client => client.user.id !== deletedBooking.user.id), error: null})).then(this.props.addToken)\n            \n        } else if (this.props.user.tokens <= 0){\n            this.setState({error: \"Sorry, you have run out of tokens\"})\n        } else if (this.state.client.length === 8) {\n            this.setState({error: \"Sorry, this class is fully booked\"})\n        }\n        \n\n    }\n\n    render() {\n        const {show, clients, error} = this.state;\n        const {oneClass} = this.props;\n        const isBooked = clients[0]&& clients.find(client => client.user.id === this.props.user.id)\n        const now = new Date()\n        const classDateAndTime = new Date(oneClass.date + \"T\" + oneClass.time)\n        const isInPast = classDateAndTime < now? true : false\n        return (\n            <div>\n                <button class=\"class-btn\" onClick={() => this.toggleShow(true)}>{oneClass.time + \" \" + oneClass.name}</button>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                <h1 className='workout-title'>{oneClass.time + \" \" + oneClass.name}</h1> <div className='attending-progress-bar'><div style={{width:`${((clients.length/8) * 100).toFixed(2)}px`}}className='inner-progress-bar'><span className='attending-txt'>{clients.length === 8? \"Fully Booked\" : clients.length + \" / 8\"}</span></div></div>\n                <h3 className='desc-txt'><strong>Coach: </strong>{oneClass.coach.first_name + \" \" + oneClass.coach.last_name}</h3>\n                {oneClass.description.split('\\n').map(sentence => (\n                    <p className='desc-txt'>{sentence}</p> \n                ))\n                }\n                {!isInPast? <button onClick={() => this.handleBookandUnBookClass(this.props.oneClass.id)} class=\"book-btn\">{isBooked? \"Cancel\" : \"Book Class\"}</button> : <button class=\"past-btn\">Already Passed</button>}\n                {error&&\n                    <p className='error'>{this.state.error}</p>\n                }\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport DatePick from './DatePick'\nimport './Classes.css'\nimport ClassModal from './ClassModal'\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/classes');\n}\n\nlet today = new Date()\nlet dd = today.getDate(); \nlet mm = today.getMonth() + 1; \n\nlet yyyy = today.getFullYear(); \nif (dd < 10) { \n    dd = '0' + dd; \n} \nif (mm < 10) { \n    mm = '0' + mm; \n} \nlet todaydate = yyyy + '-' + mm + '-' + dd; \n\nexport default class Classes extends Component {\n\n    state = {\n        classes: [],\n        date: todaydate, \n        chosenClass: null,\n        user: null,\n        isLoading: true\n    }\n\n    componentDidMount(){\n        initializeReactGA()\n\n        fetch(`https://wod-with-faris.herokuapp.com/sessions?date=${this.state.date}`)\n        .then(resp => resp.json())\n        .then(classes => this.setState({classes: classes, isLoading: false}))\n\n        fetch(`https://wod-with-faris.herokuapp.com/user/getuser?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(user => this.setState({user}))\n    }\n\n    handleDateChange = e => {\n        this.setState({\n           [e.target.name]: e.target.value,\n           isLoading: true\n        })\n        this.dateFetch(e.target.value)\n     }\n\n     handlePickClass = id => { \n        const pickedClass = this.state.classes.find( oneClass => oneClass.id === id)\n        this.setState({chosenClass: pickedClass})\n     }\n\n     deductToken = () => {\n        const { user } = this.state \n        this.setState({user: {\n            id: user.id,\n            coach: user.coach,\n            first_name: user.first_name,\n            last_name: user.last_name, \n            email: user.email,\n            tokens: user.tokens - 1\n        }})\n     }\n     addToken = () => {\n        const { user } = this.state \n        this.setState({user: {\n            id: user.id,\n            coach: user.coach,\n            first_name: user.first_name,\n            last_name: user.last_name, \n            email: user.email,\n            tokens: user.tokens + 1\n        }})\n     }\n\n    dateFetch = date => {\n        fetch(`https://wod-with-faris.herokuapp.com/sessions?date=${date}`)\n        .then(resp => resp.json())\n        .then(classes => this.setState({classes: classes, isLoading: false}))\n    }\n\n    handleDayOffset = offset => {\n        let d = new Date(this.state.date)\n        let prev = new Date(d.setDate(d.getDate() + offset)).toISOString().slice(0,10)\n        this.setState({date: prev})\n        this.dateFetch(prev)\n    }\n\n\n    render() {\n        const  { date, classes, isLoading } = this.state\n        const filteredClasses = classes.filter(oneClass => oneClass.date === date)\n        return (\n            <div>\n                <h1>Book Class</h1>\n                <DatePick  handleOffset={this.handleDayOffset} date={date} handleChange={this.handleDateChange}/>\n                <div className='container'>\n                    {isLoading&& <button className='loading'></button >}\n                    {classes[0]?\n                    filteredClasses.map(oneClass => (\n                        <ClassModal addToken={this.addToken} deductToken={this.deductToken} user={this.state.user} oneClass={oneClass} handlePickClass={this.handlePickClass}/>\n                    ))\n                    :\n                    !isLoading&& <h1>No Classes</h1>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Classes.css'\n\nexport default class ClassCard extends Component {\n\n\n    handleCancelBooking = id => {\n        fetch(`https://wod-with-faris.herokuapp.com/usersession/unbook`, {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.props.user.id,\n                    session_id: id\n                })\n            }).then(resp => resp.json()).then(deletedBooking => this.props.handleCancel(deletedBooking)).then(this.props.addToken)\n    }\n\n    render() {\n        const { upcomingClass } = this.props\n        return (\n            <div className='class-card'>\n                <h2 className='card-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h2>\n                <p className='card-date'>{upcomingClass.date}</p>\n                <button onClick={() => this.handleCancelBooking(upcomingClass.id)} className='book-btn'>Cancel</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Classes.css'\nimport PopPop from 'react-poppop';\n\nexport default class CoachClassCard extends Component {\n\n    state = {\n        show: false,\n        clients: [],\n        askDeleteConfirm: false,\n        editMode: false,\n        classDescription: this.props.upcomingClass.description\n    }\n\n    handleDeleteClass = id => {\n        fetch(`https://wod-with-faris.herokuapp.com/sessions/deleted/${id}`, {\n                method: \"DELETE\"\n            }).then(resp => resp.json()).then(deletedBooking => this.props.handleCancel(deletedBooking))\n        const ids = this.state.clients.map(client => {return client.user.id})\n        fetch(\"https://wod-with-faris.herokuapp.com/sessions/returntokens\", {\n            method: \"POST\", \n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                client_ids: ids\n            })\n        }).then(this.setState({askDeleteConfirm: false}))\n    }\n\n    toggleShow = show => {\n        this.setState({show: show, tokenError: null});\n    }\n    toggleDeleteConfirm = () => {\n        this.setState({askDeleteConfirm: !this.state.askDeleteConfirm});\n    }\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/usersessions?class_id=${this.props.upcomingClass.id}`, {\n        }).then(resp => resp.json()).then(clients => this.setState({clients}))\n    }\n\n    toggleEditMode = () => {\n        this.setState({editMode: !this.state.editMode})\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit = id => {\n        fetch(`https://wod-with-faris.herokuapp.com/sessions/update/${id}`, {\n                method: \"PATCH\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    description: this.state.classDescription\n                })\n        }).then(this.setState({editMode: false}))\n    }\n\n    render() {\n        const { upcomingClass } = this.props\n        const { show, clients, askDeleteConfirm, editMode, classDescription } = this.state\n        return (\n            <div className='coach-class-card'>\n                <h2 className='card-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h2>\n                <p className='card-date'>{upcomingClass.date}</p>\n                {askDeleteConfirm? <div> <button onClick={() => this.handleDeleteClass(upcomingClass.id)} className='book-btn'>Confirm Delete</button> <button onClick={this.toggleDeleteConfirm} className='book-btn'>Cancel Delete</button> </div>: <button onClick={this.toggleDeleteConfirm} className='book-btn'>Delete Class</button>}\n                {askDeleteConfirm? undefined : <button onClick={() => this.toggleShow(true)} className='book-btn'>More Info</button>}\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                <h1 className='workout-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h1> <div className='attending-progress-bar'><div style={{width:`${((clients.length/8) * 100).toFixed(2)}px`}}className='inner-progress-bar'><span className='attending-txt'>{clients.length === 8? \"Fully Booked\" : clients.length + \" / 8\"}</span></div></div>\n                <h3 className='desc-txt'><strong>Coach: </strong>{upcomingClass.coach.first_name + \" \" + upcomingClass.coach.last_name}</h3>\n                {!editMode?\n                classDescription.split('\\n').map(sentence => (\n                    <p className='desc-txt'>{sentence}</p> \n                ))\n                :\n                <textarea className='edit-desc' value={classDescription} onChange={this.handleChange} name='classDescription'/>\n                } \n                <div>\n                {!editMode? <button className='book-btn' onClick={this.toggleEditMode}>Edit Workout</button> : <button className='book-btn' onClick={() => this.handleSubmit(upcomingClass.id)}>Submit</button>}\n                    <h3 className='desc-txt'>Signed  Up Clients</h3>\n                    {clients.map(client => (\n                        <p className='desc-txt'>- {client.user.first_name + \" \" + client.user.last_name}</p>\n                    ))}\n                    {!clients[0]&&\n                        <p className='desc-txt'>None</p>\n                    }\n\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Profile.css'\nimport ClassCard from './ClassCard'\nimport CoachClassCard from './CoachClassCard'\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/profile');\n}\n\nexport default class Profile extends Component {\n\n    state = {\n        user: null, \n        upcomingClasses: [],\n        showGetClassPasses: false\n    }\n\n    componentDidMount(){\n        initializeReactGA()\n        \n        fetch(`https://wod-with-faris.herokuapp.com/user/getuser?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(user => this.setState({user}))\n\n        fetch(`https://wod-with-faris.herokuapp.com/usersession/upcomingclasses?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(upcomingClasses => this.setState({upcomingClasses}))\n    }\n\n    addToken = () => {\n        const { user } = this.state \n        this.setState({user: {\n            id: user.id,\n            coach: user.coach,\n            first_name: user.first_name,\n            last_name: user.last_name, \n            email: user.email,\n            tokens: user.tokens + 1\n        }})\n     }\n\n     handleCancel = deletedBooking => {\n        this.setState({upcomingClasses: this.state.upcomingClasses.filter(booking => booking.id !== deletedBooking.session.id)})\n     }\n     handleDelete = deletedClass => {\n        this.setState({upcomingClasses: this.state.upcomingClasses.filter(booking => booking.id !== deletedClass.id)})\n     }\n\n     toggleShow = show => {\n        this.setState({showGetClassPasses: show })\n    }\n\n    render() {\n        const { user, upcomingClasses, showGetClassPasses } = this.state\n        const orderedByDateUpcomingClasses = upcomingClasses[0]&& upcomingClasses.sort((a, b) => new Date(a.date) - new Date(b.date)).slice(0, 4)\n        return (\n            <div>\n                <div className='profile-container'>\n                    {user?\n                    <>\n                        <h1>{user.first_name + \" \" + user.last_name}</h1>\n                        {!user.coach&& <h2 className='tokens'>Class Passes: {user.tokens}</h2>}\n                        <div className='upcoming-classes-container'>\n                            <h2 className='upcoming-classes-title'>Upcoming Classes: </h2>\n                            {!user.coach&& upcomingClasses[0]&&\n                                orderedByDateUpcomingClasses.map(upcomingClass => (\n                                    <ClassCard handleCancel={this.handleCancel} addToken={this.addToken} user={this.state.user} upcomingClass={upcomingClass}/>\n                                ))\n                            }\n                            {user.coach&& upcomingClasses[0]&&\n                                orderedByDateUpcomingClasses.map(upcomingClass => (\n                                    <CoachClassCard handleCancel={this.handleDelete} user={this.state.user} upcomingClass={upcomingClass}/>\n                                ))\n                            }\n\n                            {!upcomingClasses[0]&&<h3 className='none'>None</h3>}\n\n                            \n                            \n                        </div>\n                    </>\n                    :\n                    <button className='loading'></button >\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './CreateClass.css'\n\nexport default class CreateClass extends Component {\n\n    state = {\n        name: null,\n        description: null,\n        date: null,\n        time: null, \n        coach: null, \n        success: false,\n        errorMessage: null\n    }\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/user/getuser?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(coach => this.setState({coach}))\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n         })\n    }\n\n    handleCreateClass = () => {\n        const { name, description, date, time, coach } = this.state\n        if ( name && description && date && time  ){\n        fetch(\"https://wod-with-faris.herokuapp.com/sessions/create\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: name, \n                    description: description,\n                    date: date,\n                    time: time,\n                    user_id: coach.id\n                })\n            }).then(resp => resp.json()).then(this.setState({success: true, errorMessage: null, name: \"\", description: \"\", date: \"\", time: \"\"}))\n            .catch(errorMessage => this.setState({errorMessage}))\n        } else {\n            this.setState({errorMessage: \"Please fill all fields\"})\n        }\n    } \n\n    render() {\n        const { success, errorMessage } = this.state\n        return (\n            <div>\n                <h1 className='create-class-title'>Create Class</h1>\n                {success&&\n                        <h2 className='success'>Class Created!</h2>\n                }\n                {errorMessage&&\n                        <h2 className='error-message'>{errorMessage}</h2>\n                }\n                <div className='create-class-div'>\n                    <h3 className='create-class-h3'>Name</h3>\n                    <input name='name' onChange={this.handleChange} className='create-class-input' type='text'/>\n                    <h3 className='create-class-h3' >Description</h3>\n                    <textarea name='description' onChange={this.handleChange} className='create-class-textarea'/>\n                    <h3 className='create-class-h3'>Date</h3>\n                    <input name='date' onChange={this.handleChange} className='create-class-input' type='date'/>\n                    <h3 className='create-class-h3'>Time</h3>\n                    <input name='time' onChange={this.handleChange} className='create-class-input' type='time'/>\n                    <button className='create-class-btn' onClick={this.handleCreateClass}>Create Class</button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Clients.css'\nimport PopPop from 'react-poppop';\n\nexport default class Client extends Component {\n\n    state = {\n        show: false, \n        editMode: false,\n        email: this.props.client.email,\n        tokens: this.props.client.tokens\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n    \n    toggleEditMode = () => {\n        this.setState({editMode: true})\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    submitEdit = id => {\n        fetch(`https://wod-with-faris.herokuapp.com/user/update/${id}`, {\n                method: \"PATCH\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: this.state.email,\n                    tokens: this.state.tokens\n                })\n        }).then(this.setState({editMode: false}))\n    }\n\n    render() {\n        const { client } = this.props\n        const { show, email, tokens, editMode } = this.state\n        return (\n            <div>\n                <h3 onClick={this.toggleShow} className='client'>{client.first_name + \" \" + client.last_name}</h3>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                            <div className='client-modal-container'>\n                                <h3 className='client-txt'>{client.first_name + \" \" + client.last_name}</h3>\n                                <p className='client-txt'>Email: </p> {!editMode? <p className='client-txt'>{email}</p> : <input onChange={this.handleChange} className='edit-input' value={email} name='email'/>}\n                                <p className='client-txt'>Class Passes: </p> {!editMode? <p className='client-txt'>{tokens}</p> : <input onChange={this.handleChange} className='edit-input' type='number' value={tokens} name='tokens'/>}\n                                {!editMode? <button onClick={this.toggleEditMode} className='edit-btn'>Edit</button> : <button onClick={() => this.submitEdit(client.id)} className='edit-btn'>Submit</button>}\n                            </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Clients.css'\nimport Client from './Client';\n\nexport default class Clients extends Component {\n\n    state = {\n        search: null,\n        allClients: []\n    }\n\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/users/index`)\n        .then(resp => resp.json())\n        .then(allClients => this.setState({allClients}))\n    }\n\n    handleSearch = e => {\n        const search = e.target.value\n        if (search.length > 0) {\n            this.setState({search})\n        } else if (search.length === 0){\n            this.setState({search: null})\n        }\n \n    }\n\n    fuzzyMatch = (compareTerm ,term) => {\n        if (term.length === 0)\n            return 1;\n        let string = compareTerm.toLowerCase();\n        let compare = term.toLowerCase();\n        let matches = 0;\n        for (let i = 0; i < compare.length; i++) {\n            string.indexOf(compare[i]) > -1 ? matches += 1 : matches -=1;\n        }\n        return matches / compareTerm.length;\n    }\n\n    sortSearch = (clients) => {\n        const results = clients.map(client => [client, this.fuzzyMatch(client.first_name + \" \" + client.last_name, this.state.search)]);\n        results.sort((a, b) => b[1] - a[1]);\n        const filteredResults = results.filter(result => result[1] > 0)\n        return filteredResults\n    }\n\n    render() {\n        const { allClients, search } = this.state\n        const alphebetizedClients = allClients.sort((a,b) =>  a.last_name.localeCompare(b.last_name))\n        console.log(alphebetizedClients)\n        const filteredClients = search? this.sortSearch(allClients) : alphebetizedClients\n        return (\n            <div>\n                <h1>Clients</h1>\n                <input className='search-bar' onChange={this.handleSearch} name='search' type='text'/>\n                <div className='clients-container'>\n                    {allClients&& allClients[0]&&\n\n                    filteredClients.map(client => (\n                        <Client client={search? client[0] : client}/>\n                    ))\n\n                    }\n                    {allClients&& !allClients[0]&&\n                        <h2>None</h2>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport { Route } from 'react-router-dom'\nimport Home from './Components/Home';\nimport PrivateRoute from './PrivateRoute';\nimport Login from './Components/Login';\nimport SignUp from './Components/SignUp';\nimport app from './base'\nimport NavBar from './Components/NavBar';\nimport Classes from './Components/Classes';\nimport Profile from './Components/Profile';\nimport CreateClass from './Components/CreateClass';\nimport Clients from './Components/Clients';\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n  ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n  ReactGA.pageview('/');\n}\n\n\nclass App extends React.Component {\n\n  state = {\n    currentUser: null, \n    userData: null\n  }\n\n  componentDidMount(){\n    initializeReactGA()\n  }\n  \n  handleSetUser = user => {\n    this.setState({currentUser: user})\n    fetch(`https://wod-with-faris.herokuapp.com/user/getuser?email=${user.email}`)\n        .then(resp => resp.json())\n        .then(userData => this.setState({userData}))\n  }\n\n  handleLogout = () => {\n    app.auth().signOut()\n    this.setState({currentUser: null})\n  }\n\n  render() { \n    const  { currentUser, userData } = this.state\n    return (\n      <>\n        <NavBar userData={userData} logout={this.handleLogout} currentUser={currentUser}/>\n        <PrivateRoute exact path='/classes' component={Classes}/>\n        <PrivateRoute exact path='/profile' component={Profile}/>\n        <PrivateRoute exact path='/createclass' component={CreateClass}/>\n        <PrivateRoute exact path='/clients' component={Clients}/>\n        <Route exact path='/'>\n          <Home setUser={this.handleSetUser}/>\n        </Route>\n        <Route exact path='/login'>\n          <Login setUser={this.handleSetUser}/>\n        </Route>\n        <Route exact path='/signup' component={SignUp}/>\n      </>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { AuthProvider } from './Auth'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <Router>\n        <App />\n      </Router>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}