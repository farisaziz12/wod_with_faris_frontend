{"version":3,"sources":["base.js","Components/Schedule.js","Components/Home.js","Auth.js","PrivateRoute.js","Components/Login.js","Components/SignUp.js","Components/NavBar.js","Components/DatePick.js","Components/ClassModal.js","Components/Classes.js","Components/ClassCard.js","Components/CoachClassCard.js","Components/AllUpcomingClasses.js","Components/CardSection.js","Components/PTSessionCheckoutForm.js","Components/PTSessionCard.js","Components/CoachPTSessionCard.js","Components/Profile.js","Components/CreateClass.js","Components/Client.js","Components/Clients.js","Components/CheckoutForm.js","Components/BuyPasses.js","Components/StyledLink.js","Components/MobileMenu.js","Components/LeaderboardStat.js","Components/Leaderboard.js","Components/CreatePTSession.js","App.js","serviceWorker.js","webpack:///./src/index.js?b635"],"names":["app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_SENDER_ID","measurementId","REACT_APP_MEASUREMENT_ID","Schedule","this","props","show","toggleShow","position","open","closeBtn","closeOnEsc","onClose","closeOnOverlay","className","href","Component","IG","require","Home","state","currentUser","instaPosts","showSchedule","setState","user","ReactGA","event","category","action","first_name","last_name","initialize","pageview","auth","onAuthStateChanged","setUser","profile","then","SlicedPosts","slice","onClick","map","post","node","shortcode","alt","id","src","display_url","AuthContext","React","createContext","AuthProvider","children","useState","setCurrentUser","useEffect","Provider","value","PrivateRoute","RouteComponent","component","rest","useContext","render","routeProps","to","Login","email","password","passwordResetEmail","emailSent","emailError","handlelogin","a","signInWithEmailAndPassword","setHome","alert","handleChange","target","name","handlePasswordResetEmailChange","sendPasswordResetEmail","checkAccount","resp","fetch","json","onChange","type","placeholder","withRouter","SignUp","firstName","lastName","passwordConfirm","passwordMatchError","emptyFieldsError","handleSignUp","createUserWithEmailAndPassword","method","headers","body","JSON","stringify","tokens","coach","console","log","token","message","handleSetUser","emailVerified","sendEmailVerification","lastPage","localStorage","getItem","NavBar","page","setPage","handleActiveBtnChange","e","setItem","userData","logout","DatePick","date","handleOffset","ClassModal","clients","error","handleBookandUnBookClass","isBooked","find","client","undefined","length","oneClass","class_capacity","user_id","session_id","ClientsWithNewBooking","deductToken","sound","time","dateFormat","deletedBooking","filter","addToken","now","Date","isInPast","class","style","width","toFixed","description","split","sentence","today","dd","getDate","mm","getMonth","todaydate","getFullYear","Classes","classes","chosenClass","isLoading","handleDateChange","dateFetch","handlePickClass","pickedClass","handleDateClick","arg","dateStr","handleDayOffset","offset","d","prev","setDate","toISOString","timeOrderedClasses","sort","b","ClassCard","handleCancelBooking","handleCancel","upcomingClass","CoachClassCard","askDeleteConfirm","editMode","classDescription","addClient","allClients","clientToAdd","handleClients","formatedClients","label","handleDeleteClass","ids","client_ids","tokenError","toggleDeleteConfirm","toggleEditMode","handleSubmit","toggleAddClient","handleAddClientOrCancel","handleSetClient","options","AllUpcomingClasses","upcomingClasses","CARD_ELEMENT_OPTIONS","iconStyle","hidePostalCode","base","iconColor","color","fontSize","fontFamily","fontSmoothing","invalid","CardSection","PTSessionCheckoutForm","paymentSuccess","paymentError","paymentPending","handleNameChange","preventDefault","stripe","elements","card","getElement","CardElement","createToken","result","window","upcomingPTSession","price","cardPayment","client_secret","clientSecret","confirmCardPayment","payment_method","billing_details","paymentIntent","status","handlePaid","pt_session","setTimeout","onSubmit","required","stripePromise","loadStripe","PTSessionCard","paid","textAlign","location","userEmail","CoachPTSessionCard","ptDescription","ptLocation","ptTime","ptDate","ptPrice","handleDeletePTSession","handleDeletedBooking","parseInt","Profile","setUpcomingClasses","upcomingPTSessions","setUpcomingPTSessions","showUpcomingClasses","setShowUpcomingClasses","handleUser","upcoming","handleUpcomingClasses","ptsessions","updatedUser","booking","session","deletedClass","ptSession","ptsession","toggleShowUpcomingClasses","timeOrderedPTSessions","orderedByDateUpcomingClasses","orderedByDateUpcomingPTsessions","SlicedUpcomingClasses","SlicedUpcomingPTSessions","CreateClass","classCapacity","success","errorMessage","handleCreateClass","catch","Client","submitEdit","Clients","search","handleSearch","fuzzyMatch","compareTerm","term","string","toLowerCase","compare","matches","i","indexOf","sortSearch","results","alphebetizedClients","localeCompare","filteredClients","CheckoutForm","quantity","user_email","resetQuantity","BuyPasses","purchaseAmountLimit","handleQuantityChange","amount","StyledLink","styled","Link","MobileMenu","anchorEl","setAnchorEl","handleClose","textContent","Button","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","Boolean","MenuItem","LeaderboardStat","stat","attendances_and_activities","calories_burned","highestNoOfAttendances","backgroundColor","Leaderboard","stats","handleLeaderboardStats","leaderboardStats","setLeaderboardStats","setIsLoading","sortedLeaderboardStats","Math","max","apply","CreatePTSession","setName","setLocation","setClient","setDescription","setTime","setErrorMessage","setSuccess","setClients","setPrice","handleSuccess","coach_email","client_email","App","screenWidth","innerWidth","isHome","handleWindowSizeChange","handleLogout","signOut","removeItem","addEventListener","isMobile","exact","path","hostname","match","Bugsnag","start","plugins","BugsnagPluginReact","ErrorBoundary","getPlugin","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.41210d69.chunk.js","sourcesContent":["import * as firebase from 'firebase/app'\nimport 'firebase/auth'\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n});\n\nexport default app;","import React, { Component } from 'react'\nimport PopPop from 'react-poppop';\nimport './Schedule.css';\n\nexport default class Schedule extends Component {\n\n    render() {\n        const { show, toggleShow } = this.props\n        return (\n            <div>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => toggleShow(false)}\n                        closeOnOverlay={true}>\n                <h1 className='schedule-title'>Schedule</h1>\n                <div className='schedule-container'>\n                    <h3 className='schedule-h3'>Classes with less than 2 people will be cancelled 2 hours before class start time and early morning classes before 10:00 will be cancelled the night before at 20:00</h3>\n                    <p><strong>Monday:</strong> Outdoor Workout of the Day @ 12:15</p>\n                    <p><strong>Tuesday:</strong> Outdoor Workout of the Day @ 12:15</p>\n                    <p><strong>Wednesday:</strong> Outdoor Workout of the Day @ 9:00</p>\n                    <p><strong>Thursday:</strong> Zoom Workout of the Day @ 7:00 & Outdoor Workout of the Day @ 12:15</p>\n                    <p><strong>Friday:</strong> Outdoor Workout of the Day @ 9:00</p>\n                    <p><strong>Saturday:</strong> Zoom Mobility Class @ 9:30 & Outdoor WOD @ 10:30</p>\n                    <p><strong>Sunday:</strong> Outdoor Workout of the Day @ 10:00 & 11:00</p>\n                    <p><strong>Email <a href='mailto:faziztraining@gmail.com'>faziztraining@gmail.com</a> if you would like to suggest a new class time</strong></p>\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n   ","import React, { Component } from 'react'\nimport app from '../base'\nimport './Home.css'\nimport Schedule from './Schedule';\nimport ReactGA from 'react-ga';\nconst IG = require('instagrammer');\nconst instagramUsername = 'faziz_training';\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/home');\n}\n\n\nexport default class Home extends Component {\n    \n    state = {\n        currentUser: this.props.currentUser,\n        instaPosts: [],\n        showSchedule: false\n    }\n    \n    componentDidMount(){\n        initializeReactGA()\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n    \n        const setUser = user => {\n            this.setState({currentUser: user})\n            this.props.setUser(user)\n        }\n        \n        IG.profile(instagramUsername).then((instaPosts) => {\n            this.setState({instaPosts})\n        });\n      \n    }\n\n    toggleShow = show => {\n        this.setState({showSchedule: show })\n        this.props.user&&\n        ReactGA.event({\n            category: 'User',\n            action: `${this.props.user.first_name + \" \" + this.props.user.last_name} checked out the Schedule`\n        });\n    }\n\n    render() {\n        const { instaPosts } = this.state\n        const SlicedPosts = instaPosts[0]? instaPosts.slice(0, 8) : []\n        return (\n            <>\n            <button onClick={() => this.toggleShow(true)} className='class-schedule-btn'>View Class Schedule</button>\n            <Schedule show={this.state.showSchedule} toggleShow={this.toggleShow}/>\n                <div className='posts-container'>\n                    <h2 className='title'>Recent Posts <a className='title' href={`https://www.instagram.com/faziz_training/`}>@faziz_training</a></h2>\n                    <div className='posts-container'>\n                        {SlicedPosts.map(post => (\n                                <a href={`https://www.instagram.com/p/${post.node.shortcode}/`} >\n                                    <img alt='' id='insta-post' className='insta-post' src={post.node.display_url} />\n                                </a>\n                        ))}\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport app from './base'\n\nexport const AuthContext  = React.createContext();\n\n\nexport function AuthProvider({ children }) {\n    const  [currentUser, setCurrentUser] = useState(null);\n\n    useEffect(() => {\n        app.auth().onAuthStateChanged(setCurrentUser);\n    }, []);\n\n    return (\n        <AuthContext.Provider\n        value={{currentUser}}\n        > \n            {children}\n        </AuthContext.Provider>\n    )\n}\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Auth'\n\nexport default function PrivateRoute({ component: RouteComponent, ...rest }) {\n    const {currentUser} = useContext(AuthContext)\n    return (\n        <Route\n        {...rest}\n        render={routeProps =>\n        !!currentUser ? (\n            <RouteComponent {...routeProps} currentUser={currentUser} />\n        ) : (\n            <Redirect to={'/login'}/>\n        )\n        }\n        />\n    )\n}\n","import React from 'react';\nimport { withRouter, Redirect } from 'react-router';\nimport app from '../base';\nimport './Login.css'\nimport { NavLink } from 'react-router-dom'\nimport PopPop from 'react-poppop';\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/login');\n}\n\n\nclass Login extends React.Component {\n\n    state = {\n        currentUser: null, \n        email: null, \n        password: null,\n        show: false,\n        passwordResetEmail: null, \n        emailSent: false,\n        emailError: false\n    }\n\n    componentDidMount(){\n        initializeReactGA()\n\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n\n        const setUser = user => {\n            this.setState({currentUser: user})\n            this.props.setUser(user)\n        }\n    }\n\n    handlelogin = async () => {\n            const { email, password } = this.state;\n            try {\n                await app\n                  .auth()\n                  .signInWithEmailAndPassword(email, password);\n                  this.props.setHome(true)\n            } catch (error) {\n                alert(error);\n            }\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n\n    handleChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n    handlePasswordResetEmailChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n\n    sendPasswordResetEmail = email => {\n        this.checkAccount(email).then(resp => {\n            if (resp) {\n                app.auth().sendPasswordResetEmail(email).then(this.setState({emailSent: true, emailError: false}))\n            } else {\n                this.setState({emailError: true})\n            }\n        })\n    }\n\n    checkAccount = email => {\n        return fetch(`https://wod-with-faris-backend.herokuapp.com/users/check?email=${email}`)\n        .then(resp => resp.json())\n    }\n\n    render(){\n        const { currentUser, show, passwordResetEmail, emailSent, emailError } = this.state\n        if (currentUser) {\n            return <Redirect to='/'/>;\n        }\n        return (\n            <div>\n                <div className=\"form-structor\">\n                    <div className=\"signup\">\n                        <h2 className=\"form-title\" id=\"signup\"><span>or</span>Log In</h2>\n                        <div className=\"form-holder\">\n                        <input onChange={this.handleChange} name='email' type=\"email\" className=\"input\" placeholder=\"Email\" />\n                        <input onChange={this.handleChange} name='password' type=\"password\" className=\"input\" placeholder=\"Password\" />\n                        </div>\n                        <button onClick={this.handlelogin} className=\"submit-btn\">Log In</button>\n                        <h3 onClick={this.toggleShow} className='forgot-password'><u>Forgot Password</u></h3>\n                        <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                            <div className='forgot-password-modal-container'>\n                                <h2 className='forgot-password-txt'>Password Reset</h2>\n                                {emailSent&& <p className='email-send-success'>Email Sent!</p>}\n                                {emailError&& <p className='email-send-error'>Sorry, no account matches this email</p>}\n                                <p className='forgot-password-txt'>Please enter the email associated with your account:</p>\n                                <input value={passwordResetEmail} onChange={this.handlePasswordResetEmailChange} name='passwordResetEmail' className='forgot-password-input' type='email'/>\n                                <button onClick={() => this.sendPasswordResetEmail(passwordResetEmail)} className='forgot-password-btn'>Send Password Reset Email</button>\n                                \n                            </div>\n                        </PopPop>\n                    </div>\n                    <div className=\"login slide-up\">\n                        <div className=\"center\">\n                            <NavLink to='/signup'>\n                                <h2 className=\"form-title\" id=\"login\"><span>or</span>Sign Up</h2>\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(Login);\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom'\nimport app from '../base';\nimport './Login.css'\nimport { NavLink } from 'react-router-dom'\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/signup');\n}\n\nclass SignUp extends React.Component {\n\n    state = {\n        firstName: null,\n        lastName: null, \n        email: null,\n        password: null,\n        passwordConfirm: null,\n        currentUser: null,\n        passwordMatchError: \"\",\n        emailSent: false,\n        emptyFieldsError: null\n    }\n\n\n    componentDidMount(){\n        initializeReactGA()\n\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n\n        const setUser = user => {\n            this.setState({currentUser: user})\n        }\n    }\n\n    handleSignUp = async () => {\n        const { email, password, passwordConfirm , firstName, lastName} = this.state;\n        try {\n           if (password === passwordConfirm && email !== null) { \n            await app\n            .auth()\n            .createUserWithEmailAndPassword(email, password);\n            this.setState({passwordMatchError: null, emptyFieldsError: null})\n\n            fetch(\"https://wod-with-faris-backend.herokuapp.com/user/create\", {\n            method: \"POST\", \n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                first_name: this.state.firstName,\n                last_name: this.state.lastName,\n                tokens: 0,\n                coach: false\n            })\n            }).then(resp => resp.json()).then(resp => console.log(resp))\n\n            fetch(\"https://api.pushover.net/1/messages.json\", {\n                    method: \"POST\", \n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        token: 'adohia1ym9d8bopuvjys6zrgdu4psa',\n                        user: 'ubujnjnpw22cv58byd8w6kot7yx648',\n                        message: `${this.state.firstName + \" \" + this.state.lastName} signed up!`\n                    })\n            })\n\n           } else if (!password || !passwordConfirm || !email || !firstName || !lastName){\n               this.setState({emptyFieldsError: \"Please fill all the fields\", passwordMatchError: null})\n           } else {\n            this.setState({passwordMatchError: \"Passwords do not match\", emptyFieldsError: null})\n           }\n\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    handleChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n\n    handleSetUser = user => {\n        this.setState({currentUser: user})\n    }\n\n\n\n    \n    render (){\n        const {currentUser, emailSent, passwordMatchError, emptyFieldsError} = this.state\n        if (currentUser) {\n            if(!currentUser.emailVerified && !emailSent){\n                currentUser.sendEmailVerification();\n                this.setState({emailSent: true})\n            } else {\n                this.props.setHome(true)\n                return <Redirect to='/'/>;\n            }\n        }\n        return (\n            <div>\n                <div className=\"form-structor\">\n                    <div className=\"signup\">\n                        {passwordMatchError&& <p className='sign-up-error'>{passwordMatchError}</p>}{emptyFieldsError&& <p className='sign-up-error'>{emptyFieldsError}</p>}\n                        <h2 className=\"form-title\" id=\"signup\"><span>or</span>Sign up</h2>\n                        <div className=\"form-holder\">\n                            <form>\n                                <input onChange={this.handleChange} name='firstName' type=\"text\" className=\"input\" placeholder=\"First Name\" />\n                                <input onChange={this.handleChange} name='lastName' type=\"text\" className=\"input\" placeholder=\"Last Name\" />\n                                <input onChange={this.handleChange} name='email' type=\"email\" className=\"input\" placeholder=\"Email\" />\n                                <input onChange={this.handleChange} name='password' type=\"password\" className=\"input\" placeholder=\"Password\" />\n                                <input onChange={this.handleChange} name='passwordConfirm' type=\"password\" className=\"input\" placeholder=\"Confirm Password\" />\n                            </form>\n                        </div>\n                        <button onClick={this.handleSignUp} className=\"submit-btn\">Sign up</button>\n                    </div>\n                    <div className=\"login slide-up\">\n                        <div className=\"center\">\n                            <NavLink to='/login'>\n                                <h2 className=\"form-title\" id=\"login\"><span>or</span>Log in</h2>\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(SignUp)\n","import React, { useState, useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport ReactGA from 'react-ga';\nimport './NavBar.css'\n\nconst lastPage = localStorage.getItem('prevUrl')\n\nexport default function NavBar(props) {\n    const [page, setPage] = useState(null)\n\n    useEffect(() => {\n        setPage(lastPage? lastPage : '/')\n    }, [])\n\n\n    const handleActiveBtnChange = (e) => {\n        if(e.target.name === '/profile' || e.target.name === '/classes' || e.target.name === '/leaderboard') {\n            props.currentUser? setPage(e.target.name) : setPage('/login')\n            if(e.target.name === '/'){\n                props.setHome(true)\n                localStorage.setItem('prevUrl', '/')\n            } else {\n                localStorage.setItem('prevUrl', e.target.name)\n                props.setHome(false)\n            }\n            props.userData&&\n            ReactGA.event({\n                category: 'User',\n                action: `${props.userData.first_name + \" \" + props.userData.last_name} looked at ${e.target.name}`\n            });\n        } else if (e.target.name === '/login'){\n            localStorage.setItem('prevUrl', '/')\n            props.setHome(true)\n        } else {\n            setPage(e.target.name)\n            if(e.target.name === '/'){\n                props.setHome(true)\n                localStorage.setItem('prevUrl', '/')\n            } else {\n                localStorage.setItem('prevUrl', e.target.name)\n                props.setHome(false)\n            }\n            props.userData&&\n            ReactGA.event({\n                category: 'User',\n                action: `${props.userData.first_name + \" \" + props.userData.last_name} looked at ${e.target.name}`\n            });\n        }\n    }\n\n        const { currentUser, userData } = props\n        return (\n            <div className='nav-bar'>\n                <NavLink to='/'>\n                    <button onClick={handleActiveBtnChange} name='/' className={page === '/'? 'nav-btn active' : 'nav-btn'}>Home</button>\n                </NavLink>\n                {currentUser&& userData&& userData.coach&&\n                    <NavLink to='/createclass'>\n                        <button onClick={handleActiveBtnChange} name='/createclass' className={page === '/createclass'? 'nav-btn active' : 'nav-btn'}>Create Class</button>\n                    </NavLink>\n                }\n                {currentUser&& userData&& userData.coach&&\n                    <NavLink to='/createptsession'>\n                        <button onClick={handleActiveBtnChange} name='/createptsession' className={page === '/createptsession'? 'nav-btn active' : 'nav-btn'}>Create PT Session</button>\n                    </NavLink>\n                }\n                {currentUser&& userData&& userData.coach&&\n                    <NavLink to='/clients'>\n                        <button onClick={handleActiveBtnChange} name='/clients' className={page === '/clients'? 'nav-btn active' : 'nav-btn'}>Clients</button>\n                    </NavLink>\n                }\n                {currentUser&& userData&& !userData.coach&&\n                <NavLink to='/classes'>\n                    <button onClick={handleActiveBtnChange} name='/classes' className={page === '/classes'? 'nav-btn active' : 'nav-btn'}>Book Class</button>\n                </NavLink>\n                }\n                {currentUser&& userData&& !userData.coach&&\n                <NavLink to='/buypasses'>\n                    <button onClick={handleActiveBtnChange} name='/buypasses' className={page === '/buypasses'? 'nav-btn active' : 'nav-btn'}>Buy Passes</button>\n                </NavLink>\n                }\n                {currentUser&& userData&& !userData.coach&&\n                <NavLink to='/leaderboard'>\n                    <button onClick={handleActiveBtnChange} name='/leaderboard' className={page === '/leaderboard'? 'nav-btn active' : 'nav-btn'}>Leaderboard</button>\n                </NavLink>\n                }\n                {currentUser&&\n                <NavLink to='/profile'>\n                    <button onClick={handleActiveBtnChange} name='/profile' className={page === '/profile'? 'nav-btn active' : 'nav-btn'}>Profile</button>\n                </NavLink >\n                }\n                {currentUser?\n                <button className='nav-btn' onClick={props.logout}>Log Out</button> \n                :\n                <NavLink to='/login'>\n                    <button onClick={handleActiveBtnChange} name='/login' className={page === '/login'? 'nav-btn active' : 'nav-btn'}>Log In</button>\n                </NavLink>\n                }\n                <h3 className='logo-2'>WOD WITH FARIS</h3>\n            </div>\n        )\n}\n","import React, { Component } from 'react';\nimport './Classes.css'\n\nexport default class DatePick extends Component {\n\n\n\n\n  render() {\n    const { handleChange, date, handleOffset } = this.props\n    return (\n      <div className='date-picker-container'>\n        <span onClick={() => handleOffset(-1)} ><i className=\"i left\"></i></span><input onChange={handleChange} value={date} className='date-picker' type='date' name='date'/><span onClick={() => handleOffset(1)}><i className=\"i right\"></i></span>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react'\nimport PopPop from 'react-poppop';\nimport dateFormat from 'dateformat'\nimport './Classes.css'\n\nexport default class ClassModal extends Component {\n    state = {\n        show: false, \n        clients: [], \n        error: null,\n      }\n\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris-backend.herokuapp.com/usersessions?class_id=${this.props.oneClass.id}`, {\n        }).then(resp => resp.json()).then(clients => this.setState({clients}))\n    }\n  \n  \n    toggleShow = show => {\n      this.setState({show: show, error: null});\n    }\n\n    handleBookandUnBookClass =  id => {\n        const isBooked = this.state.clients.find(client => client.user.id === this.props.user.id)\n        if (isBooked === undefined && this.props.user.tokens > 0 && this.state.clients.length < this.props.oneClass.class_capacity) {\n            fetch(\"https://wod-with-faris-backend.herokuapp.com/usersession/book\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.props.user.id,\n                    session_id: id\n                })\n            }).then(resp => resp.json()).then(ClientsWithNewBooking => this.setState({clients: ClientsWithNewBooking, error: null})).then(this.props.deductToken)\n            \n            fetch(\"https://api.pushover.net/1/messages.json\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    token: 'adohia1ym9d8bopuvjys6zrgdu4psa',\n                    user: 'ubujnjnpw22cv58byd8w6kot7yx648',\n                    sound: 'cashregister',\n                    message: `${this.props.user.first_name + \" \" + this.props.user.last_name} booked the ${this.props.oneClass.time} class that's on ${dateFormat(this.props.oneClass.date, \"fullDate\")}`\n                })\n            })\n            \n\n\n        } else if(isBooked && this.props.user.tokens >= 0) {\n            fetch(`https://wod-with-faris-backend.herokuapp.com/usersession/unbook`, {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.props.user.id,\n                    session_id: id\n                })\n            }).then(resp => resp.json()).then(deletedBooking => this.setState({clients: this.state.clients.filter(client => client.user.id !== deletedBooking.user.id), error: null})).then(this.props.addToken)\n\n            fetch(\"https://api.pushover.net/1/messages.json\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    token: 'adohia1ym9d8bopuvjys6zrgdu4psa',\n                    user: 'ubujnjnpw22cv58byd8w6kot7yx648',\n                    message: `${this.props.user.first_name + \" \" + this.props.user.last_name} unbooked the ${this.props.oneClass.time + \" \" + this.props.oneClass.name} class that's on ${dateFormat(this.props.oneClass.date, \"fullDate\")}`\n                })\n            })\n\n        } else if (this.props.user.tokens <= 0){\n            this.setState({error: 'Sorry, you have run out of passes. Please buy some more on the \"Buy Passes\" page.' })\n        } else if (this.state.clients.length ===  this.props.oneClass.class_capacity) {\n            this.setState({error: \"Sorry, this class is fully booked\"})\n        }\n        \n\n    }\n\n    render() {\n        const { show, clients, error } = this.state;\n        const { oneClass } = this.props;\n        const isBooked = clients[0]&& this.props.user&& clients.find(client => client.user.id === this.props.user.id)? true : false\n        const now = new Date()\n        const classDateAndTime = new Date(oneClass.date + \"T\" + oneClass.time)\n        const isInPast = classDateAndTime < now? true : false\n        return (\n            <div>\n                <button class=\"class-btn\" onClick={() => this.toggleShow(true)}>{oneClass.time + \" \" + oneClass.name}</button>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                <h1 className='workout-title'>{oneClass.time + \" \" + oneClass.name}</h1> <div className='attending-progress-bar'><div style={{width:`${((clients.length / oneClass.class_capacity) * 100).toFixed(2)}px`}}className='inner-progress-bar'><span className='attending-txt'>{clients.length === oneClass.class_capacity? \"Fully Booked\" : clients.length + ` / ${oneClass.class_capacity}`}</span></div></div>\n                <h3 className='desc-txt'><strong>Coach: </strong>{oneClass.coach.first_name + \" \" + oneClass.coach.last_name}</h3>\n                {oneClass.description.split('\\n').map(sentence => (\n                    <p className='desc-txt'>{sentence}</p> \n                ))\n                }\n                {!isInPast? <button onClick={() => this.handleBookandUnBookClass(this.props.oneClass.id)} class=\"book-btn\">{isBooked? \"Cancel\" : \"Book Class\"}</button> : <button class=\"past-btn\">Already Passed</button>}\n                {error&&\n                    <p className='error'>{this.state.error}</p>\n                }\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport DatePick from './DatePick'\nimport ClassModal from './ClassModal'\nimport ReactGA from 'react-ga';\nimport './Classes.css'\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/classes');\n}\n\nlet today = new Date()\nlet dd = today.getDate(); \nlet mm = today.getMonth() + 1; \n\nlet yyyy = today.getFullYear(); \nif (dd < 10) { \n    dd = '0' + dd; \n} \nif (mm < 10) { \n    mm = '0' + mm; \n} \nlet todaydate = yyyy + '-' + mm + '-' + dd; \n\nexport default class Classes extends Component {\n\n    state = {\n        classes: [],\n        date: todaydate, \n        chosenClass: null,\n        user: null,\n        isLoading: true\n    }\n\n    componentDidMount(){\n        initializeReactGA()\n\n        fetch(`https://wod-with-faris-backend.herokuapp.com/sessions?date=${this.state.date}`)\n        .then(resp => resp.json())\n        .then(classes => this.setState({classes: classes, isLoading: false}))\n\n        fetch(`https://wod-with-faris-backend.herokuapp.com/user/getuser?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(user => this.setState({user}))\n    }\n\n    handleDateChange = e => {\n        this.setState({\n           [e.target.name]: e.target.value,\n           isLoading: true\n        })\n        this.dateFetch(e.target.value)\n     }\n\n     handlePickClass = id => { \n        const pickedClass = this.state.classes.find( oneClass => oneClass.id === id)\n        this.setState({chosenClass: pickedClass})\n     }\n\n     handleDateClick = (arg) => {\n        alert(arg.dateStr)\n    }\n\n     deductToken = () => {\n        const { user } = this.state \n        this.setState({user: {\n            id: user.id,\n            coach: user.coach,\n            first_name: user.first_name,\n            last_name: user.last_name, \n            email: user.email,\n            tokens: user.tokens - 1\n        }})\n        ReactGA.event({\n            category: 'User',\n            action: `${this.state.user.first_name + \" \" + this.state.user.last_name} Booked a Class`\n        });\n     }\n     addToken = () => {\n        const { user } = this.state \n        this.setState({user: {\n            id: user.id,\n            coach: user.coach,\n            first_name: user.first_name,\n            last_name: user.last_name, \n            email: user.email,\n            tokens: user.tokens + 1\n        }})\n        ReactGA.event({\n            category: 'User',\n            action: `${this.state.user.first_name + \" \" + this.state.user.last_name} Cancelled a Class`\n        });\n     }\n\n    dateFetch = date => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/sessions?date=${date}`)\n        .then(resp => resp.json())\n        .then(classes => this.setState({classes: classes, isLoading: false}))\n    }\n\n    handleDayOffset = offset => {\n        let d = new Date(this.state.date)\n        let prev = new Date(d.setDate(d.getDate() + offset)).toISOString().slice(0,10)\n        this.setState({date: prev})\n        this.dateFetch(prev)\n    }\n\n\n    render() {\n        const  { date, classes, isLoading } = this.state\n        const filteredClasses = classes.filter(oneClass => oneClass.date === date)\n        const timeOrderedClasses = filteredClasses.sort((a, b) => new Date(a.date + \" \" + a.time) - new Date(b.date + \" \" + b.time))\n        return (\n            <div>\n                <h1>Book Class</h1>\n                <DatePick  handleOffset={this.handleDayOffset} date={date} handleChange={this.handleDateChange}/>\n                <div className='container'>\n                    {isLoading&& <button className='loading'></button >}\n                    {classes[0]?\n                    timeOrderedClasses.map(oneClass => (\n                        <ClassModal addToken={this.addToken} deductToken={this.deductToken} user={this.state.user} oneClass={oneClass} handlePickClass={this.handlePickClass}/>\n                    ))\n                    :\n                    !isLoading&& <h1>No Classes</h1>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport dateFormat from 'dateformat'\nimport './Classes.css'\n\nexport default class ClassCard extends Component {\n\n\n    handleCancelBooking = id => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/usersession/unbook`, {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.props.user.id,\n                    session_id: id\n                })\n            }).then(resp => resp.json()).then(deletedBooking => this.props.handleCancel(deletedBooking)).then(this.props.addToken)\n\n            fetch(\"https://api.pushover.net/1/messages.json\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    token: 'adohia1ym9d8bopuvjys6zrgdu4psa',\n                    user: 'ubujnjnpw22cv58byd8w6kot7yx648',\n                    message: `${this.props.user.first_name + \" \" + this.props.user.last_name} unbooked the ${this.props.upcomingClass.time + \" \" + this.props.upcomingClass.name} class that's on ${dateFormat(this.props.upcomingClass.date, \"fullDate\")}`\n                })\n            })\n    }\n\n    render() {\n        const { upcomingClass } = this.props\n        return (\n            <div className='class-card'>\n                <h2 className='card-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h2>\n                <p className='card-date'>{dateFormat(upcomingClass.date, \"fullDate\")}</p>\n                <button onClick={() => this.handleCancelBooking(upcomingClass.id)} className='book-btn'>Cancel</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport dateFormat from 'dateformat'\nimport PopPop from 'react-poppop';\nimport Select from 'react-select'\nimport './Classes.css'\n\nexport default class CoachClassCard extends Component {\n\n    state = {\n        show: false,\n        clients: [],\n        askDeleteConfirm: false,\n        editMode: false,\n        classDescription: this.props.upcomingClass.description,\n        addClient: false,\n        allClients: [],\n        clientToAdd: null\n    }\n    \n    componentDidMount(){\n        fetch(`https://wod-with-faris-backend.herokuapp.com/usersessions?class_id=${this.props.upcomingClass.id}`, {\n        }).then(resp => resp.json()).then(clients => this.setState({clients}))\n    }\n\n\n    handleClients = allClients => {\n        const formatedClients = allClients[0]&& allClients.map(client => {\n            return { label: client.first_name + \" \" + client.last_name, client: {first_name: client.first_name, last_name: client.last_name, id: client.id} }\n        })\n        this.setState({allClients: formatedClients})\n    }\n\n    handleDeleteClass = id => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/sessions/deleted/${id}`, {\n                method: \"DELETE\"\n            }).then(resp => resp.json()).then(deletedBooking => this.props.handleCancel(deletedBooking))\n        const ids = this.state.clients.map(client => {return client.user.id})\n        fetch(\"https://wod-with-faris-backend.herokuapp.com/sessions/returntokens\", {\n            method: \"POST\", \n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                client_ids: ids\n            })\n        }).then(this.setState({askDeleteConfirm: false}))\n    }\n\n    toggleShow = show => {\n        this.setState({show: show, tokenError: null});\n    }\n    toggleDeleteConfirm = () => {\n        this.setState({askDeleteConfirm: !this.state.askDeleteConfirm});\n    }\n\n\n    toggleEditMode = () => {\n        this.setState({editMode: !this.state.editMode})\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit = id => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/sessions/update/${id}`, {\n                method: \"PATCH\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    description: this.state.classDescription\n                })\n        }).then(this.setState({editMode: false}))\n    }\n\n    toggleAddClient = () => {\n        this.setState({addClient: !this.state.addClient})\n        fetch('https://wod-with-faris-backend.herokuapp.com/users/index').then(resp => resp.json()).then(allClients => this.handleClients(allClients))\n    }\n\n    handleAddClientOrCancel = () => {\n        if (!this.state.clientToAdd){\n            this.setState({addClient: false})\n        } else if (this.state.clientToAdd){\n            fetch(\"https://wod-with-faris-backend.herokuapp.com/usersession/book\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.state.clientToAdd.id,\n                    session_id: this.props.upcomingClass.id\n                })\n            }).then(resp => resp.json()).then(this.setState({clients: [...this.state.clients, {user: this.state.clientToAdd}], clientToAdd: null, addClient: null}))\n        }\n    }\n\n    handleSetClient = e => {\n        this.setState({clientToAdd: e.client})\n    }\n\n    render() {\n        const { upcomingClass, coach } = this.props\n        const { show, clients, askDeleteConfirm, editMode, classDescription, addClient, clientToAdd, allClients } = this.state\n        return (\n            <div className='coach-class-card'>\n                <h2 className='card-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h2>\n                <p className='card-date'>{dateFormat(upcomingClass.date, \"fullDate\")}</p>\n                {askDeleteConfirm? <div> <button onClick={() => this.handleDeleteClass(upcomingClass.id)} className='book-btn'>Confirm Delete</button> <button onClick={this.toggleDeleteConfirm} className='book-btn'>Cancel Delete</button> </div>: <button onClick={this.toggleDeleteConfirm} className='book-btn'>Delete Class</button>}\n                {askDeleteConfirm? undefined : <button onClick={() => this.toggleShow(true)} className='book-btn'>More Info</button>}\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                    <h1 className='workout-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h1> <div className='attending-progress-bar'><div style={{width:`${((clients.length/upcomingClass.class_capacity) * 100).toFixed(2)}px`}}className='inner-progress-bar'><span className='attending-txt'>{clients.length === 8? \"Fully Booked\" : clients.length + ` / ${upcomingClass.class_capacity}`}</span></div></div>\n                    <h3 className='desc-txt'><strong>Coach: </strong>{coach.first_name + \" \" + coach.last_name}</h3>\n                    {!editMode?\n                    classDescription.split('\\n').map(sentence => (\n                        <p className='desc-txt'>{sentence}</p> \n                    ))\n                    :\n                    <textarea className='edit-desc' value={classDescription} onChange={this.handleChange} name='classDescription'/>\n                    } \n                    <div>\n                    {!editMode? <button className='book-btn' onClick={this.toggleEditMode}>Edit Workout</button> : <button className='book-btn' onClick={() => this.handleSubmit(upcomingClass.id)}>Submit</button>}\n                        <h3 className='desc-txt'>Signed  Up Clients</h3>\n                        {clients.map(client => (\n                            <p className='desc-txt'>- {client.user.first_name + \" \" + client.user.last_name}</p>\n                        ))}\n                        {!clients[0]&&\n                            <p className='desc-txt'>None</p>\n                        }\n                    {!addClient? <button className='book-btn' onClick={this.toggleAddClient}>Add Client</button> :<><Select className='activity-input' options={allClients} onChange={this.handleSetClient}/> <button className='book-btn' onClick={this.handleAddClientOrCancel}>{clientToAdd? 'Submit' : 'Cancel'}</button></>}\n                    </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport PopPop from 'react-poppop';\nimport './AllUpcomingClasses.css'\nimport CoachClassCard from './CoachClassCard';\n\nexport default class AllUpcomingClasses extends Component {\n    render() {\n        const { show, upcomingClasses, handleCancel, user, toggleShow } = this.props\n        const timeOrderedClasses = upcomingClasses[0]? upcomingClasses.sort((a, b) => new Date(a.date + \" \" + a.time) - new Date(b.date + \" \" + b.time)) : upcomingClasses\n        return (\n            <div>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => toggleShow(false)}\n                        closeOnOverlay={true}>\n                <div className='all-upcoming-classes-container'>\n                    <h1 className='header'>All Upcoming Classes</h1>\n                    {timeOrderedClasses.map(upcomingClass => (\n                        <>\n                            <CoachClassCard handleCancel={handleCancel} user={user} coach={upcomingClass.coach} upcomingClass={upcomingClass.class}/>\n                        </>\n                    ))}\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { CardElement } from \"@stripe/react-stripe-js\";\n\nconst CARD_ELEMENT_OPTIONS = {\n  iconStyle: \"solid\",\n  hidePostalCode: true,\n  style: {\n    base: {\n      iconColor: \"rgb(240, 57, 122)\",\n      color: \"rgb(240, 57, 122)\",\n      fontSize: \"16px\",\n      fontFamily: '\"Open Sans\", sans-serif',\n      fontSmoothing: \"antialiased\",\n      \"::placeholder\": {\n        color: \"#CFD7DF\"\n      }\n    },\n    invalid: {\n      color: \"#e5424d\",\n      \":focus\": {\n        color: \"#303238\"\n      }\n    }\n  }\n};\n\nfunction CardSection() {\n  return <CardElement options={CARD_ELEMENT_OPTIONS} />;\n}\n\nexport default CardSection","import React, { Component } from 'react'\nimport { CardElement } from \"@stripe/react-stripe-js\"\nimport CardSection from './CardSection'\nimport dateFormat from 'dateformat'\nimport './CheckoutForm.css'\n\nexport default class PTSessionCheckoutForm extends Component {\n\n    state = {\n        name: \"\",\n        paymentSuccess: false, \n        paymentError: null,\n        paymentPending: false\n    }\n\n\n    handleNameChange = event => {\n        this.setState({name: event.target.value})\n    }\n\n    handleSubmit = async event => {\n        this.setState({paymentPending: true})\n        event.preventDefault();\n    \n        const { stripe, elements } = this.props;\n        if (!stripe || !elements) {\n            return;\n        }\n\n        const card = elements.getElement(CardElement);\n        const result = await stripe.createToken(card);\n        if (result.error) {\n            window.alert(result.error.message);\n        } else {\n            const { upcomingPTSession } = this.props\n            fetch(\"https://wod-with-faris-backend.herokuapp.com/users/payforptsession\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    price: upcomingPTSession.price,\n                    description: `Personal Training Session`, \n                    token: result.token.id\n                })\n            }).then(resp => resp.json()).then(resp => this.cardPayment(resp.client_secret))\n        }\n    };\n\n\n    cardPayment = async (clientSecret) => {\n        const { stripe, elements } = this.props;\n        const { name } = this.state\n\n        const result = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n              card: elements.getElement(CardElement),\n              billing_details: {\n                name: name,\n              },\n            }\n    })\n\n        if (result.error) {\n            this.setState({paymentPending: false, paymentError: result.error.message})\n          } else {\n            if (result.paymentIntent.status === 'succeeded') {\n                this.setState({paymentPending: false, paymentSuccess: true, paymentError: null})\n                this.props.handlePaid()\n                \n                const { upcomingPTSession } = this.props\n                fetch(\"https://wod-with-faris-backend.herokuapp.com/ptsessions/confirmptsession\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    pt_session: upcomingPTSession.id\n                })\n            }).then(\n                setTimeout(() => {\n                    this.setState({paymentSuccess: false})\n                }, 6000)\n                )\n\n                fetch(\"https://api.pushover.net/1/messages.json\", {\n                    method: \"POST\", \n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        token: 'adohia1ym9d8bopuvjys6zrgdu4psa',\n                        user: 'ubujnjnpw22cv58byd8w6kot7yx648',\n                        sound: 'cashregister',\n                        message: `${this.state.name} paid CHF${this.props.upcomingPTSession.price} and confirmed the Personal Training that is on ${dateFormat(this.props.upcomingPTSession.date, \"fullDate\")} at ${this.props.upcomingPTSession.time}`\n                    })\n                })\n            }\n        }\n    }\n\n    render() {\n        const { upcomingPTSession } = this.props\n        const { name, paymentSuccess, paymentError, paymentPending } = this.state\n        return (\n            <div>\n                <div className='checkout-form'>\n                    {paymentSuccess&&<p className='payment-success'>Payment Successful</p>}\n                    {paymentError&&<p className='payment-error'>Error: {paymentError}</p>}\n                {paymentSuccess?\n                    <h1 className='payment-success'>Thank you! Your PT Session has been confirmed!</h1>\n                :\n                <>\n                    <div class=\"product-info\">\n                        <h4 className=\"product-price\">Total: CHF {upcomingPTSession.price}</h4>\n                    </div>\n                    <form className='form' onSubmit={this.handleSubmit}>\n                        <input className='name-card-input' required value={name} onChange={this.handleNameChange} type='text' placeholder='Full Name as displayed on card'/>\n                        <CardSection/>\n                        {paymentPending? <button className='loading-spinner'> </button> : <button className=\"btn-pay\">Pay</button>}\n                    </form>\n                </>\n                }\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport PopPop from 'react-poppop'\nimport dateFormat from 'dateformat'\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { ElementsConsumer } from \"@stripe/react-stripe-js\"\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport PTSessionCheckoutForm from './PTSessionCheckoutForm'\nimport './PTSessionCard.css'\n\nconst stripePromise = loadStripe('pk_live_4g3t1ZRoe5slZQbs5Vy3IaGe00fOR9THIq');\n\nexport default class PTSessionCard extends Component {\n\n    state = {\n        show: false,\n        paid: this.props.upcomingPTSession.paid\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n\n    handlePaid = () => {\n        this.setState({paid: true})\n    }\n\n    render() {\n        const { upcomingPTSession, user } = this.props\n        const { show, paid } = this.state \n        return (\n            <div className='class-card'>\n                <h2 className='card-title'>{upcomingPTSession.time + \" \" + upcomingPTSession.name}</h2>\n                <p className='card-date'>{dateFormat(upcomingPTSession.date, \"fullDate\")}</p>\n                <button onClick={() => this.toggleShow(true)} className='book-btn'>{!paid? 'Confirm' : 'Confirmed!'}</button>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                <div className='pt-session-modal'>\n                    <h1 className='pt-modal-title'>{upcomingPTSession.time + \" \" + upcomingPTSession.name}</h1>\n                    <div className='pt-paid-status'><p style={{textAlign: 'center'}}>Status: <p style={paid? {color: 'green'} : {color: 'red'}}>{paid? 'Paid' : 'Not Paid'}</p></p></div>\n                    {/* <h3 className='desc-txt'><strong>Coach: </strong>{upcomingPTSession.coach.first_name + \" \" + upcomingPTSession.coach.last_name}</h3> */}\n                    <h3 className='desc-txt'><strong>Location: </strong>{upcomingPTSession.location}</h3>\n                    {upcomingPTSession.description.split('\\n').map(sentence => (\n                    <p className='desc-txt'>{sentence}</p> \n                    ))\n                    }\n                    {!paid&&\n                        <Elements stripe={stripePromise}>\n                        <ElementsConsumer>\n                            {({ stripe, elements }) => (\n                            <PTSessionCheckoutForm handlePaid={this.handlePaid} userEmail={user.email} upcomingPTSession={upcomingPTSession} stripe={stripe} elements={elements} />\n                            )}\n                        </ElementsConsumer>\n                        </Elements>\n                    }\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport dateFormat from 'dateformat'\nimport PopPop from 'react-poppop';\nimport './Classes.css'\n\nexport default class CoachPTSessionCard extends Component {\n\n    state = {\n        show: false,\n        askDeleteConfirm: false,\n        editMode: false,\n        ptDescription: this.props.upcomingPTSession.description,\n        ptLocation: this.props.upcomingPTSession.location,\n        ptTime: this.props.upcomingPTSession.time, \n        ptDate: this.props.upcomingPTSession.date,\n        ptPrice: this.props.upcomingPTSession.price\n\n    }\n    \n    componentDidMount(){\n\n    }\n\n\n    handleDeletePTSession = id => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/ptsessions/delete/${id}`, {\n                method: \"DELETE\"\n            }).then(resp => resp.json()).then(deletedBooking => this.handleDeletedBooking(deletedBooking))\n    }\n\n    handleDeletedBooking = deletedBooking => {\n        this.props.handleCancel(deletedBooking)\n        this.setState({askDeleteConfirm: false})\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n    toggleDeleteConfirm = () => {\n        this.setState({askDeleteConfirm: !this.state.askDeleteConfirm});\n    }\n\n\n    toggleEditMode = () => {\n        this.setState({editMode: !this.state.editMode})\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit = id => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/ptsessions/update/${id}`, {\n                method: \"PATCH\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    description: this.state.ptDescription,\n                    location: this.state.ptLocation, \n                    time: this.state.ptTime,\n                    date: this.state.ptDate,\n                    price: parseInt(this.state.ptPrice)\n                })\n        }).then(this.setState({editMode: false}))\n    }\n\n    render() {\n        const { upcomingPTSession, client } = this.props\n        const { show, askDeleteConfirm, editMode, ptDescription, ptLocation, ptTime, ptDate, ptPrice } = this.state\n        return (\n            <div className='coach-class-card'>\n                <h2 className='card-title'>{upcomingPTSession.time + \" \" + upcomingPTSession.name}</h2>\n                <p className='card-date'>{dateFormat(upcomingPTSession.date, \"fullDate\")}</p>\n                {askDeleteConfirm? <div> <button onClick={() => this.handleDeletePTSession(upcomingPTSession.id)} className='book-btn'>Confirm Delete</button> <button onClick={this.toggleDeleteConfirm} className='book-btn'>Cancel Delete</button> </div>: <button onClick={this.toggleDeleteConfirm} className='book-btn'>Delete Class</button>}\n                {askDeleteConfirm? undefined : <button onClick={() => this.toggleShow(true)} className='book-btn'>More Info</button>}\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                    <h1 className='workout-title'>{upcomingPTSession.time + \" \" + upcomingPTSession.name}</h1>\n                    <div><p style={{textAlign: 'center', color: 'black'}}>Status: <p style={upcomingPTSession.paid? {color: 'green'} : {color: 'red'}}>{upcomingPTSession.paid? 'Paid' : 'Not Paid'}</p></p></div>\n                    <h3 className='desc-txt'>Client: {client.first_name + \" \" + client.last_name}</h3>\n                    <h3 className='desc-txt'>Price: CHF {!editMode? ptPrice : <input type='number' name='ptPrice' value={ptPrice} onChange={this.handleChange}/>}</h3>\n                    <h3 className='desc-txt'>Location: {!editMode? ptLocation : <input type='text' name='ptLocation' value={ptLocation} onChange={this.handleChange}/>}</h3>\n                    <h3 className='desc-txt'>Date: {!editMode? dateFormat(ptDate, \"fullDate\") : <input type='date' name='ptDate' value={ptDate} onChange={this.handleChange}/>}</h3>\n                    <h3 className='desc-txt'>Time: {!editMode? ptTime : <input type='time' name='ptTime' value={ptTime} onChange={this.handleChange}/>}</h3>\n                    {!editMode?\n                    ptDescription.split('\\n').map(sentence => (\n                        <p className='desc-txt'>{sentence}</p> \n                    ))\n                    :\n                    <textarea className='edit-desc' value={ptDescription} onChange={this.handleChange} name='ptDescription'/>\n                    } \n                    <div>\n                    {!editMode? <button className='book-btn' onClick={this.toggleEditMode}>Edit Workout</button> : <button className='book-btn' onClick={() => this.handleSubmit(upcomingPTSession.id)}>Submit</button>}\n\n                    </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport ClassCard from './ClassCard'\nimport CoachClassCard from './CoachClassCard'\nimport ReactGA from 'react-ga';\nimport AllUpcomingClasses from './AllUpcomingClasses';\nimport PTSessionCard from './PTSessionCard';\nimport CoachPTSessionCard from './CoachPTSessionCard';\nimport './Profile.css'\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/profile');\n}\n\nexport default function Profile(props) {\n\n    const [user, setUser] = useState(null)\n    const [upcomingClasses, setUpcomingClasses] = useState([])\n    const [upcomingPTSessions, setUpcomingPTSessions] = useState([])\n    const [showUpcomingClasses, setShowUpcomingClasses] = useState(false)\n\n    useEffect(() => {\n        initializeReactGA()\n        \n        fetch(`https://wod-with-faris-backend.herokuapp.com/user/getuser?email=${props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(user => handleUser(user))\n\n\n        fetch(`https://wod-with-faris-backend.herokuapp.com/usersession/upcomingclasses?email=${props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(upcoming => handleUpcomingClasses(upcoming))\n    }, [])\n    \n\n    const handleUpcomingClasses = upcoming => {\n        setUpcomingClasses(upcoming.classes)\n        setUpcomingPTSessions(upcoming.ptsessions)\n    }\n\n    const handleUser = user => {\n        setUser(user)\n    }\n\n    const addToken = () => {\n        const updatedUser = {\n            id: user.id,\n            coach: user.coach,\n            first_name: user.first_name,\n            last_name: user.last_name, \n            email: user.email,\n            tokens: user.tokens + 1\n        }\n        setUser(updatedUser)\n     }\n\n     const handleCancel = deletedBooking => {\n         setUpcomingClasses(upcomingClasses.filter(booking => booking.class.id !== deletedBooking.session.id))\n     }\n     const handleDeleteClass = deletedClass => {\n         setUpcomingClasses(upcomingClasses.filter(booking => booking.class.id !== deletedClass.id))\n     }\n     const handleDeletePTSession = deletedClass => {\n         setUpcomingPTSessions(upcomingPTSessions.filter(ptSession => ptSession.ptsession.id !== deletedClass.id))\n     }\n\n    const toggleShowUpcomingClasses = show => {\n        setShowUpcomingClasses(show)\n    }\n\n        const timeOrderedClasses = upcomingClasses[0]? upcomingClasses[0].class? upcomingClasses.sort((a, b) => new Date(a.class.date + \"T\" + a.class.time) - new Date(b.class.date + \"T\" + b.class.time)) : upcomingClasses.sort((a, b) => new Date(a.date + \"T\" + a.time) - new Date(b.date + \"T\" + b.time)) : upcomingClasses\n        const timeOrderedPTSessions = upcomingPTSessions[0]? upcomingPTSessions[0].ptsession? upcomingPTSessions.sort((a, b) => new Date(a.ptsession.date + \" \" + a.ptsession.time) - new Date(b.ptsession.date + \" \" + b.ptsession.time)) : upcomingPTSessions.sort((a, b) => new Date(a.date + \" \" + a.time) - new Date(b.date + \" \" + b.time)) : upcomingPTSessions\n        const orderedByDateUpcomingClasses = timeOrderedClasses&& timeOrderedClasses.sort((a, b) => new Date(a.date) - new Date(b.date))\n        const orderedByDateUpcomingPTsessions = timeOrderedPTSessions&& timeOrderedPTSessions.sort((a, b) => new Date(a.date) - new Date(b.date))\n        const SlicedUpcomingClasses = orderedByDateUpcomingClasses&& orderedByDateUpcomingClasses.slice(0, 2)\n        const SlicedUpcomingPTSessions = orderedByDateUpcomingPTsessions&& orderedByDateUpcomingPTsessions.slice(0, 2)\n        return (\n            <div>\n                <div className='profile-container'>\n                    {user?\n                    <>\n                        <h1>{user.first_name + \" \" + user.last_name}</h1>\n                        {!user.coach&& <h2 className='tokens'>Class Passes: {user.tokens}</h2>}\n                        <div className='upcoming-classes-container'>\n                            <div>\n                            <h2 className='upcoming-classes-title'>Upcoming Classes: </h2>\n                                {!user.coach&& upcomingClasses[0]&&\n                                    SlicedUpcomingClasses.map(upcomingClass => (\n                                        <ClassCard handleCancel={handleCancel} addToken={addToken} user={user} upcomingClass={upcomingClass.class}/>\n                                    ))\n                                }\n                                {user.coach&& upcomingClasses[0]&&\n                                <button onClick={() => toggleShowUpcomingClasses(true)} className='all-upcoming-classes-btn'>All upcoming classes</button>\n                                }\n                                {showUpcomingClasses&& <AllUpcomingClasses toggleShow={toggleShowUpcomingClasses} handleCancel={handleDeleteClass} user={user} show={showUpcomingClasses} upcomingClasses={orderedByDateUpcomingClasses}/>}\n                                {user.coach&& upcomingClasses[0]&&\n                                    SlicedUpcomingClasses.map(upcomingClass => (\n                                        <CoachClassCard handleCancel={handleDeleteClass} user={user} coach={upcomingClass.coach} upcomingClass={upcomingClass.class}/>\n                                    ))\n                                }\n                                {!upcomingClasses[0]&&<h3 className='none'>None</h3>}\n                            </div>\n                            <div className='upcoming-pt-sessions'>\n                                <h2 className='upcoming-classes-title'>Upcoming PT Sessions: </h2>\n                                {!user.coach&& upcomingPTSessions[0]&&\n                                    SlicedUpcomingPTSessions.map(upcomingPTSession => (\n                                        <PTSessionCard user={user} upcomingPTSession={upcomingPTSession}/>\n                                    ))\n                                }\n                                {user.coach&& upcomingPTSessions[0]&&\n                                    SlicedUpcomingPTSessions.map(upcomingPTSession => (\n                                        <CoachPTSessionCard handleCancel={handleDeletePTSession} user={user} upcomingPTSession={upcomingPTSession.ptsession} client={upcomingPTSession.user}/>\n                                    ))\n                                }\n                            </div>\n\n                            {!upcomingPTSessions[0]&&<h3 className='none'>None</h3>}\n\n                        </div>\n                    </>\n                    :\n                    <button className='loading'></button >\n                    }\n                </div>\n            </div>\n        )\n}\n","import React, { Component } from 'react'\nimport './CreateClass.css'\n\nexport default class CreateClass extends Component {\n\n    state = {\n        name: null,\n        description: null,\n        date: null,\n        time: null,\n        classCapacity: 8, \n        coach: null, \n        success: false,\n        errorMessage: null\n    }\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris-backend.herokuapp.com/user/getuser?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(coach => this.setState({coach}))\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n         })\n    }\n\n    handleCreateClass = () => {\n        const { name, description, date, time, coach, classCapacity } = this.state\n        if ( name && description && date && time && classCapacity  ){\n        fetch(\"https://wod-with-faris-backend.herokuapp.com/sessions/create\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: name, \n                    description: description,\n                    date: date,\n                    time: time,\n                    class_capacity: parseInt(classCapacity),\n                    user_id: coach.id\n                })\n            }).then(resp => resp.json()).then(this.setState({success: true, errorMessage: null, name: \"\", description: \"\", date: \"\", time: \"\"}))\n            .catch(errorMessage => this.setState({errorMessage}))\n        } else {\n            this.setState({errorMessage: \"Please fill all fields\"})\n        }\n    } \n\n    render() {\n        const { success, errorMessage, name, date, description, time, classCapacity } = this.state\n        return (\n            <div>\n                <h1 className='create-class-title'>Create Class</h1>\n                {success&&\n                        <h2 className='success'>Class Created!</h2>\n                }\n                {errorMessage&&\n                        <h2 className='error-message'>{errorMessage}</h2>\n                }\n                <div className='create-class-div'>\n                    <h3 className='create-class-h3'>Name</h3>\n                    <input name='name' value={name} onChange={this.handleChange} className='create-class-input' type='text'/>\n                    <h3 className='create-class-h3' >Description</h3>\n                    <textarea name='description' value={description} onChange={this.handleChange} className='create-class-textarea'/>\n                    <h3 className='create-class-h3'>Date</h3>\n                    <input name='date' value={date} onChange={this.handleChange} className='create-class-input' type='date'/>\n                    <h3 className='create-class-h3'>Time</h3>\n                    <input name='time' value={time} onChange={this.handleChange} className='create-class-input' type='time'/>\n                    <h3 className='create-class-h3'>Class Capacity</h3>\n                    <input name='classCapacity' value={classCapacity} onChange={this.handleChange} className='create-class-input' type='number'/>\n                    <button className='create-class-btn' onClick={this.handleCreateClass}>Create Class</button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Clients.css'\nimport PopPop from 'react-poppop';\n\nexport default class Client extends Component {\n\n    state = {\n        show: false, \n        editMode: false,\n        email: this.props.client.email,\n        tokens: this.props.client.tokens\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n    \n    toggleEditMode = () => {\n        this.setState({editMode: true})\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    submitEdit = id => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/user/update/${id}`, {\n                method: \"PATCH\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: this.state.email,\n                    tokens: this.state.tokens\n                })\n        }).then(this.setState({editMode: false}))\n    }\n\n    render() {\n        const { client } = this.props\n        const { show, email, tokens, editMode } = this.state\n        return (\n            <div>\n                <h3 onClick={this.toggleShow}  className={tokens <=1? 'low-on-tokens-client' : 'client'}>{client.first_name + \" \" + client.last_name}</h3>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                            <div className='client-modal-container'>\n                                <h3 className='client-txt'>{client.first_name + \" \" + client.last_name}</h3>\n                                <p className='client-txt'>Email: </p> {!editMode? <p className='client-txt'>{email}</p> : <input onChange={this.handleChange} className='edit-input' value={email} name='email'/>}\n                                <p className='client-txt'>Class Passes: </p> {!editMode? <p className='client-txt'>{tokens}</p> : <input onChange={this.handleChange} className='edit-input' type='number' value={tokens} name='tokens'/>}\n                                {!editMode? <button onClick={this.toggleEditMode} className='edit-btn'>Edit</button> : <button onClick={() => this.submitEdit(client.id)} className='edit-btn'>Submit</button>}\n                            </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Clients.css'\nimport Client from './Client';\n\nexport default class Clients extends Component {\n\n    state = {\n        search: null,\n        allClients: []\n    }\n\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris-backend.herokuapp.com/users/index`)\n        .then(resp => resp.json())\n        .then(allClients => this.setState({allClients}))\n    }\n\n    handleSearch = e => {\n        const search = e.target.value\n        if (search.length > 0) {\n            this.setState({search})\n        } else if (search.length === 0){\n            this.setState({search: null})\n        }\n \n    }\n\n    fuzzyMatch = (compareTerm ,term) => {\n        if (term.length === 0)\n            return 1;\n        let string = compareTerm.toLowerCase();\n        let compare = term.toLowerCase();\n        let matches = 0;\n        for (let i = 0; i < compare.length; i++) {\n            string.indexOf(compare[i]) > -1 ? matches += 1 : matches -=1;\n        }\n        return matches / compareTerm.length;\n    }\n\n    sortSearch = (clients) => {\n        const results = clients.map(client => [client, this.fuzzyMatch(client.first_name + \" \" + client.last_name, this.state.search)]);\n        results.sort((a, b) => b[1] - a[1]);\n        const filteredResults = results.filter(result => result[1] > 0)\n        return filteredResults\n    }\n\n    render() {\n        const { allClients, search } = this.state\n        const alphebetizedClients = allClients.sort((a,b) =>  a.last_name.localeCompare(b.last_name))\n        const filteredClients = search? this.sortSearch(allClients) : alphebetizedClients\n        return (\n            <div>\n                <h1>Clients</h1>\n                <input className='search-bar' onChange={this.handleSearch} name='search' type='text'/>\n                <div className='clients-container'>\n                    {allClients&& allClients[0]&&\n\n                    filteredClients.map(client => (\n                        <Client client={search? client[0] : client}/>\n                    ))\n\n                    }\n                    {allClients&& !allClients[0]&&\n                        <h2>None</h2>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport PopPop from 'react-poppop';\nimport { CardElement } from \"@stripe/react-stripe-js\"\nimport CardSection from './CardSection'\nimport './CheckoutForm.css'\n\nexport default class CheckoutForm extends Component {\n\n    state = {\n        name: \"\",\n        paymentSuccess: false, \n        paymentError: null,\n        paymentPending: false\n    }\n\n\n    handleNameChange = event => {\n        this.setState({name: event.target.value})\n    }\n\n    handleSubmit = async event => {\n        this.setState({paymentPending: true})\n        event.preventDefault();\n    \n        const { stripe, elements } = this.props;\n        if (!stripe || !elements) {\n            return;\n        }\n\n        const card = elements.getElement(CardElement);\n        const result = await stripe.createToken(card);\n        if (result.error) {\n            window.alert(result.error.message);\n            this.setState({paymentPending: false})\n        } else {\n            const { quantity } = this.props\n            fetch(\"https://wod-with-faris-backend.herokuapp.com/users/buyclasspasses\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    quantity: quantity,\n                    description: `${quantity}X Class Passes`, \n                    token: result.token.id\n                })\n            }).then(resp => resp.json()).then(resp => this.cardPayment(resp.client_secret))\n        }\n    };\n\n\n    cardPayment = async (clientSecret) => {\n        const { stripe, elements } = this.props;\n        const { name } = this.state\n\n        const result = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n              card: elements.getElement(CardElement),\n              billing_details: {\n                name: name,\n              },\n            }\n    })\n\n        if (result.error) {\n            this.setState({paymentPending: false, paymentError: result.error.message})\n          } else {\n            if (result.paymentIntent.status === 'succeeded') {\n                this.setState({paymentPending: false, paymentSuccess: true, paymentError: null})\n                \n                const { quantity, userEmail } = this.props\n                fetch(\"https://wod-with-faris-backend.herokuapp.com/users/addclasspasses\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    quantity: quantity,\n                    user_email: userEmail\n                })\n            }).then(\n                setTimeout(() => {\n                    this.setState({paymentSuccess: false})\n                    this.props.toggleShow(false)\n                    this.props.resetQuantity()\n                }, 6000)\n                )\n\n                fetch(\"https://api.pushover.net/1/messages.json\", {\n                    method: \"POST\", \n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        token: 'adohia1ym9d8bopuvjys6zrgdu4psa',\n                        user: 'ubujnjnpw22cv58byd8w6kot7yx648',\n                        sound: 'cashregister',\n                        message: `${this.state.name} purchased ${this.props.quantity}X class passes`\n                    })\n                })\n            }\n        }\n    }\n\n    render() {\n        const { show, toggleShow, quantity } = this.props\n        const { name, paymentSuccess, paymentError, paymentPending } = this.state\n        return (\n            <div>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={false}\n                        onClose={() => toggleShow(false)}\n                        closeOnOverlay={false}>\n                <div className='checkout-form'>\n                    {paymentSuccess&&<p className='payment-success'>Payment Successful</p>}\n                    {paymentError&&<p className='payment-error'>Error: {paymentError}</p>}\n                {paymentSuccess?\n                    <h1 className='payment-success'>Thank you! {this.props.quantity}X Class Passes have been added to your account!</h1>\n                :\n                <>\n                    <div class=\"product-info\">\n                        <h3 className=\"product-title\">{quantity === 1? \"1X Class Pass\": quantity + \"X Class Passes\"}</h3>\n                        <h4 className=\"product-price\">Total: CHF {quantity * 10}</h4>\n                    </div>\n                    <form className='form' onSubmit={this.handleSubmit}>\n                        <input className='name-card-input' required value={name} onChange={this.handleNameChange} type='text' placeholder='Full Name as displayed on card'/>\n                        <CardSection/>\n                        {paymentPending? <button className='loading-spinner'> </button> : <button className=\"btn-pay\">Buy Now</button>}\n                    </form>\n                </>\n                }\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n\n\n","import React, { Component } from 'react'\nimport ReactGA from 'react-ga';\nimport './BuyPasses.css'\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { ElementsConsumer } from \"@stripe/react-stripe-js\"\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport CheckoutForm from './CheckoutForm';\n\nconst stripePromise = loadStripe('pk_live_4g3t1ZRoe5slZQbs5Vy3IaGe00fOR9THIq');\n\nexport default class BuyPasses extends Component {\n\n    state = {\n        quantity: 0, \n        purchaseAmountLimit: false, \n        show: false\n    }\n\n    handleQuantityChange = amount => {\n        const { quantity } = this.state\n        if (quantity > 0 && quantity < 5) {\n            this.setState({quantity: quantity + amount, purchaseAmountLimit: false})\n        } else if ( quantity === 0 && amount === 1) {\n            this.setState({quantity: 1, purchaseAmountLimit: false})\n        }else if (quantity === 5 && amount === -1) {\n            this.setState({quantity: quantity + amount, purchaseAmountLimit: false})\n        } else if (quantity === 5) {\n            this.setState({purchaseAmountLimit: true})\n        }\n        ReactGA.event({\n            category: 'User',\n            action: `${amount}X classes was added to the cart.`\n        });\n    }\n\n    resetQuantity = () => {\n        this.setState({quantity: 0})\n    }\n\n    toggleShow = show => {\n        if (this.state.quantity > 0) {\n            this.setState({show: show});\n        } else if (this.state.quantity === 0) {\n            window.alert(\"Quantity of class passes must be more than 0\")\n        }\n\n        ReactGA.event({\n            category: 'User',\n            action: `Checkout button was hit`\n        });\n    }\n\n    render() {\n        const { quantity, purchaseAmountLimit } = this.state\n        return (\n            <div>\n                <h1>Buy Passes</h1>\n                <div className='purchase-box'>\n                    <div>\n                        <h1 className='quantity-title'>Class Passes</h1>\n                        {purchaseAmountLimit&& <p className='limit'>Purchase limit is 5 classes</p>}\n                        <h1 className='quantity'>{quantity}</h1>\n                        <div className='buttons-container'>\n                            <button className='quantity-btn' onClick={() => this.handleQuantityChange(-1)}>-</button>\n                            <button className='quantity-btn' onClick={() => this.handleQuantityChange(1)}>+</button>\n                        </div>\n                        <h1 className='total'>Total: CHF {quantity * 10}</h1>\n                        <button onClick={() => this.toggleShow(true)} className='checkout-btn'>Checkout</button>\n                        <Elements stripe={stripePromise}>\n                        <ElementsConsumer>\n                            {({ stripe, elements }) => (\n                            <CheckoutForm resetQuantity={this.resetQuantity} userEmail={this.props.currentUser.email} show={this.state.show} toggleShow={this.toggleShow} quantity={quantity} stripe={stripe} elements={elements} />\n                            )}\n                        </ElementsConsumer>\n                        </Elements>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n\nconst StyledLink = styled(Link)`\n    text-decoration: none;\n    &:focus, &:hover, &:visited, &:link, &:active {\n        text-decoration: none;\n    }\n`;\n\nexport default (props) => <StyledLink {...props} />;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport StyledLink from './StyledLink.js';\nimport './NavBar.css'\n\nexport default function MobileMenu(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (e) => {\n    setAnchorEl(null);\n    \n    if (e.target.textContent === 'Create Class'){\n      localStorage.setItem('prevUrl', '/createclass')\n      props.setHome(false)\n    } else if(e.target.textContent === 'Clients') {\n      localStorage.setItem('prevUrl', '/clients')\n      props.setHome(false)\n    } else if(e.target.textContent === 'Book Class') {\n      localStorage.setItem('prevUrl', '/classes')\n      props.setHome(false)\n    } else if(e.target.textContent === 'Buy Passes') {\n      localStorage.setItem('prevUrl', '/buypasses')\n      props.setHome(false)\n    } else if(e.target.textContent === 'Leaderboard') {\n      localStorage.setItem('prevUrl', '/leaderboard')\n      props.setHome(false)\n    } else if(e.target.textContent === 'Profile') {\n      localStorage.setItem('prevUrl', '/profile')\n      props.setHome(false)\n    } else if(e.target.textContent === 'Create PT Session') {\n      localStorage.setItem('prevUrl', '/createptsession')\n      props.setHome(false)\n    } else if(e.target.textContent === 'Home') {\n      localStorage.setItem('prevUrl', '/')\n      props.setHome(true)\n    }\n  };\n\n  const { currentUser, userData, logout } = props\n\n  return (\n    <div className='menu'>\n      <Button  aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n          <h3 className='menu-h3'>Menu</h3>\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledLink  to='/'><MenuItem onClick={handleClose}>Home</MenuItem></StyledLink>\n        {currentUser&& userData&& userData.coach&&\n            <StyledLink  to='/createclass'><MenuItem onClick={handleClose}><p>Create Class</p></MenuItem></StyledLink>\n        }\n        {currentUser&& userData&& userData.coach&&\n            <StyledLink  to='/createptsession'><MenuItem onClick={handleClose}><p>Create PT Session</p></MenuItem></StyledLink>\n        }\n        {currentUser&& userData&& userData.coach&&\n            <StyledLink  to='/clients'><MenuItem onClick={handleClose}>Clients</MenuItem></StyledLink>\n        }\n        {currentUser&& userData&& !userData.coach&&\n            <StyledLink  to='/classes'><MenuItem onClick={handleClose}>Book Class</MenuItem></StyledLink>\n        }\n        {currentUser&& userData&& !userData.coach&&\n            <StyledLink  to='/buypasses'><MenuItem onClick={handleClose}>Buy Passes</MenuItem></StyledLink>\n        }\n        {currentUser&& userData&& !userData.coach&&\n            <StyledLink  to='/leaderboard'><MenuItem onClick={handleClose}>Leaderboard</MenuItem></StyledLink>\n        }\n        {currentUser&&\n            <StyledLink  to='/profile'><MenuItem onClick={handleClose}>Profile</MenuItem></StyledLink>\n        }\n        {currentUser?\n            <MenuItem onClick={logout}>Logout</MenuItem>\n            :\n            <StyledLink  to='/login'><MenuItem onClick={handleClose}>Login</MenuItem></StyledLink>\n        }\n      </Menu>\n    </div>\n  );\n}","import React from 'react'\nimport './LeaderboardStat.css'\n\nexport default function LeaderboardStat(props) {\n\n    const { user, attendances_and_activities, calories_burned } = props.stat\n    \n    return (\n        <tr className='leaderboard-stat' style={props.highestNoOfAttendances === attendances_and_activities? {color: \"white\", backgroundColor: \"green\"} : null}>\n            <td>{user}</td>\n            <td>{attendances_and_activities}</td>\n            <td>~{calories_burned} Cal.</td>\n        </tr>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport LeaderboardStat from './LeaderboardStat'\nimport './LeaderboardStat.css'\n\nexport default function Leaderboard() {\n\n    useEffect(() => {\n        fetch('https://wod-with-faris-backend.herokuapp.com/users/getallattendances').then(resp => resp.json()).then(stats => handleLeaderboardStats(stats))\n    }, [])\n\n    const [leaderboardStats, setLeaderboardStats] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n\n    const handleLeaderboardStats = leaderboardStats => {\n        setLeaderboardStats(leaderboardStats)\n        setIsLoading(false)\n    }\n \n    const sortedLeaderboardStats = leaderboardStats[0]&& leaderboardStats.sort((a, b) => b.attendances_and_activities - a.attendances_and_activities)\n\n    const attendances_and_activities = leaderboardStats[0]&& leaderboardStats.map(stat => (stat.attendances_and_activities))\n\n    const highestNoOfAttendances = Math.max.apply(Math, attendances_and_activities);\n\n    return (\n        <div>\n            <h1>Leaderboard</h1>\n            <div className='stats-container'>\n                <table className='leaderboard-table' >\n                    <tr>\n                        <th>Name</th>\n                        <th>Classes</th> \n                        <th>Calories Burned</th>\n                    </tr>\n                    {sortedLeaderboardStats&&\n                    sortedLeaderboardStats.map(stat => (\n                        <LeaderboardStat stat={stat} highestNoOfAttendances={highestNoOfAttendances}/> \n                    ))\n                    }\n                </table>\n                {isLoading&& <div className='loading-btn-div'><button className='loading'></button></div>}\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport Select from 'react-select'\nimport './CreateClass.css'\n\nexport default function CreatePTSession(props) {\n    const [name, setName] = useState(null)\n    const [location, setLocation] = useState(null)\n    const [client, setClient] = useState(null)\n    const [description, setDescription] = useState(null)\n    const [date, setDate] = useState(null)\n    const [time, setTime] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(false)\n    const [success, setSuccess] = useState(false)\n    const [clients, setClients] = useState([])\n    const [price, setPrice] = useState(50)\n\n    useEffect(() => {\n        fetch('https://wod-with-faris-backend.herokuapp.com/users/index').then(resp => resp.json()).then(allClients => handleClients(allClients))\n    }, [])\n\n    const handleCreatePtSession = () => {\n        if ( name && description && date && time && client && location && price  ){\n            fetch(\"https://wod-with-faris-backend.herokuapp.com/ptsessions/create\", {\n                    method: \"POST\", \n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        name: name, \n                        description: description,\n                        date: date,\n                        time: time,\n                        location: location,\n                        paid: false,\n                        price: parseInt(price),\n                        coach_email: props.currentUser.email,\n                        client_email: client\n                    })\n                }).then(resp => resp.json()).then(handleSuccess)\n                .catch(errorMessage => setErrorMessage(errorMessage))\n            } else {\n                setErrorMessage(\"Please fill all fields\")\n            }\n    }\n\n    const handleSuccess = () => {\n        setSuccess(\"PT Session Created!\")\n        setErrorMessage(\"\")\n        setName(\"\")\n        setDescription(\"\")\n        setDate(\"\")\n        setTime(\"\")\n        setClient(\"\")\n        setLocation(\"\")\n        setPrice(\"\")\n    }\n\n    const handleClients = allClients => {\n        const formatedClients = allClients[0]&& allClients.map(client => {\n            return { label: client.first_name + \" \" + client.last_name, email: client.email }\n        })\n        setClients(formatedClients)\n    }\n\n    const handleSetClient = e => {\n        setClient(e.email)\n    }\n\n    return (\n        <div>\n            <h1 className='create-class-title'>Create PT Session</h1>\n                {success&&\n                        <h2 className='success'>PT Session Created!</h2>\n                }\n                {errorMessage&&\n                        <h2 className='error-message'>{errorMessage}</h2>\n                }\n                <div className='create-class-div'>\n                    <h3 className='create-class-h3'>Name</h3>\n                    <input name='name' value={name} onChange={(e) => setName(e.target.value)} className='create-class-input' type='text'/>\n                    <h3 className='create-class-h3' >Description</h3>\n                    <textarea name='description' value={description} onChange={(e) => setDescription(e.target.value)} className='create-class-textarea'/>\n                    <h3 className='create-class-h3'>Date</h3>\n                    <input name='date' value={date} onChange={(e) => setDate(e.target.value)} className='create-class-input' type='date'/>\n                    <h3 className='create-class-h3'>Time</h3>\n                    <input name='time' onChange={(e) => setTime(e.target.value)} className='create-class-input' type='time'/>\n                    <h3 className='create-class-h3'>Location</h3>\n                    <input name='location' value={location} onChange={(e) => setLocation(e.target.value)} className='create-class-input' type='text'/>\n                    <h3 className='create-class-h3'>Price (CHF)</h3>\n                    <input name='price' value={price} onChange={(e) => setPrice(e.target.value)} className='create-class-input' type='number'/>\n                    <h3 className='create-class-h3'>Client</h3>\n                    <Select className='client-select-input' options={clients} onChange={handleSetClient}/>\n                    <button className='create-pt-session-btn' onClick={handleCreatePtSession}>Create PT Session</button>\n                </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport { Route } from 'react-router-dom'\nimport ReactGA from 'react-ga'\nimport Home from './Components/Home';\nimport PrivateRoute from './PrivateRoute';\nimport Login from './Components/Login';\nimport SignUp from './Components/SignUp';\nimport app from './base'\nimport NavBar from './Components/NavBar';\nimport Classes from './Components/Classes';\nimport Profile from './Components/Profile';\nimport CreateClass from './Components/CreateClass';\nimport Clients from './Components/Clients';\nimport BuyPasses from './Components/BuyPasses';\nimport MobileMenu from './Components/MobileMenu'\nimport Leaderboard from './Components/Leaderboard';\nimport { Redirect } from 'react-router'\nimport CreatePTSession from './Components/CreatePTSession';\n\nclass App extends React.Component {\n\n  state = {\n    currentUser: null, \n    userData: null, \n    screenWidth: window.innerWidth,\n    isHome: true\n  }\n\n  componentWillMount() {\n    const lastPage = localStorage.getItem('prevUrl')\n    window.addEventListener('resize', this.handleWindowSizeChange);\n    if (lastPage === '/'){\n      this.setState({isHome: true})\n    } else {\n      this.setState({isHome: false})\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    this.setState({ screenWidth: window.innerWidth });\n  };\n\n  \n  handleSetUser = user => {\n    this.setState({currentUser: user})\n    fetch(`https://wod-with-faris-backend.herokuapp.com/user/getuser?email=${user.email}`)\n        .then(resp => resp.json())\n        .then(userData => this.setState({userData}))\n  }\n\n  setHome = state => {\n    this.setState({isHome: state})\n  }\n\n  handleLogout = () => {\n    ReactGA.event({\n      category: 'User',\n      action: `${this.state.userData.first_name + \" \" + this.state.userData.last_name} logged out`\n  });\n    app.auth().signOut()\n    this.setState({currentUser: null})\n\n    localStorage.removeItem(\"prevUrl\");\n  }\n\n  render() { \n    const lastPage = localStorage.getItem('prevUrl')\n    const  { currentUser, userData, screenWidth, isHome } = this.state\n    const isMobile = screenWidth <= 500;\n    return (\n      <>\n        {isMobile? <div className='mobile-menu'><MobileMenu setHome={this.setHome} userData={userData} currentUser={currentUser} logout={this.handleLogout}/></div> : <NavBar setHome={this.setHome} userData={userData} logout={this.handleLogout} currentUser={currentUser}/>}\n        <PrivateRoute exact path='/classes' component={Classes}/>\n        <PrivateRoute exact path='/profile' component={Profile}/>\n        <PrivateRoute exact path='/createclass' component={CreateClass}/>\n        <PrivateRoute exact path='/clients' component={Clients}/>\n        <PrivateRoute exact path='/buypasses' component={BuyPasses}/>\n        <PrivateRoute exact path='/leaderboard' component={Leaderboard}/>\n        <PrivateRoute exact path='/createptsession' component={CreatePTSession}/>\n        <Route exact path='/'>\n        {isHome?\n          <Home user={userData} setUser={this.handleSetUser}/>\n          :\n          lastPage? <Redirect to={lastPage}/> : \n          <Home user={userData} setUser={this.handleSetUser}/>\n        }\n        </Route>\n        <Route exact path='/login'>\n          <Login setHome={this.setHome} setUser={this.handleSetUser}/>\n        </Route>\n        <Route exact path='/signup'>\n          <SignUp setHome={this.setHome} />\n        </Route>\n      </>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport Bugsnag from '@bugsnag/js'\nimport BugsnagPluginReact from '@bugsnag/plugin-react'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { AuthProvider } from './Auth'\n\nBugsnag.start({\n  apiKey: 'f2c95ccfa378c93b437a0d07e1619053',\n  plugins: [new BugsnagPluginReact(React)]\n})\n\nconst ErrorBoundary = Bugsnag.getPlugin('react')\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <Router>\n        <ErrorBoundary>\n          <App />\n        </ErrorBoundary>\n      </Router>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}