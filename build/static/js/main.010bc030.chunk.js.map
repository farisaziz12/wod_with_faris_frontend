{"version":3,"sources":["base.js","Components/Schedule.js","Components/Home.js","Auth.js","PrivateRoute.js","Components/Login.js","Components/SignUp.js","Components/NavBar.js","Components/DatePick.js","Components/ClassModal.js","Components/Classes.js","Components/ClassCard.js","Components/CoachClassCard.js","Components/AllUpcomingClasses.js","Components/Profile.js","Components/CreateClass.js","Components/Client.js","Components/Clients.js","Components/CardSection.js","Components/CheckoutForm.js","Components/BuyPasses.js","Components/StyledLink.js","Components/MobileMenu.js","Components/LeaderboardStat.js","Components/Leaderboard.js","App.js","serviceWorker.js","index.js"],"names":["app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_SENDER_ID","measurementId","REACT_APP_MEASUREMENT_ID","Schedule","this","props","show","toggleShow","position","open","closeBtn","closeOnEsc","onClose","closeOnOverlay","className","to","href","Component","IG","require","Home","state","currentUser","instaPosts","showSchedule","setState","user","ReactGA","event","category","action","first_name","last_name","initialize","pageview","auth","onAuthStateChanged","setUser","profile","then","SlicedPosts","slice","onClick","map","post","node","shortcode","alt","id","src","display_url","AuthContext","React","createContext","AuthProvider","children","useState","setCurrentUser","useEffect","Provider","value","PrivateRoute","RouteComponent","component","rest","useContext","render","routeProps","Login","email","password","passwordResetEmail","emailSent","emailError","handlelogin","a","signInWithEmailAndPassword","alert","handleChange","target","name","handlePasswordResetEmailChange","sendPasswordResetEmail","checkAccount","resp","fetch","json","onChange","type","placeholder","withRouter","SignUp","firstName","lastName","passwordConfirm","passwordMatchError","emptyFieldsError","handleSignUp","createUserWithEmailAndPassword","method","headers","body","JSON","stringify","tokens","coach","console","log","handleSetUser","emailVerified","sendEmailVerification","lastPage","localStorage","getItem","NavBar","page","setPage","handleActiveBtnChange","e","setItem","userData","logout","DatePick","date","handleOffset","ClassModal","clients","error","handleBookandUnBookClass","isBooked","find","client","undefined","length","user_id","session_id","ClientsWithNewBooking","deductToken","deletedBooking","filter","addToken","oneClass","now","Date","isInPast","time","class","style","width","class_capacity","toFixed","description","split","sentence","today","dd","getDate","mm","getMonth","todaydate","getFullYear","Classes","classes","chosenClass","isLoading","handleDateChange","dateFetch","handlePickClass","pickedClass","handleDayOffset","offset","d","prev","setDate","toISOString","timeOrderedClasses","sort","b","ClassCard","handleCancelBooking","handleCancel","upcomingClass","dateFormat","CoachClassCard","askDeleteConfirm","editMode","classDescription","handleDeleteClass","ids","client_ids","tokenError","toggleDeleteConfirm","toggleEditMode","handleSubmit","AllUpcomingClasses","upcomingClasses","Profile","showUpcomingClasses","booking","session","handleDelete","deletedClass","orderedByDateUpcomingClasses","SlicedUpcomingClasses","CreateClass","classCapacity","success","errorMessage","handleCreateClass","parseInt","catch","Client","submitEdit","Clients","search","allClients","handleSearch","fuzzyMatch","compareTerm","term","string","toLowerCase","compare","matches","i","indexOf","sortSearch","results","result","alphebetizedClients","localeCompare","filteredClients","CARD_ELEMENT_OPTIONS","iconStyle","hidePostalCode","base","iconColor","color","fontSize","fontFamily","fontSmoothing","invalid","CardSection","options","CheckoutForm","paymentSuccess","paymentError","paymentPending","handleNameChange","preventDefault","stripe","elements","card","getElement","CardElement","createToken","window","message","quantity","token","cardPayment","client_secret","clientSecret","confirmCardPayment","payment_method","billing_details","paymentIntent","status","userEmail","user_email","setTimeout","resetQuantity","onSubmit","required","stripePromise","loadStripe","BuyPasses","purchaseAmountLimit","handleQuantityChange","amount","StyledLink","styled","Link","MobileMenu","anchorEl","setAnchorEl","handleClose","textContent","Button","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","Boolean","MenuItem","LeaderboardStat","stat","attendances","caloriesBurned","highestNoOfAttendances","backgroundColor","Leaderboard","stats","setLeaderboardStats","leaderboardStats","sortedLeaderboardStats","attendance","Math","max","apply","App","screenWidth","innerWidth","handleWindowSizeChange","handleLogout","signOut","removeItem","addEventListener","isMobile","exact","path","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.010bc030.chunk.js","sourcesContent":["import * as firebase from 'firebase/app'\nimport 'firebase/auth'\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n});\n\nexport default app;","import React, { Component } from 'react'\nimport PopPop from 'react-poppop';\nimport './Schedule.css';\nimport { Link } from 'react-router-dom';\n\nexport default class Schedule extends Component {\n\n    render() {\n        const { show, toggleShow } = this.props\n        return (\n            <div>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => toggleShow(false)}\n                        closeOnOverlay={true}>\n                <h1 className='schedule-title'>Schedule</h1>\n                <div className='schedule-container'>\n                    <h3 className='schedule-h3'>Classes with less than 2 people will be cancelled 2 hours before class start time and early morning classes will be cancelled the night before at 20:00</h3>\n                    <p><strong>Monday:</strong> None</p>\n                    <p><strong>Tuesday:</strong> Workout of the Day @ 7:00</p>\n                    <p><strong>Wednesday:</strong> None</p>\n                    <p><strong>Thursday:</strong> Core360 @ 7:00</p>\n                    <p><strong>Friday:</strong> Workout of the Day @ 7:00</p>\n                    <p><strong>Saturday:</strong> Mobility Class @ 10:00 & Core360 @ 10:30</p>\n                    <p><strong>Sunday:</strong> Mobility Class @ 10:00 & Workout of the Day @ 10:30</p>\n                    <Link to='/classes'><button className='class-link'>Book a Class</button></Link>\n                    <p><strong>Email <a href='mailto:faziztraining@gmail.com'>faziztraining@gmail.com</a> if you would like to suggest a new class time</strong></p>\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n   ","import React, { Component } from 'react'\nimport app from '../base'\nimport './Home.css'\nimport Schedule from './Schedule';\nimport ReactGA from 'react-ga';\nconst IG = require('instagrammer');\nconst instagramUsername = 'faziz_training';\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/home');\n}\n\n\nexport default class Home extends Component {\n    \n    state = {\n        currentUser: this.props.currentUser,\n        instaPosts: [],\n        showSchedule: false\n    }\n    \n    componentDidMount(){\n        initializeReactGA()\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n    \n        const setUser = user => {\n            this.setState({currentUser: user})\n            this.props.setUser(user)\n        }\n        \n        IG.profile(instagramUsername).then((instaPosts) => {\n            this.setState({instaPosts})\n        });\n      \n    }\n\n    toggleShow = show => {\n        this.setState({showSchedule: show })\n        this.props.user&&\n        ReactGA.event({\n            category: 'User',\n            action: `${this.props.user.first_name + \" \" + this.props.user.last_name} checked out the Schedule`\n        });\n    }\n\n    render() {\n        const { instaPosts } = this.state\n        const SlicedPosts = instaPosts[0]? instaPosts.slice(0, 8) : []\n        return (\n            <>\n            <button onClick={() => this.toggleShow(true)} className='class-schedule-btn'>View Class Schedule</button>\n            <Schedule show={this.state.showSchedule} toggleShow={this.toggleShow}/>\n                <div className='posts-container'>\n                    <h2 className='title'>Recent Posts <a className='title' href={`https://www.instagram.com/faziz_training/`}>@faziz_training</a></h2>\n                    <div className='posts-container'>\n                        {SlicedPosts.map(post => (\n                                <a href={`https://www.instagram.com/p/${post.node.shortcode}/`} >\n                                    <img alt='' id='insta-post' className='insta-post' src={post.node.display_url} />\n                                </a>\n                        ))}\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport app from './base'\n\nexport const AuthContext  = React.createContext();\n\n\nexport function AuthProvider({ children }) {\n    const  [currentUser, setCurrentUser] = useState(null);\n\n    useEffect(() => {\n        app.auth().onAuthStateChanged(setCurrentUser);\n    }, []);\n\n    return (\n        <AuthContext.Provider\n        value={{currentUser}}\n        > \n            {children}\n        </AuthContext.Provider>\n    )\n}\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Auth'\n\nexport default function PrivateRoute({ component: RouteComponent, ...rest }) {\n    const {currentUser} = useContext(AuthContext)\n    return (\n        <Route\n        {...rest}\n        render={routeProps =>\n        !!currentUser ? (\n            <RouteComponent {...routeProps} currentUser={currentUser} />\n        ) : (\n            <Redirect to={'/login'}/>\n        )\n        }\n        />\n    )\n}\n","import React from 'react';\nimport { withRouter, Redirect } from 'react-router';\nimport app from '../base';\nimport './Login.css'\nimport { NavLink } from 'react-router-dom'\nimport PopPop from 'react-poppop';\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/login');\n}\n\n\nclass Login extends React.Component {\n\n    state = {\n        currentUser: null, \n        email: null, \n        password: null,\n        show: false,\n        passwordResetEmail: null, \n        emailSent: false,\n        emailError: false\n    }\n\n    componentDidMount(){\n        initializeReactGA()\n\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n\n        const setUser = user => {\n            this.setState({currentUser: user})\n            this.props.setUser(user)\n        }\n    }\n\n    handlelogin = async () => {\n            const { email, password } = this.state;\n            try {\n                await app\n                  .auth()\n                  .signInWithEmailAndPassword(email, password);\n            } catch (error) {\n                alert(error);\n            }\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n\n    handleChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n    handlePasswordResetEmailChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n\n    sendPasswordResetEmail = email => {\n        this.checkAccount(email).then(resp => {\n            if (resp) {\n                app.auth().sendPasswordResetEmail(email).then(this.setState({emailSent: true, emailError: false}))\n            } else {\n                this.setState({emailError: true})\n            }\n        })\n    }\n\n    checkAccount = email => {\n        return fetch(`https://wod-with-faris.herokuapp.com/users/check?email=${email}`)\n        .then(resp => resp.json())\n    }\n\n    render(){\n        const { currentUser, show, passwordResetEmail, emailSent, emailError } = this.state\n        if (currentUser) {\n            return <Redirect to='/'/>;\n        }\n        return (\n            <div>\n                <div className=\"form-structor\">\n                    <div className=\"signup\">\n                        <h2 className=\"form-title\" id=\"signup\"><span>or</span>Log In</h2>\n                        <div className=\"form-holder\">\n                        <input onChange={this.handleChange} name='email' type=\"email\" className=\"input\" placeholder=\"Email\" />\n                        <input onChange={this.handleChange} name='password' type=\"password\" className=\"input\" placeholder=\"Password\" />\n                        </div>\n                        <button onClick={this.handlelogin} className=\"submit-btn\">Log In</button>\n                        <h3 onClick={this.toggleShow} className='forgot-password'><u>Forgot Password</u></h3>\n                        <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                            <div className='forgot-password-modal-container'>\n                                <h2 className='forgot-password-txt'>Password Reset</h2>\n                                {emailSent&& <p className='email-send-success'>Email Sent!</p>}\n                                {emailError&& <p className='email-send-error'>Sorry, no account matches this email</p>}\n                                <p className='forgot-password-txt'>Please enter the email associated with your account:</p>\n                                <input value={passwordResetEmail} onChange={this.handlePasswordResetEmailChange} name='passwordResetEmail' className='forgot-password-input' type='email'/>\n                                <button onClick={() => this.sendPasswordResetEmail(passwordResetEmail)} className='forgot-password-btn'>Send Password Reset Email</button>\n                                \n                            </div>\n                        </PopPop>\n                    </div>\n                    <div className=\"login slide-up\">\n                        <div className=\"center\">\n                            <NavLink to='/signup'>\n                                <h2 className=\"form-title\" id=\"login\"><span>or</span>Sign Up</h2>\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(Login);\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom'\nimport app from '../base';\nimport './Login.css'\nimport { NavLink } from 'react-router-dom'\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/signup');\n}\n\nclass SignUp extends React.Component {\n\n    state = {\n        firstName: null,\n        lastName: null, \n        email: null,\n        password: null,\n        passwordConfirm: null,\n        currentUser: null,\n        passwordMatchError: \"\",\n        emailSent: false,\n        emptyFieldsError: null\n    }\n\n\n    componentDidMount(){\n        initializeReactGA()\n\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n\n        const setUser = user => {\n            this.setState({currentUser: user})\n        }\n    }\n\n    handleSignUp = async () => {\n        const { email, password, passwordConfirm , firstName, lastName} = this.state;\n        try {\n           if (password === passwordConfirm && email !== null) { \n            await app\n            .auth()\n            .createUserWithEmailAndPassword(email, password);\n            this.setState({passwordMatchError: null, emptyFieldsError: null})\n\n            fetch(\"https://wod-with-faris.herokuapp.com/user/create\", {\n            method: \"POST\", \n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                first_name: this.state.firstName,\n                last_name: this.state.lastName,\n                tokens: 1,\n                coach: false\n            })\n            }).then(resp => resp.json()).then(resp => console.log(resp))\n\n           } else if (!password || !passwordConfirm || !email || !firstName || !lastName){\n               this.setState({emptyFieldsError: \"Please fill all the fields\", passwordMatchError: null})\n           } else {\n            this.setState({passwordMatchError: \"Passwords do not match\", emptyFieldsError: null})\n           }\n\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    handleChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n\n    handleSetUser = user => {\n        this.setState({currentUser: user})\n    }\n\n\n\n    \n    render (){\n        const {currentUser, emailSent, passwordMatchError, emptyFieldsError} = this.state\n        if (currentUser) {\n            if(!currentUser.emailVerified && !emailSent){\n                currentUser.sendEmailVerification();\n                this.setState({emailSent: true})\n            }\n            return <Redirect to='/'/>;\n        }\n        return (\n            <div>\n                <div className=\"form-structor\">\n                    <div className=\"signup\">\n                        {passwordMatchError&& <p className='sign-up-error'>{passwordMatchError}</p>}{emptyFieldsError&& <p className='sign-up-error'>{emptyFieldsError}</p>}\n                        <h2 className=\"form-title\" id=\"signup\"><span>or</span>Sign up</h2>\n                        <div className=\"form-holder\">\n                            <form>\n                                <input onChange={this.handleChange} name='firstName' type=\"text\" className=\"input\" placeholder=\"First Name\" />\n                                <input onChange={this.handleChange} name='lastName' type=\"text\" className=\"input\" placeholder=\"Last Name\" />\n                                <input onChange={this.handleChange} name='email' type=\"email\" className=\"input\" placeholder=\"Email\" />\n                                <input onChange={this.handleChange} name='password' type=\"password\" className=\"input\" placeholder=\"Password\" />\n                                <input onChange={this.handleChange} name='passwordConfirm' type=\"password\" className=\"input\" placeholder=\"Confirm Password\" />\n                            </form>\n                        </div>\n                        <button onClick={this.handleSignUp} className=\"submit-btn\">Sign up</button>\n                    </div>\n                    <div className=\"login slide-up\">\n                        <div className=\"center\">\n                            <NavLink to='/login'>\n                                <h2 className=\"form-title\" id=\"login\"><span>or</span>Log in</h2>\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(SignUp)\n","import React, { useState, useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport ReactGA from 'react-ga';\nimport './NavBar.css'\n\nconst lastPage = localStorage.getItem('prevUrl')\n\nexport default function NavBar(props) {\n    const [page, setPage] = useState(null)\n\n    useEffect(() => {\n        setPage(lastPage? lastPage : '/')\n    }, [])\n\n\n    const handleActiveBtnChange = (e) => {\n        if(e.target.name === '/profile' || e.target.name === '/classes' || e.target.name === '/leaderboard') {\n            props.currentUser? setPage(e.target.name) : setPage('/login')\n            localStorage.setItem('prevUrl', e.target.name)\n            props.userData&&\n            ReactGA.event({\n                category: 'User',\n                action: `${props.userData.first_name + \" \" + props.userData.last_name} looked at ${e.target.name}`\n            });\n        } else {\n            setPage(e.target.name)\n            e.target.name === '/'? localStorage.setItem('prevUrl', null) : localStorage.setItem('prevUrl', e.target.name)\n            props.userData&&\n            ReactGA.event({\n                category: 'User',\n                action: `${props.userData.first_name + \" \" + props.userData.last_name} looked at ${e.target.name}`\n            });\n        }\n    }\n\n        const { currentUser, userData } = props\n        return (\n            <div className='nav-bar'>\n                <NavLink to='/'>\n                    <button onClick={handleActiveBtnChange} name='/' className={page === '/'? 'nav-btn active' : 'nav-btn'}>Home</button>\n                </NavLink>\n                {currentUser&& userData&& userData.coach&&\n                    <NavLink to='/createclass'>\n                        <button onClick={handleActiveBtnChange} name='/createclass' className={page === '/createclass'? 'nav-btn active' : 'nav-btn'}>Create Class</button>\n                    </NavLink>\n                }\n                {currentUser&& userData&& userData.coach&&\n                    <NavLink to='/clients'>\n                        <button onClick={handleActiveBtnChange} name='/clients' className={page === '/clients'? 'nav-btn active' : 'nav-btn'}>Clients</button>\n                    </NavLink>\n                }\n                {currentUser&& userData&& !userData.coach&&\n                <NavLink to='/classes'>\n                    <button onClick={handleActiveBtnChange} name='/classes' className={page === '/classes'? 'nav-btn active' : 'nav-btn'}>Book Class</button>\n                </NavLink>\n                }\n                {currentUser&& userData&& !userData.coach&&\n                <NavLink to='/buypasses'>\n                    <button onClick={handleActiveBtnChange} name='/buypasses' className={page === '/buypasses'? 'nav-btn active' : 'nav-btn'}>Buy Passes</button>\n                </NavLink>\n                }\n                {currentUser&& userData&& !userData.coach&&\n                <NavLink to='/leaderboard'>\n                    <button onClick={handleActiveBtnChange} name='/leaderboard' className={page === '/leaderboard'? 'nav-btn active' : 'nav-btn'}>Leaderboard</button>\n                </NavLink>\n                }\n                {currentUser&&\n                <NavLink to='/profile'>\n                    <button onClick={handleActiveBtnChange} name='/profile' className={page === '/profile'? 'nav-btn active' : 'nav-btn'}>Profile</button>\n                </NavLink >\n                }\n                {currentUser?\n                <button className='nav-btn' onClick={props.logout}>Log Out</button> \n                :\n                <NavLink to='/login'>\n                    <button onClick={handleActiveBtnChange} name='/login' className={page === '/login'? 'nav-btn active' : 'nav-btn'}>Log In</button>\n                </NavLink>\n                }\n                <h3 className='logo-2'>WOD WITH FARIS</h3>\n            </div>\n        )\n}\n","import React, { Component } from 'react';\nimport './Classes.css'\n\nexport default class DatePick extends Component {\n\n\n\n\n  render() {\n    const { handleChange, date, handleOffset } = this.props\n    return (\n      <div className='date-picker-container'>\n        <span onClick={() => handleOffset(-1)} ><i className=\"i left\"></i></span><input onChange={handleChange} value={date} className='date-picker' type='date' name='date'/><span onClick={() => handleOffset(1)}><i className=\"i right\"></i></span>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react'\nimport PopPop from 'react-poppop';\nimport './Classes.css'\n\nexport default class ClassModal extends Component {\n    state = {\n        show: false, \n        clients: [], \n        error: null,\n      }\n\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/usersessions?class_id=${this.props.oneClass.id}`, {\n        }).then(resp => resp.json()).then(clients => this.setState({clients}))\n    }\n  \n  \n    toggleShow = show => {\n      this.setState({show: show, error: null});\n    }\n\n    handleBookandUnBookClass =  id => {\n        const isBooked = this.state.clients.find(client => client.user.id === this.props.user.id)\n        if (isBooked === undefined && this.props.user.tokens > 0 && this.state.clients.length < 8) {\n            console.log(\"booking\")\n            fetch(\"https://wod-with-faris.herokuapp.com/usersession/book\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.props.user.id,\n                    session_id: id\n                })\n            }).then(resp => resp.json()).then(ClientsWithNewBooking => this.setState({clients: ClientsWithNewBooking, error: null})).then(this.props.deductToken)\n            \n        } else if(isBooked && this.props.user.tokens >= 0) {\n            fetch(`https://wod-with-faris.herokuapp.com/usersession/unbook`, {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.props.user.id,\n                    session_id: id\n                })\n            }).then(resp => resp.json()).then(deletedBooking => this.setState({clients: this.state.clients.filter(client => client.user.id !== deletedBooking.user.id), error: null})).then(this.props.addToken)\n            \n        } else if (this.props.user.tokens <= 0){\n            this.setState({error: \"Sorry, you have run out of tokens\"})\n        } else if (this.state.client.length === 8) {\n            this.setState({error: \"Sorry, this class is fully booked\"})\n        }\n        \n\n    }\n\n    render() {\n        const { show, clients, error } = this.state;\n        const { oneClass } = this.props;\n        const isBooked = clients[0]&& clients.find(client => client.user.id === this.props.user.id)\n        const now = new Date()\n        const classDateAndTime = new Date(oneClass.date + \"T\" + oneClass.time)\n        const isInPast = classDateAndTime < now? true : false\n        return (\n            <div>\n                <button class=\"class-btn\" onClick={() => this.toggleShow(true)}>{oneClass.time + \" \" + oneClass.name}</button>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                <h1 className='workout-title'>{oneClass.time + \" \" + oneClass.name}</h1> <div className='attending-progress-bar'><div style={{width:`${((clients.length / oneClass.class_capacity) * 100).toFixed(2)}px`}}className='inner-progress-bar'><span className='attending-txt'>{clients.length === oneClass.class_capacity? \"Fully Booked\" : clients.length + ` / ${oneClass.class_capacity}`}</span></div></div>\n                <h3 className='desc-txt'><strong>Coach: </strong>{oneClass.coach.first_name + \" \" + oneClass.coach.last_name}</h3>\n                {oneClass.description.split('\\n').map(sentence => (\n                    <p className='desc-txt'>{sentence}</p> \n                ))\n                }\n                {!isInPast? <button onClick={() => this.handleBookandUnBookClass(this.props.oneClass.id)} class=\"book-btn\">{isBooked? \"Cancel\" : \"Book Class\"}</button> : <button class=\"past-btn\">Already Passed</button>}\n                {error&&\n                    <p className='error'>{this.state.error}</p>\n                }\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport DatePick from './DatePick'\nimport './Classes.css'\nimport ClassModal from './ClassModal'\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/classes');\n}\n\nlet today = new Date()\nlet dd = today.getDate(); \nlet mm = today.getMonth() + 1; \n\nlet yyyy = today.getFullYear(); \nif (dd < 10) { \n    dd = '0' + dd; \n} \nif (mm < 10) { \n    mm = '0' + mm; \n} \nlet todaydate = yyyy + '-' + mm + '-' + dd; \n\nexport default class Classes extends Component {\n\n    state = {\n        classes: [],\n        date: todaydate, \n        chosenClass: null,\n        user: null,\n        isLoading: true\n    }\n\n    componentDidMount(){\n        initializeReactGA()\n\n        fetch(`https://wod-with-faris.herokuapp.com/sessions?date=${this.state.date}`)\n        .then(resp => resp.json())\n        .then(classes => this.setState({classes: classes, isLoading: false}))\n\n        fetch(`https://wod-with-faris.herokuapp.com/user/getuser?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(user => this.setState({user}))\n    }\n\n    handleDateChange = e => {\n        this.setState({\n           [e.target.name]: e.target.value,\n           isLoading: true\n        })\n        this.dateFetch(e.target.value)\n     }\n\n     handlePickClass = id => { \n        const pickedClass = this.state.classes.find( oneClass => oneClass.id === id)\n        this.setState({chosenClass: pickedClass})\n     }\n\n     deductToken = () => {\n        const { user } = this.state \n        this.setState({user: {\n            id: user.id,\n            coach: user.coach,\n            first_name: user.first_name,\n            last_name: user.last_name, \n            email: user.email,\n            tokens: user.tokens - 1\n        }})\n        ReactGA.event({\n            category: 'User',\n            action: `${this.state.user.first_name + \" \" + this.state.user.last_name} Booked a Class`\n        });\n     }\n     addToken = () => {\n        const { user } = this.state \n        this.setState({user: {\n            id: user.id,\n            coach: user.coach,\n            first_name: user.first_name,\n            last_name: user.last_name, \n            email: user.email,\n            tokens: user.tokens + 1\n        }})\n        ReactGA.event({\n            category: 'User',\n            action: `${this.state.user.first_name + \" \" + this.state.user.last_name} Cancelled a Class`\n        });\n     }\n\n    dateFetch = date => {\n        fetch(`https://wod-with-faris.herokuapp.com/sessions?date=${date}`)\n        .then(resp => resp.json())\n        .then(classes => this.setState({classes: classes, isLoading: false}))\n    }\n\n    handleDayOffset = offset => {\n        let d = new Date(this.state.date)\n        let prev = new Date(d.setDate(d.getDate() + offset)).toISOString().slice(0,10)\n        this.setState({date: prev})\n        this.dateFetch(prev)\n    }\n\n\n    render() {\n        const  { date, classes, isLoading } = this.state\n        const filteredClasses = classes.filter(oneClass => oneClass.date === date)\n        const timeOrderedClasses = filteredClasses.sort((a, b) => new Date(a.date + \" \" + a.time) - new Date(b.date + \" \" + b.time))\n        return (\n            <div>\n                <h1>Book Class</h1>\n                <DatePick  handleOffset={this.handleDayOffset} date={date} handleChange={this.handleDateChange}/>\n                <div className='container'>\n                    {isLoading&& <button className='loading'></button >}\n                    {classes[0]?\n                    timeOrderedClasses.map(oneClass => (\n                        <ClassModal addToken={this.addToken} deductToken={this.deductToken} user={this.state.user} oneClass={oneClass} handlePickClass={this.handlePickClass}/>\n                    ))\n                    :\n                    !isLoading&& <h1>No Classes</h1>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport dateFormat from 'dateformat'\nimport './Classes.css'\n\nexport default class ClassCard extends Component {\n\n\n    handleCancelBooking = id => {\n        fetch(`https://wod-with-faris.herokuapp.com/usersession/unbook`, {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.props.user.id,\n                    session_id: id\n                })\n            }).then(resp => resp.json()).then(deletedBooking => this.props.handleCancel(deletedBooking)).then(this.props.addToken)\n    }\n\n    render() {\n        const { upcomingClass } = this.props\n        return (\n            <div className='class-card'>\n                <h2 className='card-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h2>\n                <p className='card-date'>{dateFormat(upcomingClass.date, \"fullDate\")}</p>\n                <button onClick={() => this.handleCancelBooking(upcomingClass.id)} className='book-btn'>Cancel</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport dateFormat from 'dateformat'\nimport PopPop from 'react-poppop';\nimport './Classes.css'\n\nexport default class CoachClassCard extends Component {\n\n    state = {\n        show: false,\n        clients: [],\n        askDeleteConfirm: false,\n        editMode: false,\n        classDescription: this.props.upcomingClass.description\n    }\n\n    handleDeleteClass = id => {\n        fetch(`https://wod-with-faris.herokuapp.com/sessions/deleted/${id}`, {\n                method: \"DELETE\"\n            }).then(resp => resp.json()).then(deletedBooking => this.props.handleCancel(deletedBooking))\n        const ids = this.state.clients.map(client => {return client.user.id})\n        fetch(\"https://wod-with-faris.herokuapp.com/sessions/returntokens\", {\n            method: \"POST\", \n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                client_ids: ids\n            })\n        }).then(this.setState({askDeleteConfirm: false}))\n    }\n\n    toggleShow = show => {\n        this.setState({show: show, tokenError: null});\n    }\n    toggleDeleteConfirm = () => {\n        this.setState({askDeleteConfirm: !this.state.askDeleteConfirm});\n    }\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/usersessions?class_id=${this.props.upcomingClass.id}`, {\n        }).then(resp => resp.json()).then(clients => this.setState({clients}))\n    }\n\n    toggleEditMode = () => {\n        this.setState({editMode: !this.state.editMode})\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit = id => {\n        fetch(`https://wod-with-faris.herokuapp.com/sessions/update/${id}`, {\n                method: \"PATCH\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    description: this.state.classDescription\n                })\n        }).then(this.setState({editMode: false}))\n    }\n\n    render() {\n        const { upcomingClass } = this.props\n        const { show, clients, askDeleteConfirm, editMode, classDescription } = this.state\n        return (\n            <div className='coach-class-card'>\n                <h2 className='card-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h2>\n                <p className='card-date'>{dateFormat(upcomingClass.date, \"fullDate\")}</p>\n                {askDeleteConfirm? <div> <button onClick={() => this.handleDeleteClass(upcomingClass.id)} className='book-btn'>Confirm Delete</button> <button onClick={this.toggleDeleteConfirm} className='book-btn'>Cancel Delete</button> </div>: <button onClick={this.toggleDeleteConfirm} className='book-btn'>Delete Class</button>}\n                {askDeleteConfirm? undefined : <button onClick={() => this.toggleShow(true)} className='book-btn'>More Info</button>}\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                <h1 className='workout-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h1> <div className='attending-progress-bar'><div style={{width:`${((clients.length/upcomingClass.class_capacity) * 100).toFixed(2)}px`}}className='inner-progress-bar'><span className='attending-txt'>{clients.length === 8? \"Fully Booked\" : clients.length + ` / ${upcomingClass.class_capacity}`}</span></div></div>\n                <h3 className='desc-txt'><strong>Coach: </strong>{upcomingClass.coach.first_name + \" \" + upcomingClass.coach.last_name}</h3>\n                {!editMode?\n                classDescription.split('\\n').map(sentence => (\n                    <p className='desc-txt'>{sentence}</p> \n                ))\n                :\n                <textarea className='edit-desc' value={classDescription} onChange={this.handleChange} name='classDescription'/>\n                } \n                <div>\n                {!editMode? <button className='book-btn' onClick={this.toggleEditMode}>Edit Workout</button> : <button className='book-btn' onClick={() => this.handleSubmit(upcomingClass.id)}>Submit</button>}\n                    <h3 className='desc-txt'>Signed  Up Clients</h3>\n                    {clients.map(client => (\n                        <p className='desc-txt'>- {client.user.first_name + \" \" + client.user.last_name}</p>\n                    ))}\n                    {!clients[0]&&\n                        <p className='desc-txt'>None</p>\n                    }\n\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport PopPop from 'react-poppop';\nimport './AllUpcomingClasses.css'\nimport CoachClassCard from './CoachClassCard';\n\nexport default class AllUpcomingClasses extends Component {\n    render() {\n        const { show, upcomingClasses, handleCancel, user, toggleShow } = this.props\n        const timeOrderedClasses = upcomingClasses.sort((a, b) => new Date(a.date + \" \" + a.time) - new Date(b.date + \" \" + b.time))\n        return (\n            <div>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => toggleShow(false)}\n                        closeOnOverlay={true}>\n                <div className='all-upcoming-classes-container'>\n                    <h1 className='header'>All Upcoming Classes</h1>\n                    {timeOrderedClasses.map(upcomingClass => (\n                        <>\n                            <CoachClassCard handleCancel={handleCancel} user={user} upcomingClass={upcomingClass}/>\n                        </>\n                    ))}\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Profile.css'\nimport ClassCard from './ClassCard'\nimport CoachClassCard from './CoachClassCard'\nimport ReactGA from 'react-ga';\nimport AllUpcomingClasses from './AllUpcomingClasses';\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/profile');\n}\n\nexport default class Profile extends Component {\n\n    state = {\n        user: null, \n        upcomingClasses: [],\n        showUpcomingClasses: false \n    }\n\n    componentDidMount(){\n        initializeReactGA()\n        \n        fetch(`https://wod-with-faris.herokuapp.com/user/getuser?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(user => this.setState({user}))\n\n        fetch(`https://wod-with-faris.herokuapp.com/usersession/upcomingclasses?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(upcomingClasses => this.setState({upcomingClasses}))\n    }\n\n    addToken = () => {\n        const { user } = this.state \n        this.setState({user: {\n            id: user.id,\n            coach: user.coach,\n            first_name: user.first_name,\n            last_name: user.last_name, \n            email: user.email,\n            tokens: user.tokens + 1\n        }})\n     }\n\n     handleCancel = deletedBooking => {\n        this.setState({upcomingClasses: this.state.upcomingClasses.filter(booking => booking.id !== deletedBooking.session.id)})\n     }\n     handleDelete = deletedClass => {\n        this.setState({upcomingClasses: this.state.upcomingClasses.filter(booking => booking.id !== deletedClass.id)})\n     }\n\n    toggleShow = show => {\n        this.setState({showUpcomingClasses: show })\n    }\n\n    render() {\n        const { user, upcomingClasses, showUpcomingClasses } = this.state\n        const timeOrderedClasses = upcomingClasses[0]&& upcomingClasses.sort((a, b) => new Date(a.date + \" \" + a.time) - new Date(b.date + \" \" + b.time))\n        const orderedByDateUpcomingClasses = timeOrderedClasses&& timeOrderedClasses.sort((a, b) => new Date(a.date) - new Date(b.date))\n        const SlicedUpcomingClasses = orderedByDateUpcomingClasses&& orderedByDateUpcomingClasses.slice(0, 4)\n        return (\n            <div>\n                <div className='profile-container'>\n                    {user?\n                    <>\n                        <h1>{user.first_name + \" \" + user.last_name}</h1>\n                        {!user.coach&& <h2 className='tokens'>Class Passes: {user.tokens}</h2>}\n                        <div className='upcoming-classes-container'>\n                            <h2 className='upcoming-classes-title'>Upcoming Classes: </h2>\n\n                            {!user.coach&& upcomingClasses[0]&&\n                                SlicedUpcomingClasses.map(upcomingClass => (\n                                    <ClassCard handleCancel={this.handleCancel} addToken={this.addToken} user={this.state.user} upcomingClass={upcomingClass}/>\n                                ))\n                            }\n                            {user.coach&& upcomingClasses[0]&&\n                                <button onClick={() => this.toggleShow(true)} className='all-upcoming-classes-btn'>All upcoming classes</button>\n                            }\n                            {showUpcomingClasses&& <AllUpcomingClasses toggleShow={this.toggleShow} handleCancel={this.handleDelete} user={this.state.user} show={showUpcomingClasses} upcomingClasses={orderedByDateUpcomingClasses}/>}\n                            {user.coach&& upcomingClasses[0]&&\n                                SlicedUpcomingClasses.map(upcomingClass => (\n                                    <CoachClassCard handleCancel={this.handleDelete} user={this.state.user} upcomingClass={upcomingClass}/>\n                                ))\n                            }\n\n                            {!upcomingClasses[0]&&<h3 className='none'>None</h3>}\n\n                        </div>\n                    </>\n                    :\n                    <button className='loading'></button >\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './CreateClass.css'\n\nexport default class CreateClass extends Component {\n\n    state = {\n        name: null,\n        description: null,\n        date: null,\n        time: null,\n        classCapacity: 8, \n        coach: null, \n        success: false,\n        errorMessage: null\n    }\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/user/getuser?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(coach => this.setState({coach}))\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n         })\n    }\n\n    handleCreateClass = () => {\n        const { name, description, date, time, coach, classCapacity } = this.state\n        if ( name && description && date && time && classCapacity  ){\n        fetch(\"https://wod-with-faris.herokuapp.com/sessions/create\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: name, \n                    description: description,\n                    date: date,\n                    time: time,\n                    class_capacity: parseInt(classCapacity),\n                    user_id: coach.id\n                })\n            }).then(resp => resp.json()).then(this.setState({success: true, errorMessage: null, name: \"\", description: \"\", date: \"\", time: \"\"}))\n            .catch(errorMessage => this.setState({errorMessage}))\n        } else {\n            this.setState({errorMessage: \"Please fill all fields\"})\n        }\n    } \n\n    render() {\n        const { success, errorMessage, name, date, description, time, classCapacity } = this.state\n        return (\n            <div>\n                <h1 className='create-class-title'>Create Class</h1>\n                {success&&\n                        <h2 className='success'>Class Created!</h2>\n                }\n                {errorMessage&&\n                        <h2 className='error-message'>{errorMessage}</h2>\n                }\n                <div className='create-class-div'>\n                    <h3 className='create-class-h3'>Name</h3>\n                    <input name='name' value={name} onChange={this.handleChange} className='create-class-input' type='text'/>\n                    <h3 className='create-class-h3' >Description</h3>\n                    <textarea name='description' value={description} onChange={this.handleChange} className='create-class-textarea'/>\n                    <h3 className='create-class-h3'>Date</h3>\n                    <input name='date' value={date} onChange={this.handleChange} className='create-class-input' type='date'/>\n                    <h3 className='create-class-h3'>Time</h3>\n                    <input name='time' value={time} onChange={this.handleChange} className='create-class-input' type='time'/>\n                    <h3 className='create-class-h3'>Class Capacity</h3>\n                    <input name='classCapacity' value={classCapacity} onChange={this.handleChange} className='create-class-input' type='number'/>\n                    <button className='create-class-btn' onClick={this.handleCreateClass}>Create Class</button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Clients.css'\nimport PopPop from 'react-poppop';\n\nexport default class Client extends Component {\n\n    state = {\n        show: false, \n        editMode: false,\n        email: this.props.client.email,\n        tokens: this.props.client.tokens\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n    \n    toggleEditMode = () => {\n        this.setState({editMode: true})\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    submitEdit = id => {\n        fetch(`https://wod-with-faris.herokuapp.com/user/update/${id}`, {\n                method: \"PATCH\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: this.state.email,\n                    tokens: this.state.tokens\n                })\n        }).then(this.setState({editMode: false}))\n    }\n\n    render() {\n        const { client } = this.props\n        const { show, email, tokens, editMode } = this.state\n        return (\n            <div>\n                <h3 onClick={this.toggleShow}  className={tokens <=1? 'low-on-tokens-client' : 'client'}>{client.first_name + \" \" + client.last_name}</h3>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                            <div className='client-modal-container'>\n                                <h3 className='client-txt'>{client.first_name + \" \" + client.last_name}</h3>\n                                <p className='client-txt'>Email: </p> {!editMode? <p className='client-txt'>{email}</p> : <input onChange={this.handleChange} className='edit-input' value={email} name='email'/>}\n                                <p className='client-txt'>Class Passes: </p> {!editMode? <p className='client-txt'>{tokens}</p> : <input onChange={this.handleChange} className='edit-input' type='number' value={tokens} name='tokens'/>}\n                                {!editMode? <button onClick={this.toggleEditMode} className='edit-btn'>Edit</button> : <button onClick={() => this.submitEdit(client.id)} className='edit-btn'>Submit</button>}\n                            </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Clients.css'\nimport Client from './Client';\n\nexport default class Clients extends Component {\n\n    state = {\n        search: null,\n        allClients: []\n    }\n\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/users/index`)\n        .then(resp => resp.json())\n        .then(allClients => this.setState({allClients}))\n    }\n\n    handleSearch = e => {\n        const search = e.target.value\n        if (search.length > 0) {\n            this.setState({search})\n        } else if (search.length === 0){\n            this.setState({search: null})\n        }\n \n    }\n\n    fuzzyMatch = (compareTerm ,term) => {\n        if (term.length === 0)\n            return 1;\n        let string = compareTerm.toLowerCase();\n        let compare = term.toLowerCase();\n        let matches = 0;\n        for (let i = 0; i < compare.length; i++) {\n            string.indexOf(compare[i]) > -1 ? matches += 1 : matches -=1;\n        }\n        return matches / compareTerm.length;\n    }\n\n    sortSearch = (clients) => {\n        const results = clients.map(client => [client, this.fuzzyMatch(client.first_name + \" \" + client.last_name, this.state.search)]);\n        results.sort((a, b) => b[1] - a[1]);\n        const filteredResults = results.filter(result => result[1] > 0)\n        return filteredResults\n    }\n\n    render() {\n        const { allClients, search } = this.state\n        const alphebetizedClients = allClients.sort((a,b) =>  a.last_name.localeCompare(b.last_name))\n        const filteredClients = search? this.sortSearch(allClients) : alphebetizedClients\n        return (\n            <div>\n                <h1>Clients</h1>\n                <input className='search-bar' onChange={this.handleSearch} name='search' type='text'/>\n                <div className='clients-container'>\n                    {allClients&& allClients[0]&&\n\n                    filteredClients.map(client => (\n                        <Client client={search? client[0] : client}/>\n                    ))\n\n                    }\n                    {allClients&& !allClients[0]&&\n                        <h2>None</h2>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { CardElement } from \"@stripe/react-stripe-js\";\n\nconst CARD_ELEMENT_OPTIONS = {\n  iconStyle: \"solid\",\n  hidePostalCode: true,\n  style: {\n    base: {\n      iconColor: \"rgb(240, 57, 122)\",\n      color: \"rgb(240, 57, 122)\",\n      fontSize: \"16px\",\n      fontFamily: '\"Open Sans\", sans-serif',\n      fontSmoothing: \"antialiased\",\n      \"::placeholder\": {\n        color: \"#CFD7DF\"\n      }\n    },\n    invalid: {\n      color: \"#e5424d\",\n      \":focus\": {\n        color: \"#303238\"\n      }\n    }\n  }\n};\n\nfunction CardSection() {\n  return <CardElement options={CARD_ELEMENT_OPTIONS} />;\n}\n\nexport default CardSection","import React, { Component } from 'react'\nimport PopPop from 'react-poppop';\nimport { CardElement } from \"@stripe/react-stripe-js\"\nimport CardSection from './CardSection'\nimport './CheckoutForm.css'\n\nexport default class CheckoutForm extends Component {\n\n    state = {\n        name: \"\",\n        paymentSuccess: false, \n        paymentError: null,\n        paymentPending: false\n    }\n\n\n    handleNameChange = event => {\n        this.setState({name: event.target.value})\n    }\n\n    handleSubmit = async event => {\n        this.setState({paymentPending: true})\n        event.preventDefault();\n    \n        const { stripe, elements } = this.props;\n        if (!stripe || !elements) {\n            return;\n        }\n\n        const card = elements.getElement(CardElement);\n        const result = await stripe.createToken(card);\n        if (result.error) {\n            window.error(result.error.message);\n        } else {\n            const { quantity } = this.props\n            fetch(\"https://wod-with-faris.herokuapp.com/users/buyclasspasses\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    quantity: quantity,\n                    description: `${quantity}X Class Passes`, \n                    token: result.token.id\n                })\n            }).then(resp => resp.json()).then(resp => this.cardPayment(resp.client_secret))\n        }\n    };\n\n\n    cardPayment = async (clientSecret) => {\n        const { stripe, elements } = this.props;\n        const { name } = this.state\n\n        const result = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n              card: elements.getElement(CardElement),\n              billing_details: {\n                name: name,\n              },\n            }\n    })\n\n        if (result.error) {\n            this.setState({paymentPending: false, paymentError: result.error.message})\n          } else {\n            if (result.paymentIntent.status === 'succeeded') {\n                this.setState({paymentPending: false, paymentSuccess: true, paymentError: null})\n                \n                const { quantity, userEmail } = this.props\n                fetch(\"https://wod-with-faris.herokuapp.com/users/addclasspasses\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    quantity: quantity,\n                    user_email: userEmail\n                })\n            }).then(\n                setTimeout(() => {\n                    this.setState({paymentSuccess: false})\n                    this.props.toggleShow(false)\n                    this.props.resetQuantity()\n                }, 6000)\n                )\n            }\n        }\n    }\n\n    render() {\n        const { show, toggleShow, quantity } = this.props\n        const { name, paymentSuccess, paymentError, paymentPending } = this.state\n        return (\n            <div>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={false}\n                        onClose={() => toggleShow(false)}\n                        closeOnOverlay={false}>\n                <div className='checkout-form'>\n                    {paymentSuccess&&<p className='payment-success'>Payment Successful</p>}\n                    {paymentError&&<p className='payment-error'>Error: {paymentError}</p>}\n                {paymentSuccess?\n                    <h1 className='payment-success'>Thank you! {this.props.quantity}X Class Passes have been added to your account!</h1>\n                :\n                <>\n                    <div class=\"product-info\">\n                        <h3 className=\"product-title\">{quantity === 1? \"1X Class Pass\": quantity + \"X Class Passes\"}</h3>\n                        <h4 className=\"product-price\">Total: CHF {quantity * 10}</h4>\n                    </div>\n                    <form className='form' onSubmit={this.handleSubmit}>\n                        <input className='name-card-input' required value={name} onChange={this.handleNameChange} type='text' placeholder='Full Name as displayed on card'/>\n                        <CardSection/>\n                        {paymentPending? <button className='loading-spinner'> </button> : <button className=\"btn-pay\">Buy Now</button>}\n                    </form>\n                </>\n                }\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n\n\n","import React, { Component } from 'react'\nimport ReactGA from 'react-ga';\nimport './BuyPasses.css'\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { ElementsConsumer } from \"@stripe/react-stripe-js\"\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport CheckoutForm from './CheckoutForm';\n\nconst stripePromise = loadStripe('pk_live_4g3t1ZRoe5slZQbs5Vy3IaGe00fOR9THIq');\n\nexport default class BuyPasses extends Component {\n\n    state = {\n        quantity: 0, \n        purchaseAmountLimit: false, \n        show: false\n    }\n\n    handleQuantityChange = amount => {\n        const { quantity } = this.state\n        if (quantity > 0 && quantity < 5) {\n            this.setState({quantity: quantity + amount, purchaseAmountLimit: false})\n        } else if ( quantity === 0 && amount === 1) {\n            this.setState({quantity: 1, purchaseAmountLimit: false})\n        }else if (quantity === 5 && amount === -1) {\n            this.setState({quantity: quantity + amount, purchaseAmountLimit: false})\n        } else if (quantity === 5) {\n            this.setState({purchaseAmountLimit: true})\n        }\n        ReactGA.event({\n            category: 'User',\n            action: `${amount}X classes was added to the cart.`\n        });\n    }\n\n    resetQuantity = () => {\n        this.setState({quantity: 0})\n    }\n\n    toggleShow = show => {\n        if (this.state.quantity > 0) {\n            this.setState({show: show});\n        } else if (this.state.quantity === 0) {\n            window.alert(\"Quantity of class passes must be more than 0\")\n        }\n\n        ReactGA.event({\n            category: 'User',\n            action: `Checkout button was hit`\n        });\n    }\n\n    render() {\n        const { quantity, purchaseAmountLimit } = this.state\n        return (\n            <div>\n                <h1>Buy Passes</h1>\n                <div className='purchase-box'>\n                    <div>\n                        <h1 className='quantity-title'>Class Passes</h1>\n                        {purchaseAmountLimit&& <p className='limit'>Purchase limit is 5 classes</p>}\n                        <h1 className='quantity'>{quantity}</h1>\n                        <div className='buttons-container'>\n                            <button className='quantity-btn' onClick={() => this.handleQuantityChange(-1)}>-</button>\n                            <button className='quantity-btn' onClick={() => this.handleQuantityChange(1)}>+</button>\n                        </div>\n                        <h1 className='total'>Total: CHF {quantity * 10}</h1>\n                        <button onClick={() => this.toggleShow(true)} className='checkout-btn'>Checkout</button>\n                        <Elements stripe={stripePromise}>\n                        <ElementsConsumer>\n                            {({ stripe, elements }) => (\n                            <CheckoutForm resetQuantity={this.resetQuantity} userEmail={this.props.currentUser.email} show={this.state.show} toggleShow={this.toggleShow} quantity={quantity} stripe={stripe} elements={elements} />\n                            )}\n                        </ElementsConsumer>\n                        </Elements>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n\nconst StyledLink = styled(Link)`\n    text-decoration: none;\n    &:focus, &:hover, &:visited, &:link, &:active {\n        text-decoration: none;\n    }\n`;\n\nexport default (props) => <StyledLink {...props} />;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport StyledLink from './StyledLink.js';\nimport './NavBar.css'\n\nexport default function MobileMenu(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (e) => {\n    setAnchorEl(null);\n    \n    if (e.target.textContent === 'Create Class'){\n      localStorage.setItem('prevUrl', '/createclass')\n    } else if(e.target.textContent === 'Clients') {\n      localStorage.setItem('prevUrl', '/clients')\n    } else if(e.target.textContent === 'Book Class') {\n      localStorage.setItem('prevUrl', '/classes')\n    } else if(e.target.textContent === 'Buy Passes') {\n      localStorage.setItem('prevUrl', '/buypasses')\n    } else if(e.target.textContent === 'Leaderboard') {\n      localStorage.setItem('prevUrl', '/leaderboard')\n    } else if(e.target.textContent === 'Profile') {\n      localStorage.setItem('prevUrl', '/profile')\n    } else if(e.target.textContent === 'Home') {\n      localStorage.setItem('prevUrl', null)\n    }\n  };\n\n  const { currentUser, userData, logout } = props\n\n  return (\n    <div className='menu'>\n      <Button  aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n          <h3 className='menu-h3'>Menu</h3>\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledLink  to='/'><MenuItem onClick={handleClose}>Home</MenuItem></StyledLink>\n        {currentUser&& userData&& userData.coach&&\n            <StyledLink  to='/createclass'><MenuItem onClick={handleClose}><p>Create Class</p></MenuItem></StyledLink>\n        }\n        {currentUser&& userData&& userData.coach&&\n            <StyledLink  to='/clients'><MenuItem onClick={handleClose}>Clients</MenuItem></StyledLink>\n        }\n        {currentUser&& userData&& !userData.coach&&\n            <StyledLink  to='/classes'><MenuItem onClick={handleClose}>Book Class</MenuItem></StyledLink>\n        }\n        {currentUser&& userData&& !userData.coach&&\n            <StyledLink  to='/buypasses'><MenuItem onClick={handleClose}>Buy Passes</MenuItem></StyledLink>\n        }\n        {currentUser&& userData&& !userData.coach&&\n            <StyledLink  to='/leaderboard'><MenuItem onClick={handleClose}>Leaderboard</MenuItem></StyledLink>\n        }\n        {currentUser&&\n            <StyledLink  to='/profile'><MenuItem onClick={handleClose}>Profile</MenuItem></StyledLink>\n        }\n        {currentUser?\n            <MenuItem onClick={logout}>Logout</MenuItem>\n            :\n            <StyledLink  to='/login'><MenuItem onClick={handleClose}>Login</MenuItem></StyledLink>\n        }\n      </Menu>\n    </div>\n  );\n}","import React from 'react'\nimport './LeaderboardStat.css'\n\nexport default function LeaderboardStat(props) {\n\n    const { user, attendances } = props.stat\n\n    const caloriesBurned  = 500 * attendances\n\n\n    return (\n        <tr className='leaderboard-stat' style={props.highestNoOfAttendances === attendances? {color: \"white\", backgroundColor: \"green\"} : null}>\n            <td>{user}</td>\n            <td>{attendances}</td>\n            <td>~{caloriesBurned} Cal.</td>\n        </tr>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport LeaderboardStat from './LeaderboardStat'\nimport './LeaderboardStat.css'\n\nexport default function Leaderboard() {\n\n    useEffect(() => {\n        fetch('https://wod-with-faris.herokuapp.com/usersession/getallattendances').then(resp => resp.json()).then(stats => setLeaderboardStats(stats))\n    }, [])\n\n    const [leaderboardStats, setLeaderboardStats] = useState([])\n \n    const sortedLeaderboardStats = leaderboardStats[0]&& leaderboardStats.sort((a, b) => b.attendances - a.attendances)\n\n    const attendance = leaderboardStats[0]&& leaderboardStats.map(stat => (stat.attendances))\n\n    const highestNoOfAttendances = Math.max.apply(Math, attendance);\n\n    return (\n        <div>\n            <h1>Leaderboard</h1>\n            <div className='stats-container'>\n                <table className='leaderboard-table' >\n                    <tr>\n                        <th>Name</th>\n                        <th>Total Class Attendances</th> \n                        <th>Total Calories Burned</th>\n                    </tr>\n                    {sortedLeaderboardStats&& sortedLeaderboardStats.map(stat => (\n                        <LeaderboardStat stat={stat} highestNoOfAttendances={highestNoOfAttendances}/> \n                    ))}\n                </table>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport { Route } from 'react-router-dom'\nimport ReactGA from 'react-ga'\nimport Home from './Components/Home';\nimport PrivateRoute from './PrivateRoute';\nimport Login from './Components/Login';\nimport SignUp from './Components/SignUp';\nimport app from './base'\nimport NavBar from './Components/NavBar';\nimport Classes from './Components/Classes';\nimport Profile from './Components/Profile';\nimport CreateClass from './Components/CreateClass';\nimport Clients from './Components/Clients';\nimport BuyPasses from './Components/BuyPasses';\nimport MobileMenu from './Components/MobileMenu'\nimport Leaderboard from './Components/Leaderboard';\nimport { Redirect } from 'react-router'\n\nconst lastPage = localStorage.getItem('prevUrl')\n\nclass App extends React.Component {\n\n  state = {\n    currentUser: null, \n    userData: null, \n    screenWidth: window.innerWidth\n  }\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  handleWindowSizeChange = () => {\n    this.setState({ screenWidth: window.innerWidth });\n  };\n\n  \n  handleSetUser = user => {\n    this.setState({currentUser: user})\n    fetch(`https://wod-with-faris.herokuapp.com/user/getuser?email=${user.email}`)\n        .then(resp => resp.json())\n        .then(userData => this.setState({userData}))\n  }\n\n  handleLogout = () => {\n    ReactGA.event({\n      category: 'User',\n      action: `${this.state.userData.first_name + \" \" + this.state.userData.last_name} logged out`\n  });\n    app.auth().signOut()\n    this.setState({currentUser: null})\n\n    localStorage.removeItem(\"prevUrl\");\n  }\n\n  render() { \n    const  { currentUser, userData, screenWidth } = this.state\n    const isMobile = screenWidth <= 500;\n    return (\n      <>\n        {isMobile? <div className='mobile-menu'><MobileMenu userData={userData} currentUser={currentUser} logout={this.handleLogout}/></div> : <NavBar userData={userData} logout={this.handleLogout} currentUser={currentUser}/>}\n        <PrivateRoute exact path='/classes' component={Classes}/>\n        <PrivateRoute exact path='/profile' component={Profile}/>\n        <PrivateRoute exact path='/createclass' component={CreateClass}/>\n        <PrivateRoute exact path='/clients' component={Clients}/>\n        <PrivateRoute exact path='/buypasses' component={BuyPasses}/>\n        <PrivateRoute exact path='/leaderboard' component={Leaderboard}/>\n        <Route exact path='/'>\n        {lastPage === '/'?\n          <Home user={userData} setUser={this.handleSetUser}/>\n          :\n          lastPage? <Redirect to={lastPage}/> : \n          <Home user={userData} setUser={this.handleSetUser}/>\n        }\n        </Route>\n        <Route exact path='/login'>\n          <Login setUser={this.handleSetUser}/>\n        </Route>\n        <Route exact path='/signup' component={SignUp}/>\n      </>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { AuthProvider } from './Auth'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <Router>\n        <App />\n      </Router>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}