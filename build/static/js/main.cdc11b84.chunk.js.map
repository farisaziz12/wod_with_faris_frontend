{"version":3,"sources":["base.js","Components/Schedule.js","Components/Home.js","Auth.js","PrivateRoute.js","Components/Login.js","Components/SignUp.js","Components/NavBar.js","Components/DatePick.js","Components/ClassModal.js","Components/Classes.js","Components/ClassCard.js","Components/CoachClassCard.js","Components/Profile.js","Components/CreateClass.js","Components/Client.js","Components/Clients.js","App.js","serviceWorker.js","index.js"],"names":["app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_SENDER_ID","measurementId","REACT_APP_MEASUREMENT_ID","Schedule","this","props","show","toggleShow","position","open","closeBtn","closeOnEsc","onClose","closeOnOverlay","className","to","Component","IG","require","Home","state","currentUser","instaPosts","showSchedule","setState","auth","onAuthStateChanged","user","setUser","profile","then","SlicedPosts","slice","onClick","href","target","map","post","node","shortcode","id","src","display_url","AuthContext","React","createContext","AuthProvider","children","useState","setCurrentUser","useEffect","Provider","value","PrivateRoute","RouteComponent","component","rest","useContext","render","routeProps","Login","email","password","passwordResetEmail","emailSent","handlelogin","a","signInWithEmailAndPassword","alert","handleChange","event","name","handlePasswordResetEmailChange","sendPasswordResetEmail","onChange","type","placeholder","withRouter","SignUp","firstName","lastName","passwordConfirm","passwordMatchError","emptyFieldsError","handleSignUp","createUserWithEmailAndPassword","fetch","method","headers","body","JSON","stringify","first_name","last_name","tokens","coach","resp","json","console","log","handleSetUser","emailVerified","sendEmailVerification","NavBar","page","handleActiveBtnChange","e","window","location","pathname","userData","logout","DatePick","date","ClassModal","clients","error","handleBookandUnBookClass","isBooked","find","client","undefined","length","user_id","session_id","ClientsWithNewBooking","deductToken","deletedBooking","filter","addToken","oneClass","now","Date","isInPast","time","class","style","width","toFixed","description","split","sentence","today","dd","getDate","mm","getMonth","todaydate","getFullYear","Classes","classes","chosenClass","isLoading","handleDateChange","handlePickClass","pickedClass","filteredClasses","ClassCard","handleCancelBooking","handleCancel","upcomingClass","CoachClassCard","askDeleteConfirm","editMode","classDescription","handleDeleteClass","ids","client_ids","tokenError","toggleDeleteConfirm","toggleEditMode","handleSubmit","Profile","upcomingClasses","booking","session","handleDelete","deletedClass","orderedByDateUpcomingClasses","sort","b","CreateClass","success","errorMessage","handleCreateClass","catch","Client","submitEdit","Clients","search","allClients","handleSearch","fuzzyMatch","compareTerm","term","string","toLowerCase","compare","matches","i","indexOf","sortSearch","results","result","alphebetizedClients","localeCompare","filteredClients","App","handleLogout","signOut","exact","path","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"0NAaeA,G,MAVHC,gBAAuB,CAC/BC,OAAQC,0CACRC,WAAYD,iCACZE,YAAaF,wCACbG,UAAWH,iBACXI,cAAeJ,eACfK,kBAAmBL,ocAAYM,6BAC/BC,cAAeP,ocAAYQ,4B,wCCLVC,E,uKACP,IAAD,EACwBC,KAAKC,MAA1BC,EADH,EACGA,KAAMC,EADT,EACSA,WACd,OACI,6BACI,kBAAC,IAAD,CAAQC,SAAS,eACTC,KAAMH,EACNI,UAAU,EACVC,YAAY,EACZC,QAAS,kBAAML,GAAW,IAC1BM,gBAAgB,GACxB,wBAAIC,UAAU,kBAAd,YACA,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,eAAd,qFACA,2BAAG,2CAAH,SACA,2BAAG,4CAAH,+BACA,2BAAG,8CAAH,oBACA,2BAAG,6CAAH,+BACA,2BAAG,2CAAH,SACA,2BAAG,6CAAH,2BACA,2BAAG,2CAAH,+BACA,kBAAC,IAAD,CAAMC,GAAG,YAAW,4BAAQD,UAAU,cAAlB,wB,GArBFE,aCDhCC,EAAKC,EAAQ,IAGEC,E,4MAEjBC,MAAQ,CACJC,YAAa,EAAKhB,MAAMgB,YACxBC,WAAY,GACZC,cAAc,G,EAqBlBhB,WAAa,SAAAD,GACT,EAAKkB,SAAS,CAACD,aAAcjB,K,kEAnBb,IAAD,OACff,EAAIkC,OAAOC,oBAAmB,SAASC,GAC/BA,GACAC,EAAQD,MAIhB,IAAMC,EAAU,SAAAD,GACZ,EAAKH,SAAS,CAACH,YAAaM,IAC5B,EAAKtB,MAAMuB,QAAQD,IAGvBV,EAAGY,QAtBe,kBAsBYC,MAAK,SAACR,GAChC,EAAKE,SAAS,CAACF,oB,+BASb,IAAD,OACGA,EAAelB,KAAKgB,MAApBE,WACFS,EAAcT,EAAW,GAAIA,EAAWU,MAAM,EAAG,GAAK,GAC5D,OACI,oCACA,4BAAQC,QAAS,kBAAM,EAAK1B,YAAW,IAAOO,UAAU,sBAAxD,uBACA,kBAAC,EAAD,CAAUR,KAAMF,KAAKgB,MAAMG,aAAchB,WAAYH,KAAKG,aACtD,yBAAKO,UAAU,mBACX,wBAAIA,UAAU,SAAd,gBAAmC,uBAAGA,UAAU,QAAQoB,KAAI,4CAA+CC,OAAO,UAA/E,oBACnC,yBAAKrB,UAAU,mBACViB,EAAYK,KAAI,SAAAC,GAAI,OACb,uBAAGH,KAAI,sCAAiCG,EAAKC,KAAKC,UAA3C,KAAyDJ,OAAO,UACnE,yBAAKK,GAAG,aAAa1B,UAAU,aAAa2B,IAAKJ,EAAKC,KAAKI,yB,GA1C7D1B,a,gBCJrB2B,EAAeC,IAAMC,gBAG3B,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAAY,EACAC,mBAAS,MADT,mBAC/B3B,EAD+B,KAClB4B,EADkB,KAOvC,OAJAC,qBAAU,WACN3D,EAAIkC,OAAOC,mBAAmBuB,KAC/B,IAGC,kBAACN,EAAYQ,SAAb,CACAC,MAAO,CAAC/B,gBAEH0B,GCbE,SAASM,EAAT,GAA+D,IAA5BC,EAA2B,EAAtCC,UAA8BC,EAAQ,6BAClEnC,EAAeoC,qBAAWd,GAA1BtB,YACP,OACI,kBAAC,IAAD,iBACImC,EADJ,CAEAE,OAAQ,SAAAC,GAAU,OAChBtC,EACE,kBAACiC,EAAD,iBAAoBK,EAApB,CAAgCtC,YAAaA,KAE7C,kBAAC,IAAD,CAAUN,GAAI,e,oCCNpB6C,G,kNAEFxC,MAAQ,CACJC,YAAa,KACbwC,MAAO,KACPC,SAAU,KACVxD,MAAM,EACNyD,mBAAoB,KACpBC,WAAW,G,EAgBfC,Y,sBAAc,gCAAAC,EAAA,+DACsB,EAAK9C,MAAzByC,EADF,EACEA,MAAOC,EADT,EACSA,SADT,kBAGIvE,EACHkC,OACA0C,2BAA2BN,EAAOC,GALnC,sDAOFM,MAAM,EAAD,IAPH,wD,EAWd7D,WAAa,SAAAD,GACT,EAAKkB,SAAS,CAAClB,KAAMA,K,EAGzB+D,aAAe,SAAAC,GACX,EAAK9C,SAAL,eAAgB8C,EAAMnC,OAAOoC,KAAOD,EAAMnC,OAAOiB,S,EAErDoB,+BAAiC,SAAAF,GAC7B,EAAK9C,SAAL,eAAgB8C,EAAMnC,OAAOoC,KAAOD,EAAMnC,OAAOiB,S,EAGrDqB,uBAAyB,SAAAZ,GACrBtE,EAAIkC,OAAOgD,uBAAuBZ,GAAO/B,KAAK,EAAKN,SAAS,CAACwC,WAAW,M,kEApCxD,IAAD,OACfzE,EAAIkC,OAAOC,oBAAmB,SAASC,GAC/BA,GACAC,EAAQD,MAIhB,IAAMC,EAAU,SAAAD,GACZ,EAAKH,SAAS,CAACH,YAAaM,IAC5B,EAAKtB,MAAMuB,QAAQD,M,+BA8BlB,IAAD,SACyDvB,KAAKgB,MAA1DC,EADJ,EACIA,YAAaf,EADjB,EACiBA,KAAMyD,EADvB,EACuBA,mBAAoBC,EAD3C,EAC2CA,UAC/C,OAAI3C,EACO,kBAAC,IAAD,CAAUN,GAAG,MAGpB,6BACI,yBAAKD,UAAU,iBACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,aAAa0B,GAAG,UAAS,oCAAvC,UACA,yBAAK1B,UAAU,eACf,2BAAO4D,SAAUtE,KAAKiE,aAAcE,KAAK,QAAQI,KAAK,QAAQ7D,UAAU,QAAQ8D,YAAY,UAC5F,2BAAOF,SAAUtE,KAAKiE,aAAcE,KAAK,WAAWI,KAAK,WAAW7D,UAAU,QAAQ8D,YAAY,cAElG,4BAAQ3C,QAAS7B,KAAK6D,YAAanD,UAAU,cAA7C,UACA,wBAAImB,QAAS7B,KAAKG,WAAYO,UAAU,mBAAkB,+CAC1D,kBAAC,IAAD,CAAQN,SAAS,eACjBC,KAAMH,EACNI,UAAU,EACVC,YAAY,EACZC,QAAS,kBAAM,EAAKL,YAAW,IAC/BM,gBAAgB,GACZ,yBAAKC,UAAU,mCACX,wBAAIA,UAAU,uBAAd,kBACCkD,GAAY,uBAAGlD,UAAU,sBAAb,eACb,uBAAGA,UAAU,uBAAb,wDACA,2BAAOsC,MAAOW,EAAoBW,SAAUtE,KAAKoE,+BAAgCD,KAAK,qBAAqBzD,UAAU,wBAAwB6D,KAAK,UAClJ,4BAAQ1C,QAAS,kBAAM,EAAKwC,uBAAuBV,IAAqBjD,UAAU,uBAAlF,gCAKZ,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAASC,GAAG,WACR,wBAAID,UAAU,aAAa0B,GAAG,SAAQ,oCAAtC,oB,GArFZI,IAAM5B,YAgGX6D,cAAWjB,GChGpBkB,E,4MAEF1D,MAAQ,CACJ2D,UAAW,KACXC,SAAU,KACVnB,MAAO,KACPC,SAAU,KACVmB,gBAAiB,KACjB5D,YAAa,KACb6D,mBAAoB,GACpBlB,WAAW,EACXmB,iBAAkB,M,EAgBtBC,a,sBAAe,sCAAAlB,EAAA,2DACuD,EAAK9C,MAA/DyC,EADG,EACHA,MAAOC,EADJ,EACIA,SAAUmB,EADd,EACcA,gBAAkBF,EADhC,EACgCA,UAAWC,EAD3C,EAC2CA,SAD3C,SAGJlB,IAAamB,GAA6B,OAAVpB,EAH5B,gCAIDtE,EACLkC,OACA4D,+BAA+BxB,EAAOC,GANhC,OAOP,EAAKtC,SAAS,CAAC0D,mBAAoB,KAAMC,iBAAkB,OAE3DG,MAAM,mDAAoD,CAC1DC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB9B,MAAO,EAAKzC,MAAMyC,MAClB+B,WAAY,EAAKxE,MAAM2D,UACvBc,UAAW,EAAKzE,MAAM4D,SACtBc,OAAQ,EACRC,OAAO,MAERjE,MAAK,SAAAkE,GAAI,OAAIA,EAAKC,UAAQnE,MAAK,SAAAkE,GAAI,OAAIE,QAAQC,IAAIH,MAtB/C,uBAwBIlC,GAAamB,GAAoBpB,GAAUkB,GAAcC,EAGpE,EAAKxD,SAAS,CAAC0D,mBAAoB,yBAA0BC,iBAAkB,OAF5E,EAAK3D,SAAS,CAAC2D,iBAAkB,6BAA8BD,mBAAoB,OAzB/E,0DA+BPd,MAAM,EAAD,IA/BE,0D,EAmCfC,aAAe,SAAAC,GACX,EAAK9C,SAAL,eAAgB8C,EAAMnC,OAAOoC,KAAOD,EAAMnC,OAAOiB,S,EAGrDgD,cAAgB,SAAAzE,GACZ,EAAKH,SAAS,CAACH,YAAaM,K,kEApDZ,IAAD,OACfpC,EAAIkC,OAAOC,oBAAmB,SAASC,GAC/BA,GACAC,EAAQD,MAIhB,IAAMC,EAAU,SAAAD,GACZ,EAAKH,SAAS,CAACH,YAAaM,O,+BAkD1B,IAAD,EACkEvB,KAAKgB,MAArEC,EADF,EACEA,YAAa2C,EADf,EACeA,UAAWkB,EAD1B,EAC0BA,mBAAoBC,EAD9C,EAC8CA,iBACnD,OAAI9D,GACIA,EAAYgF,eAAkBrC,IAC9B3C,EAAYiF,wBACZlG,KAAKoB,SAAS,CAACwC,WAAW,KAEvB,kBAAC,IAAD,CAAUjD,GAAG,OAGpB,6BACI,yBAAKD,UAAU,iBACX,yBAAKA,UAAU,UACVoE,GAAqB,uBAAGpE,UAAU,iBAAiBoE,GAAyBC,GAAmB,uBAAGrE,UAAU,iBAAiBqE,GAC9H,wBAAIrE,UAAU,aAAa0B,GAAG,UAAS,oCAAvC,WACA,yBAAK1B,UAAU,eACX,8BACI,2BAAO4D,SAAUtE,KAAKiE,aAAcE,KAAK,YAAYI,KAAK,OAAO7D,UAAU,QAAQ8D,YAAY,eAC/F,2BAAOF,SAAUtE,KAAKiE,aAAcE,KAAK,WAAWI,KAAK,OAAO7D,UAAU,QAAQ8D,YAAY,cAC9F,2BAAOF,SAAUtE,KAAKiE,aAAcE,KAAK,QAAQI,KAAK,QAAQ7D,UAAU,QAAQ8D,YAAY,UAC5F,2BAAOF,SAAUtE,KAAKiE,aAAcE,KAAK,WAAWI,KAAK,WAAW7D,UAAU,QAAQ8D,YAAY,aAClG,2BAAOF,SAAUtE,KAAKiE,aAAcE,KAAK,kBAAkBI,KAAK,WAAW7D,UAAU,QAAQ8D,YAAY,uBAGjH,4BAAQ3C,QAAS7B,KAAKgF,aAActE,UAAU,cAA9C,YAEJ,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAASC,GAAG,UACR,wBAAID,UAAU,aAAa0B,GAAG,SAAQ,oCAAtC,mB,GAtGXI,IAAM5B,WAiHZ6D,cAAWC,GCnHLyB,G,kNAEjBnF,MAAQ,CACJoF,KAAM,M,EAOVC,sBAAwB,SAACC,GACA,aAAlBA,EAAEvE,OAAOoC,MAAyC,aAAlBmC,EAAEvE,OAAOoC,KACxC,EAAKlE,MAAMgB,YAAa,EAAKG,SAAS,CAACgF,KAAME,EAAEvE,OAAOoC,OAAS,EAAK/C,SAAS,CAACgF,KAAM,WAEpF,EAAKhF,SAAS,CAACgF,KAAME,EAAEvE,OAAOoC,Q,kEAPlCnE,KAAKoB,SAAS,CAACgF,KAAMG,OAAOC,SAASC,a,+BAW/B,IACEL,EAASpG,KAAKgB,MAAdoF,KADH,EAE6BpG,KAAKC,MAA/BgB,EAFH,EAEGA,YAAayF,EAFhB,EAEgBA,SACrB,OACI,yBAAKhG,UAAU,WACX,kBAAC,IAAD,CAASC,GAAG,KACR,4BAAQkB,QAAS7B,KAAKqG,sBAAuBlC,KAAK,IAAIzD,UAAoB,MAAT0F,EAAc,iBAAmB,WAAlG,SAEHnF,GAAcyF,GAAWA,EAASf,OAC/B,kBAAC,IAAD,CAAShF,GAAG,gBACR,4BAAQkB,QAAS7B,KAAKqG,sBAAuBlC,KAAK,eAAezD,UAAoB,iBAAT0F,EAAyB,iBAAmB,WAAxH,iBAGPnF,GAAcyF,GAAWA,EAASf,OAC/B,kBAAC,IAAD,CAAShF,GAAG,YACR,4BAAQkB,QAAS7B,KAAKqG,sBAAuBlC,KAAK,WAAWzD,UAAoB,aAAT0F,EAAqB,iBAAmB,WAAhH,YAGPnF,GAAcyF,IAAYA,EAASf,OACpC,kBAAC,IAAD,CAAShF,GAAG,YACR,4BAAQkB,QAAS7B,KAAKqG,sBAAuBlC,KAAK,WAAWzD,UAAoB,aAAT0F,EAAqB,iBAAmB,WAAhH,eAGHnF,GACD,kBAAC,IAAD,CAASN,GAAG,YACR,4BAAQkB,QAAS7B,KAAKqG,sBAAuBlC,KAAK,WAAWzD,UAAoB,aAAT0F,EAAqB,iBAAmB,WAAhH,YAGHnF,EACD,4BAAQP,UAAU,UAAUmB,QAAS7B,KAAKC,MAAM0G,QAAhD,WAEA,kBAAC,IAAD,CAAShG,GAAG,UACR,4BAAQkB,QAAS7B,KAAKqG,sBAAuBlC,KAAK,SAASzD,UAAoB,WAAT0F,EAAmB,iBAAmB,WAA5G,WAGJ,wBAAI1F,UAAU,UAAd,uB,GArDoBE,cCFfgG,G,6KAMjB,OACE,6BACE,2BAAOtC,SAAUtE,KAAKC,MAAMgE,aAAcjB,MAAOhD,KAAKC,MAAM4G,KAAMnG,UAAU,cAAc6D,KAAK,OAAOJ,KAAK,c,GAR7EvD,cCCjBkG,E,4MACjB9F,MAAQ,CACJd,MAAM,EACN6G,QAAS,GACTC,MAAO,M,EAUX7G,WAAa,SAAAD,GACX,EAAKkB,SAAS,CAAClB,KAAMA,EAAM8G,MAAO,Q,EAGpCC,yBAA4B,SAAA7E,GACxB,IAAM8E,EAAW,EAAKlG,MAAM+F,QAAQI,MAAK,SAAAC,GAAM,OAAIA,EAAO7F,KAAKa,KAAO,EAAKnC,MAAMsB,KAAKa,WACrEiF,IAAbH,GAA0B,EAAKjH,MAAMsB,KAAKmE,OAAS,GAAK,EAAK1E,MAAM+F,QAAQO,OAAS,GACpFxB,QAAQC,IAAI,WACZb,MAAM,wDAAyD,CAC3DC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBgC,QAAS,EAAKtH,MAAMsB,KAAKa,GACzBoF,WAAYpF,MAEjBV,MAAK,SAAAkE,GAAI,OAAIA,EAAKC,UAAQnE,MAAK,SAAA+F,GAAqB,OAAI,EAAKrG,SAAS,CAAC2F,QAASU,EAAuBT,MAAO,UAAQtF,KAAK,EAAKzB,MAAMyH,cAEnIR,GAAY,EAAKjH,MAAMsB,KAAKmE,QAAU,EAC5CR,MAAM,0DAA2D,CAC7DC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBgC,QAAS,EAAKtH,MAAMsB,KAAKa,GACzBoF,WAAYpF,MAEjBV,MAAK,SAAAkE,GAAI,OAAIA,EAAKC,UAAQnE,MAAK,SAAAiG,GAAc,OAAI,EAAKvG,SAAS,CAAC2F,QAAS,EAAK/F,MAAM+F,QAAQa,QAAO,SAAAR,GAAM,OAAIA,EAAO7F,KAAKa,KAAOuF,EAAepG,KAAKa,MAAK4E,MAAO,UAAQtF,KAAK,EAAKzB,MAAM4H,UAEpL,EAAK5H,MAAMsB,KAAKmE,QAAU,EACjC,EAAKtE,SAAS,CAAC4F,MAAO,sCACc,IAA7B,EAAKhG,MAAMoG,OAAOE,QACzB,EAAKlG,SAAS,CAAC4F,MAAO,uC,kEA1CV,IAAD,OACf9B,MAAM,8DAAD,OAA+DlF,KAAKC,MAAM6H,SAAS1F,IAAM,IAC3FV,MAAK,SAAAkE,GAAI,OAAIA,EAAKC,UAAQnE,MAAK,SAAAqF,GAAO,OAAI,EAAK3F,SAAS,CAAC2F,iB,+BA8CtD,IAAD,SAC0B/G,KAAKgB,MAA7Bd,EADF,EACEA,KAAM6G,EADR,EACQA,QAASC,EADjB,EACiBA,MACfc,EAAY9H,KAAKC,MAAjB6H,SACDZ,EAAWH,EAAQ,IAAKA,EAAQI,MAAK,SAAAC,GAAM,OAAIA,EAAO7F,KAAKa,KAAO,EAAKnC,MAAMsB,KAAKa,MAClF2F,EAAM,IAAIC,KAEVC,EADmB,IAAID,KAAKF,EAASjB,KAAO,IAAMiB,EAASI,MAC7BH,EACpC,OACI,6BACI,4BAAQI,MAAM,YAAYtG,QAAS,kBAAM,EAAK1B,YAAW,KAAQ2H,EAASI,KAAO,IAAMJ,EAAS3D,MAChG,kBAAC,IAAD,CAAQ/D,SAAS,eACTC,KAAMH,EACNI,UAAU,EACVC,YAAY,EACZC,QAAS,kBAAM,EAAKL,YAAW,IAC/BM,gBAAgB,GACxB,wBAAIC,UAAU,iBAAiBoH,EAASI,KAAO,IAAMJ,EAAS3D,MAN9D,IAMyE,yBAAKzD,UAAU,0BAAyB,yBAAK0H,MAAO,CAACC,MAAM,GAAD,QAAMtB,EAAQO,OAAO,EAAK,KAAKgB,QAAQ,GAAvC,OAA+C5H,UAAU,sBAAqB,0BAAMA,UAAU,iBAAoC,IAAnBqG,EAAQO,OAAc,eAAiBP,EAAQO,OAAS,UAC1S,wBAAI5G,UAAU,YAAW,2CAAyBoH,EAASnC,MAAMH,WAAa,IAAMsC,EAASnC,MAAMF,WAClGqC,EAASS,YAAYC,MAAM,MAAMxG,KAAI,SAAAyG,GAAQ,OAC1C,uBAAG/H,UAAU,YAAY+H,MAG3BR,EAAwJ,4BAAQE,MAAM,YAAd,kBAA9I,4BAAQtG,QAAS,kBAAM,EAAKoF,yBAAyB,EAAKhH,MAAM6H,SAAS1F,KAAK+F,MAAM,YAAYjB,EAAU,SAAW,cAChIF,GACG,uBAAGtG,UAAU,SAASV,KAAKgB,MAAMgG,a,GAhFbpG,aCCpC8H,EAAQ,IAAIV,KACZW,EAAKD,EAAME,UACXC,EAAKH,EAAMI,WAAa,EAGxBH,EAAK,KACLA,EAAK,IAAMA,GAEXE,EAAK,KACLA,EAAK,IAAMA,GAEf,IAAIE,EAPOL,EAAMM,cAOM,IAAMH,EAAK,IAAMF,EAEnBM,E,4MAEjBjI,MAAQ,CACJkI,QAAS,GACTrC,KAAMkC,EACNI,YAAa,KACb5H,KAAM,KACN6H,WAAW,G,EAafC,iBAAmB,SAAA/C,GAAM,IAAD,EACpB,EAAKlF,UAAL,mBACIkF,EAAEvE,OAAOoC,KAAOmC,EAAEvE,OAAOiB,OAD7B,2BAEc,GAFd,IAIAkC,MAAM,sDAAD,OAAuDoB,EAAEvE,OAAOiB,QACpEtB,MAAK,SAAAkE,GAAI,OAAIA,EAAKC,UAClBnE,MAAK,SAAAwH,GAAO,OAAI,EAAK9H,SAAS,CAAC8H,QAASA,EAASE,WAAW,Q,EAGhEE,gBAAkB,SAAAlH,GACf,IAAMmH,EAAc,EAAKvI,MAAMkI,QAAQ/B,MAAM,SAAAW,GAAQ,OAAIA,EAAS1F,KAAOA,KACzE,EAAKhB,SAAS,CAAC+H,YAAaI,K,EAG/B7B,YAAc,WAAO,IACVnG,EAAS,EAAKP,MAAdO,KACR,EAAKH,SAAS,CAACG,KAAM,CACjBa,GAAIb,EAAKa,GACTuD,MAAOpE,EAAKoE,MACZH,WAAYjE,EAAKiE,WACjBC,UAAWlE,EAAKkE,UAChBhC,MAAOlC,EAAKkC,MACZiC,OAAQnE,EAAKmE,OAAS,M,EAG7BmC,SAAW,WAAO,IACPtG,EAAS,EAAKP,MAAdO,KACR,EAAKH,SAAS,CAACG,KAAM,CACjBa,GAAIb,EAAKa,GACTuD,MAAOpE,EAAKoE,MACZH,WAAYjE,EAAKiE,WACjBC,UAAWlE,EAAKkE,UAChBhC,MAAOlC,EAAKkC,MACZiC,OAAQnE,EAAKmE,OAAS,M,kEA5CV,IAAD,OACfR,MAAM,sDAAD,OAAuDlF,KAAKgB,MAAM6F,OACtEnF,MAAK,SAAAkE,GAAI,OAAIA,EAAKC,UAClBnE,MAAK,SAAAwH,GAAO,OAAI,EAAK9H,SAAS,CAAC8H,QAASA,EAASE,WAAW,OAE7DlE,MAAM,2DAAD,OAA4DlF,KAAKC,MAAMgB,YAAYwC,QACvF/B,MAAK,SAAAkE,GAAI,OAAIA,EAAKC,UAClBnE,MAAK,SAAAH,GAAI,OAAI,EAAKH,SAAS,CAACG,c,+BA0CvB,IAAD,SACiCvB,KAAKgB,MAAlC6F,EADJ,EACIA,KAAMqC,EADV,EACUA,QAASE,EADnB,EACmBA,UAClBI,EAAkBN,EAAQtB,QAAO,SAAAE,GAAQ,OAAIA,EAASjB,OAASA,KACrE,OACI,6BACI,0CACA,kBAAC,EAAD,CAAUA,KAAMA,EAAM5C,aAAcjE,KAAKqJ,mBACzC,yBAAK3I,UAAU,aACV0I,GAAY,4BAAQ1I,UAAU,YAC9BwI,EAAQ,GACTM,EAAgBxH,KAAI,SAAA8F,GAAQ,OACxB,kBAAC,EAAD,CAAYD,SAAU,EAAKA,SAAUH,YAAa,EAAKA,YAAanG,KAAM,EAAKP,MAAMO,KAAMuG,SAAUA,EAAUwB,gBAAiB,EAAKA,sBAGxIF,GAAY,gD,GAzEIxI,aCfhB6I,G,kNAGjBC,oBAAsB,SAAAtH,GAClB8C,MAAM,0DAA2D,CACzDC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBgC,QAAS,EAAKtH,MAAMsB,KAAKa,GACzBoF,WAAYpF,MAEjBV,MAAK,SAAAkE,GAAI,OAAIA,EAAKC,UAAQnE,MAAK,SAAAiG,GAAc,OAAI,EAAK1H,MAAM0J,aAAahC,MAAiBjG,KAAK,EAAKzB,MAAM4H,W,uDAG3G,IAAD,OACG+B,EAAkB5J,KAAKC,MAAvB2J,cACR,OACI,yBAAKlJ,UAAU,cACX,wBAAIA,UAAU,cAAckJ,EAAc1B,KAAO,IAAM0B,EAAczF,MACrE,uBAAGzD,UAAU,aAAakJ,EAAc/C,MACxC,4BAAQhF,QAAS,kBAAM,EAAK6H,oBAAoBE,EAAcxH,KAAK1B,UAAU,YAA7E,e,GAvBuBE,cCClBiJ,E,4MAEjB7I,MAAQ,CACJd,MAAM,EACN6G,QAAS,GACT+C,kBAAkB,EAClBC,UAAU,EACVC,iBAAkB,EAAK/J,MAAM2J,cAAcrB,a,EAG/C0B,kBAAoB,SAAA7H,GAChB8C,MAAM,yDAAD,OAA0D9C,GAAM,CAC7D+C,OAAQ,WACTzD,MAAK,SAAAkE,GAAI,OAAIA,EAAKC,UAAQnE,MAAK,SAAAiG,GAAc,OAAI,EAAK1H,MAAM0J,aAAahC,MAChF,IAAMuC,EAAM,EAAKlJ,MAAM+F,QAAQ/E,KAAI,SAAAoF,GAAW,OAAOA,EAAO7F,KAAKa,MACjE8C,MAAM,6DAA8D,CAChEC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB4E,WAAYD,MAEjBxI,KAAK,EAAKN,SAAS,CAAC0I,kBAAkB,M,EAG7C3J,WAAa,SAAAD,GACT,EAAKkB,SAAS,CAAClB,KAAMA,EAAMkK,WAAY,Q,EAE3CC,oBAAsB,WAClB,EAAKjJ,SAAS,CAAC0I,kBAAmB,EAAK9I,MAAM8I,oB,EAQjDQ,eAAiB,WACb,EAAKlJ,SAAS,CAAC2I,UAAW,EAAK/I,MAAM+I,Y,EAGzC9F,aAAe,SAAAqC,GACX,EAAKlF,SAAL,eAAgBkF,EAAEvE,OAAOoC,KAAOmC,EAAEvE,OAAOiB,S,EAG7CuH,aAAe,SAAAnI,GACX8C,MAAM,wDAAD,OAAyD9C,GAAM,CAC5D+C,OAAQ,QACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBgD,YAAa,EAAKvH,MAAMgJ,qBAEjCtI,KAAK,EAAKN,SAAS,CAAC2I,UAAU,M,kEAvBjB,IAAD,OACf7E,MAAM,8DAAD,OAA+DlF,KAAKC,MAAM2J,cAAcxH,IAAM,IAChGV,MAAK,SAAAkE,GAAI,OAAIA,EAAKC,UAAQnE,MAAK,SAAAqF,GAAO,OAAI,EAAK3F,SAAS,CAAC2F,iB,+BAwBtD,IAAD,OACG6C,EAAkB5J,KAAKC,MAAvB2J,cADH,EAEmE5J,KAAKgB,MAArEd,EAFH,EAEGA,KAAM6G,EAFT,EAESA,QAAS+C,EAFlB,EAEkBA,iBAAkBC,EAFpC,EAEoCA,SAAUC,EAF9C,EAE8CA,iBACnD,OACI,yBAAKtJ,UAAU,oBACX,wBAAIA,UAAU,cAAckJ,EAAc1B,KAAO,IAAM0B,EAAczF,MACrE,uBAAGzD,UAAU,aAAakJ,EAAc/C,MACvCiD,EAAkB,iCAAM,4BAAQjI,QAAS,kBAAM,EAAKoI,kBAAkBL,EAAcxH,KAAK1B,UAAU,YAA3E,kBAAN,IAAoH,4BAAQmB,QAAS7B,KAAKqK,oBAAqB3J,UAAU,YAArD,iBAApH,KAAmN,4BAAQmB,QAAS7B,KAAKqK,oBAAqB3J,UAAU,YAArD,gBACrOoJ,OAAkBzC,EAAY,4BAAQxF,QAAS,kBAAM,EAAK1B,YAAW,IAAOO,UAAU,YAAxD,aAC/B,kBAAC,IAAD,CAAQN,SAAS,eACTC,KAAMH,EACNI,UAAU,EACVC,YAAY,EACZC,QAAS,kBAAM,EAAKL,YAAW,IAC/BM,gBAAgB,GACxB,wBAAIC,UAAU,iBAAiBkJ,EAAc1B,KAAO,IAAM0B,EAAczF,MANxE,IAMmF,yBAAKzD,UAAU,0BAAyB,yBAAK0H,MAAO,CAACC,MAAM,GAAD,QAAMtB,EAAQO,OAAO,EAAK,KAAKgB,QAAQ,GAAvC,OAA+C5H,UAAU,sBAAqB,0BAAMA,UAAU,iBAAoC,IAAnBqG,EAAQO,OAAc,eAAiBP,EAAQO,OAAS,UACpT,wBAAI5G,UAAU,YAAW,2CAAyBkJ,EAAcjE,MAAMH,WAAa,IAAMoE,EAAcjE,MAAMF,WAC3GsE,EAKF,8BAAUrJ,UAAU,YAAYsC,MAAOgH,EAAkB1F,SAAUtE,KAAKiE,aAAcE,KAAK,qBAJ3F6F,EAAiBxB,MAAM,MAAMxG,KAAI,SAAAyG,GAAQ,OACrC,uBAAG/H,UAAU,YAAY+H,MAK7B,6BACEsB,EAA6F,4BAAQrJ,UAAU,WAAWmB,QAAS,kBAAM,EAAK0I,aAAaX,EAAcxH,MAA5E,UAAnF,4BAAQ1B,UAAU,WAAWmB,QAAS7B,KAAKsK,gBAA3C,gBACR,wBAAI5J,UAAU,YAAd,sBACCqG,EAAQ/E,KAAI,SAAAoF,GAAM,OACf,uBAAG1G,UAAU,YAAb,KAA2B0G,EAAO7F,KAAKiE,WAAa,IAAM4B,EAAO7F,KAAKkE,eAExEsB,EAAQ,IACN,uBAAGrG,UAAU,YAAb,e,GA3FoBE,aCCvB4J,E,4MAEjBxJ,MAAQ,CACJO,KAAM,KACNkJ,gBAAiB,I,EAarB5C,SAAW,WAAO,IACNtG,EAAS,EAAKP,MAAdO,KACR,EAAKH,SAAS,CAACG,KAAM,CACjBa,GAAIb,EAAKa,GACTuD,MAAOpE,EAAKoE,MACZH,WAAYjE,EAAKiE,WACjBC,UAAWlE,EAAKkE,UAChBhC,MAAOlC,EAAKkC,MACZiC,OAAQnE,EAAKmE,OAAS,M,EAI7BiE,aAAe,SAAAhC,GACZ,EAAKvG,SAAS,CAACqJ,gBAAiB,EAAKzJ,MAAMyJ,gBAAgB7C,QAAO,SAAA8C,GAAO,OAAIA,EAAQtI,KAAOuF,EAAegD,QAAQvI,S,EAEtHwI,aAAe,SAAAC,GACZ,EAAKzJ,SAAS,CAACqJ,gBAAiB,EAAKzJ,MAAMyJ,gBAAgB7C,QAAO,SAAA8C,GAAO,OAAIA,EAAQtI,KAAOyI,EAAazI,S,kEA1BzF,IAAD,OACf8C,MAAM,2DAAD,OAA4DlF,KAAKC,MAAMgB,YAAYwC,QACvF/B,MAAK,SAAAkE,GAAI,OAAIA,EAAKC,UAClBnE,MAAK,SAAAH,GAAI,OAAI,EAAKH,SAAS,CAACG,YAE7B2D,MAAM,0EAAD,OAA2ElF,KAAKC,MAAMgB,YAAYwC,QACtG/B,MAAK,SAAAkE,GAAI,OAAIA,EAAKC,UAClBnE,MAAK,SAAA+I,GAAe,OAAI,EAAKrJ,SAAS,CAACqJ,yB,+BAsBlC,IAAD,SAC6BzK,KAAKgB,MAA/BO,EADH,EACGA,KAAMkJ,EADT,EACSA,gBACRK,EAA+BL,EAAgB,IAAKA,EAAgBM,MAAK,SAACjH,EAAGkH,GAAJ,OAAU,IAAIhD,KAAKlE,EAAE+C,MAAQ,IAAImB,KAAKgD,EAAEnE,SAAOjF,MAAM,EAAG,GACvI,OACI,6BACI,yBAAKlB,UAAU,qBACVa,EACD,oCACI,4BAAKA,EAAKiE,WAAa,IAAMjE,EAAKkE,YAChClE,EAAKoE,OAAQ,wBAAIjF,UAAU,UAAd,WAAgCa,EAAKmE,QACpD,yBAAKhF,UAAU,8BACX,wBAAIA,UAAU,0BAAd,uBACEa,EAAKoE,OAAQ8E,EAAgB,IAC3BK,EAA6B9I,KAAI,SAAA4H,GAAa,OAC1C,kBAAC,EAAD,CAAWD,aAAc,EAAKA,aAAc9B,SAAU,EAAKA,SAAUtG,KAAM,EAAKP,MAAMO,KAAMqI,cAAeA,OAGlHrI,EAAKoE,OAAQ8E,EAAgB,IAC1BK,EAA6B9I,KAAI,SAAA4H,GAAa,OAC1C,kBAAC,EAAD,CAAgBD,aAAc,EAAKiB,aAAcrJ,KAAM,EAAKP,MAAMO,KAAMqI,cAAeA,QAI7Fa,EAAgB,IAAI,wBAAI/J,UAAU,QAAd,UAO9B,4BAAQA,UAAU,kB,GAlEDE,aCFhBqK,G,mNAEjBjK,MAAQ,CACJmD,KAAM,KACNoE,YAAa,KACb1B,KAAM,KACNqB,KAAM,KACNvC,MAAO,KACPuF,SAAS,EACTC,aAAc,M,EASlBlH,aAAe,SAAAqC,GACX,EAAKlF,SAAL,eACKkF,EAAEvE,OAAOoC,KAAOmC,EAAEvE,OAAOiB,S,EAIlCoI,kBAAoB,WAAO,IAAD,EAC2B,EAAKpK,MAA9CmD,EADc,EACdA,KAAMoE,EADQ,EACRA,YAAa1B,EADL,EACKA,KAAMqB,EADX,EACWA,KAAMvC,EADjB,EACiBA,MAClCxB,GAAQoE,GAAe1B,GAAQqB,EACpChD,MAAM,uDAAwD,CACtDC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBpB,KAAMA,EACNoE,YAAaA,EACb1B,KAAMA,EACNqB,KAAMA,EACNX,QAAS5B,EAAMvD,OAEpBV,MAAK,SAAAkE,GAAI,OAAIA,EAAKC,UAAQnE,KAAK,EAAKN,SAAS,CAAC8J,SAAS,EAAMC,aAAc,KAAMhH,KAAM,KAAMoE,YAAa,KAAM1B,KAAM,KAAMqB,KAAM,QACpImD,OAAM,SAAAF,GAAY,OAAI,EAAK/J,SAAS,CAAC+J,oBAEtC,EAAK/J,SAAS,CAAC+J,aAAc,4B,kEA/BjB,IAAD,OACfjG,MAAM,2DAAD,OAA4DlF,KAAKC,MAAMgB,YAAYwC,QACvF/B,MAAK,SAAAkE,GAAI,OAAIA,EAAKC,UAClBnE,MAAK,SAAAiE,GAAK,OAAI,EAAKvE,SAAS,CAACuE,e,+BAgCxB,IAAD,EAC6B3F,KAAKgB,MAA/BkK,EADH,EACGA,QAASC,EADZ,EACYA,aACjB,OACI,6BACI,wBAAIzK,UAAU,sBAAd,gBACCwK,GACO,wBAAIxK,UAAU,WAAd,kBAEPyK,GACO,wBAAIzK,UAAU,iBAAiByK,GAEvC,yBAAKzK,UAAU,oBACX,wBAAIA,UAAU,mBAAd,QACA,2BAAOyD,KAAK,OAAOG,SAAUtE,KAAKiE,aAAcvD,UAAU,qBAAqB6D,KAAK,SACpF,wBAAI7D,UAAU,mBAAd,eACA,8BAAUyD,KAAK,cAAcG,SAAUtE,KAAKiE,aAAcvD,UAAU,0BACpE,wBAAIA,UAAU,mBAAd,QACA,2BAAOyD,KAAK,OAAOG,SAAUtE,KAAKiE,aAAcvD,UAAU,qBAAqB6D,KAAK,SACpF,wBAAI7D,UAAU,mBAAd,QACA,2BAAOyD,KAAK,OAAOG,SAAUtE,KAAKiE,aAAcvD,UAAU,qBAAqB6D,KAAK,SACpF,4BAAQ7D,UAAU,mBAAmBmB,QAAS7B,KAAKoL,mBAAnD,sB,GAnEqBxK,cCCpB0K,G,kNAEjBtK,MAAQ,CACJd,MAAM,EACN6J,UAAU,EACVtG,MAAO,EAAKxD,MAAMmH,OAAO3D,MACzBiC,OAAQ,EAAKzF,MAAMmH,OAAO1B,Q,EAG9BvF,WAAa,SAAAD,GACT,EAAKkB,SAAS,CAAClB,KAAMA,K,EAGzBoK,eAAiB,WACb,EAAKlJ,SAAS,CAAC2I,UAAU,K,EAG7B9F,aAAe,SAAAqC,GACX,EAAKlF,SAAL,eAAgBkF,EAAEvE,OAAOoC,KAAOmC,EAAEvE,OAAOiB,S,EAI7CuI,WAAa,SAAAnJ,GACT8C,MAAM,oDAAD,OAAqD9C,GAAM,CACxD+C,OAAQ,QACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB9B,MAAO,EAAKzC,MAAMyC,MAClBiC,OAAQ,EAAK1E,MAAM0E,WAE5BhE,KAAK,EAAKN,SAAS,CAAC2I,UAAU,M,uDAG3B,IAAD,OACG3C,EAAWpH,KAAKC,MAAhBmH,OADH,EAEqCpH,KAAKgB,MAAvCd,EAFH,EAEGA,KAAMuD,EAFT,EAESA,MAAOiC,EAFhB,EAEgBA,OAAQqE,EAFxB,EAEwBA,SAC7B,OACI,6BACI,wBAAIlI,QAAS7B,KAAKG,WAAYO,UAAU,UAAU0G,EAAO5B,WAAa,IAAM4B,EAAO3B,WACnF,kBAAC,IAAD,CAAQrF,SAAS,eACTC,KAAMH,EACNI,UAAU,EACVC,YAAY,EACZC,QAAS,kBAAM,EAAKL,YAAW,IAC/BM,gBAAgB,GACZ,yBAAKC,UAAU,0BACX,wBAAIA,UAAU,cAAc0G,EAAO5B,WAAa,IAAM4B,EAAO3B,WAC7D,uBAAG/E,UAAU,cAAb,WAFJ,IAE4CqJ,EAAkD,2BAAOzF,SAAUtE,KAAKiE,aAAcvD,UAAU,aAAasC,MAAOS,EAAOU,KAAK,UAAtH,uBAAGzD,UAAU,cAAc+C,GAC7E,uBAAG/C,UAAU,cAAb,YAHJ,IAG6CqJ,EAAmD,2BAAOzF,SAAUtE,KAAKiE,aAAcvD,UAAU,aAAa6D,KAAK,SAASvB,MAAO0C,EAAQvB,KAAK,WAAtI,uBAAGzD,UAAU,cAAcgF,GAC5EqE,EAAqF,4BAAQlI,QAAS,kBAAM,EAAK0J,WAAWnE,EAAOhF,KAAK1B,UAAU,YAA7D,UAA3E,4BAAQmB,QAAS7B,KAAKsK,eAAgB5J,UAAU,YAAhD,e,GApDRE,cCAf4K,E,4MAEjBxK,MAAQ,CACJyK,OAAQ,KACRC,WAAY,I,EAUhBC,aAAe,SAAArF,GACX,IAAMmF,EAASnF,EAAEvE,OAAOiB,MACpByI,EAAOnE,OAAS,EAChB,EAAKlG,SAAS,CAACqK,WACU,IAAlBA,EAAOnE,QACd,EAAKlG,SAAS,CAACqK,OAAQ,Q,EAK/BG,WAAa,SAACC,EAAaC,GACvB,GAAoB,IAAhBA,EAAKxE,OACL,OAAO,EAIX,IAHA,IAAIyE,EAASF,EAAYG,cACrBC,EAAUH,EAAKE,cACfE,EAAU,EACLC,EAAI,EAAGA,EAAIF,EAAQ3E,OAAQ6E,IAChCJ,EAAOK,QAAQH,EAAQE,KAAO,EAAID,GAAW,EAAIA,GAAU,EAE/D,OAAOA,EAAUL,EAAYvE,Q,EAGjC+E,WAAa,SAACtF,GACV,IAAMuF,EAAUvF,EAAQ/E,KAAI,SAAAoF,GAAM,MAAI,CAACA,EAAQ,EAAKwE,WAAWxE,EAAO5B,WAAa,IAAM4B,EAAO3B,UAAW,EAAKzE,MAAMyK,YAGtH,OAFAa,EAAQvB,MAAK,SAACjH,EAAGkH,GAAJ,OAAUA,EAAE,GAAKlH,EAAE,MACRwI,EAAQ1E,QAAO,SAAA2E,GAAM,OAAIA,EAAO,GAAK,M,kEA/B7C,IAAD,OACfrH,MAAM,oDACLxD,MAAK,SAAAkE,GAAI,OAAIA,EAAKC,UAClBnE,MAAK,SAAAgK,GAAU,OAAI,EAAKtK,SAAS,CAACsK,oB,+BAgC7B,IAAD,EAC0B1L,KAAKgB,MAA5B0K,EADH,EACGA,WAAYD,EADf,EACeA,OACde,EAAsBd,EAAWX,MAAK,SAACjH,EAAEkH,GAAH,OAAUlH,EAAE2B,UAAUgH,cAAczB,EAAEvF,cAClFK,QAAQC,IAAIyG,GACZ,IAAME,EAAkBjB,EAAQzL,KAAKqM,WAAWX,GAAcc,EAC9D,OACI,6BACI,uCACA,2BAAO9L,UAAU,aAAa4D,SAAUtE,KAAK2L,aAAcxH,KAAK,SAASI,KAAK,SAC9E,yBAAK7D,UAAU,qBACVgL,GAAaA,EAAW,IAEzBgB,EAAgB1K,KAAI,SAAAoF,GAAM,OACtB,kBAAC,EAAD,CAAQA,OAAQqE,EAAQrE,EAAO,GAAKA,OAIvCsE,IAAcA,EAAW,IACtB,0C,GA7Da9K,aCqDtB+L,E,4MAvCb3L,MAAQ,CACNC,YAAa,KACbyF,SAAU,M,EAIZV,cAAgB,SAAAzE,GACd,EAAKH,SAAS,CAACH,YAAaM,IAC5B2D,MAAM,2DAAD,OAA4D3D,EAAKkC,QACjE/B,MAAK,SAAAkE,GAAI,OAAIA,EAAKC,UAClBnE,MAAK,SAAAgF,GAAQ,OAAI,EAAKtF,SAAS,CAACsF,iB,EAGvCkG,aAAe,WACbzN,EAAIkC,OAAOwL,UACX,EAAKzL,SAAS,CAACH,YAAa,Q,uDAGpB,IAAD,EAC4BjB,KAAKgB,MAA/BC,EADF,EACEA,YAAayF,EADf,EACeA,SACtB,OACE,oCACE,kBAAC,EAAD,CAAQA,SAAUA,EAAUC,OAAQ3G,KAAK4M,aAAc3L,YAAaA,IACpE,kBAACgC,EAAD,CAAc6J,OAAK,EAACC,KAAK,WAAW5J,UAAW8F,IAC/C,kBAAChG,EAAD,CAAc6J,OAAK,EAACC,KAAK,WAAW5J,UAAWqH,IAC/C,kBAACvH,EAAD,CAAc6J,OAAK,EAACC,KAAK,eAAe5J,UAAW8H,IACnD,kBAAChI,EAAD,CAAc6J,OAAK,EAACC,KAAK,WAAW5J,UAAWqI,IAC/C,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CAAMvL,QAASxB,KAAKgG,iBAEtB,kBAAC,IAAD,CAAO8G,OAAK,EAACC,KAAK,UAChB,kBAAC,EAAD,CAAOvL,QAASxB,KAAKgG,iBAEvB,kBAAC,IAAD,CAAO8G,OAAK,EAACC,KAAK,UAAU5J,UAAWuB,S,GAnC7BlC,IAAM5B,WCJJoM,QACW,cAA7BzG,OAAOC,SAASyG,UAEe,UAA7B1G,OAAOC,SAASyG,UAEhB1G,OAAOC,SAASyG,SAASC,MACvB,2DCVNC,IAAS7J,OACP,kBAAC,IAAM8J,WAAP,KACE,kBAAC1K,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,SAIN2K,SAASC,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/L,MAAK,SAAAgM,GACJA,EAAaC,gBAEdtC,OAAM,SAAArE,GACLlB,QAAQkB,MAAMA,EAAM4G,a","file":"static/js/main.cdc11b84.chunk.js","sourcesContent":["import * as firebase from 'firebase/app'\nimport 'firebase/auth'\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n});\n\nexport default app;","import React, { Component } from 'react'\nimport PopPop from 'react-poppop';\nimport './Schedule.css';\nimport { Link } from 'react-router-dom';\n\nexport default class Schedule extends Component {\n    render() {\n        const { show, toggleShow } = this.props\n        return (\n            <div>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => toggleShow(false)}\n                        closeOnOverlay={true}>\n                <h1 className='schedule-title'>Schedule</h1>\n                <div className='schedule-container'>\n                    <h3 className='schedule-h3'>Classes with less than 2 people will be cancelled 2 hours before class start time</h3>\n                    <p><strong>Monday:</strong> None</p>\n                    <p><strong>Tuesday:</strong> Workout of the Day @ 18:30</p>\n                    <p><strong>Wednesday:</strong> Core360 @ 18:30</p>\n                    <p><strong>Thursday:</strong> Workout of the Day @ 18:30</p>\n                    <p><strong>Friday:</strong> None</p>\n                    <p><strong>Saturday:</strong> Mobility Class @ 11:00</p>\n                    <p><strong>Sunday:</strong> Workout of the Day @ 15:00</p>\n                    <Link to='/classes'><button className='class-link'>Book a Class</button></Link>\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n   ","import React, { Component } from 'react'\nimport app from '../base'\nimport './Home.css'\nimport Schedule from './Schedule';\nconst IG = require('instagrammer');\nconst instagramUsername = 'faziz_training';\n\nexport default class Home extends Component {\n\n    state = {\n        currentUser: this.props.currentUser,\n        instaPosts: [],\n        showSchedule: false\n    }\n\n    componentDidMount(){\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n    \n        const setUser = user => {\n            this.setState({currentUser: user})\n            this.props.setUser(user)\n        }\n        \n        IG.profile(instagramUsername).then((instaPosts) => {\n            this.setState({instaPosts})\n        });\n      \n    }\n\n    toggleShow = show => {\n        this.setState({showSchedule: show })\n    }\n\n    render() {\n        const { instaPosts } = this.state\n        const SlicedPosts = instaPosts[0]? instaPosts.slice(0, 8) : []\n        return (\n            <>\n            <button onClick={() => this.toggleShow(true)} className='class-schedule-btn'>View Class Schedule</button>\n            <Schedule show={this.state.showSchedule} toggleShow={this.toggleShow}/>\n                <div className='posts-container'>\n                    <h2 className='title'>Recent Posts <a className='title' href={`https://www.instagram.com/faziz_training/`} target=\"_blank\">@faziz_training</a></h2>\n                    <div className='posts-container'>\n                        {SlicedPosts.map(post => (\n                                <a href={`https://www.instagram.com/p/${post.node.shortcode}/`} target=\"_blank\">\n                                    <img id='insta-post' className='insta-post' src={post.node.display_url} />\n                                </a>\n                        ))}\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport app from './base'\n\nexport const AuthContext  = React.createContext();\n\n\nexport function AuthProvider({ children }) {\n    const  [currentUser, setCurrentUser] = useState(null);\n\n    useEffect(() => {\n        app.auth().onAuthStateChanged(setCurrentUser);\n    }, []);\n\n    return (\n        <AuthContext.Provider\n        value={{currentUser}}\n        > \n            {children}\n        </AuthContext.Provider>\n    )\n}\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Auth'\n\nexport default function PrivateRoute({ component: RouteComponent, ...rest }) {\n    const {currentUser} = useContext(AuthContext)\n    return (\n        <Route\n        {...rest}\n        render={routeProps =>\n        !!currentUser ? (\n            <RouteComponent {...routeProps} currentUser={currentUser} />\n        ) : (\n            <Redirect to={'/login'}/>\n        )\n        }\n        />\n    )\n}\n","import React from 'react';\nimport { withRouter, Redirect } from 'react-router';\nimport app from '../base';\nimport './Login.css'\nimport { NavLink } from 'react-router-dom'\nimport PopPop from 'react-poppop';\n\nclass Login extends React.Component {\n\n    state = {\n        currentUser: null, \n        email: null, \n        password: null,\n        show: false,\n        passwordResetEmail: null, \n        emailSent: false\n    }\n\n    componentDidMount(){\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n\n        const setUser = user => {\n            this.setState({currentUser: user})\n            this.props.setUser(user)\n        }\n    }\n\n    handlelogin = async () => {\n            const { email, password } = this.state;\n            try {\n                await app\n                  .auth()\n                  .signInWithEmailAndPassword(email, password);\n            } catch (error) {\n                alert(error);\n            }\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n\n    handleChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n    handlePasswordResetEmailChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n\n    sendPasswordResetEmail = email => {\n        app.auth().sendPasswordResetEmail(email).then(this.setState({emailSent: true}))\n    }\n\n    render(){\n        const { currentUser, show, passwordResetEmail, emailSent } = this.state\n        if (currentUser) {\n            return <Redirect to='/'/>;\n        }\n        return (\n            <div>\n                <div className=\"form-structor\">\n                    <div className=\"signup\">\n                        <h2 className=\"form-title\" id=\"signup\"><span>or</span>Log In</h2>\n                        <div className=\"form-holder\">\n                        <input onChange={this.handleChange} name='email' type=\"email\" className=\"input\" placeholder=\"Email\" />\n                        <input onChange={this.handleChange} name='password' type=\"password\" className=\"input\" placeholder=\"Password\" />\n                        </div>\n                        <button onClick={this.handlelogin} className=\"submit-btn\">Log In</button>\n                        <h3 onClick={this.toggleShow} className='forgot-password'><u>Forgot Password</u></h3>\n                        <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                            <div className='forgot-password-modal-container'>\n                                <h2 className='forgot-password-txt'>Password Reset</h2>\n                                {emailSent&& <p className='email-send-success'>Email Sent!</p>}\n                                <p className='forgot-password-txt'>Please enter the email associated with your account:</p>\n                                <input value={passwordResetEmail} onChange={this.handlePasswordResetEmailChange} name='passwordResetEmail' className='forgot-password-input' type='email'/>\n                                <button onClick={() => this.sendPasswordResetEmail(passwordResetEmail)} className='forgot-password-btn'>Send Password Reset Email</button>\n                                \n                            </div>\n                        </PopPop>\n                    </div>\n                    <div className=\"login slide-up\">\n                        <div className=\"center\">\n                            <NavLink to='/signup'>\n                                <h2 className=\"form-title\" id=\"login\"><span>or</span>Sign Up</h2>\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(Login);\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom'\nimport app from '../base';\nimport './Login.css'\nimport { NavLink } from 'react-router-dom'\n\nclass SignUp extends React.Component {\n\n    state = {\n        firstName: null,\n        lastName: null, \n        email: null,\n        password: null,\n        passwordConfirm: null,\n        currentUser: null,\n        passwordMatchError: \"\",\n        emailSent: false,\n        emptyFieldsError: null\n    }\n\n\n    componentDidMount(){\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n\n        const setUser = user => {\n            this.setState({currentUser: user})\n        }\n    }\n\n    handleSignUp = async () => {\n        const { email, password, passwordConfirm , firstName, lastName} = this.state;\n        try {\n           if (password === passwordConfirm && email !== null) { \n            await app\n            .auth()\n            .createUserWithEmailAndPassword(email, password);\n            this.setState({passwordMatchError: null, emptyFieldsError: null})\n\n            fetch(\"https://wod-with-faris.herokuapp.com/user/create\", {\n            method: \"POST\", \n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                first_name: this.state.firstName,\n                last_name: this.state.lastName,\n                tokens: 1,\n                coach: false\n            })\n            }).then(resp => resp.json()).then(resp => console.log(resp))\n\n           } else if (!password || !passwordConfirm || !email || !firstName || !lastName){\n               this.setState({emptyFieldsError: \"Please fill all the fields\", passwordMatchError: null})\n           } else {\n            this.setState({passwordMatchError: \"Passwords do not match\", emptyFieldsError: null})\n           }\n\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    handleChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n\n    handleSetUser = user => {\n        this.setState({currentUser: user})\n    }\n\n\n\n    \n    render (){\n        const {currentUser, emailSent, passwordMatchError, emptyFieldsError} = this.state\n        if (currentUser) {\n            if(!currentUser.emailVerified && !emailSent){\n                currentUser.sendEmailVerification();\n                this.setState({emailSent: true})\n            }\n            return <Redirect to='/'/>;\n        }\n        return (\n            <div>\n                <div className=\"form-structor\">\n                    <div className=\"signup\">\n                        {passwordMatchError&& <p className='sign-up-error'>{passwordMatchError}</p>}{emptyFieldsError&& <p className='sign-up-error'>{emptyFieldsError}</p>}\n                        <h2 className=\"form-title\" id=\"signup\"><span>or</span>Sign up</h2>\n                        <div className=\"form-holder\">\n                            <form>\n                                <input onChange={this.handleChange} name='firstName' type=\"text\" className=\"input\" placeholder=\"First Name\" />\n                                <input onChange={this.handleChange} name='lastName' type=\"text\" className=\"input\" placeholder=\"Last Name\" />\n                                <input onChange={this.handleChange} name='email' type=\"email\" className=\"input\" placeholder=\"Email\" />\n                                <input onChange={this.handleChange} name='password' type=\"password\" className=\"input\" placeholder=\"Password\" />\n                                <input onChange={this.handleChange} name='passwordConfirm' type=\"password\" className=\"input\" placeholder=\"Confirm Password\" />\n                            </form>\n                        </div>\n                        <button onClick={this.handleSignUp} className=\"submit-btn\">Sign up</button>\n                    </div>\n                    <div className=\"login slide-up\">\n                        <div className=\"center\">\n                            <NavLink to='/login'>\n                                <h2 className=\"form-title\" id=\"login\"><span>or</span>Log in</h2>\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(SignUp)\n","import React, { Component } from 'react'\nimport app from '../base'\nimport { NavLink } from 'react-router-dom'\nimport './NavBar.css'\n\nexport default class NavBar extends Component {\n\n    state = {\n        page: null\n    }\n\n    componentDidMount() {\n        this.setState({page: window.location.pathname})\n    }\n\n    handleActiveBtnChange = (e) => {\n        if(e.target.name === '/profile' || e.target.name === '/classes'){\n            this.props.currentUser? this.setState({page: e.target.name}) : this.setState({page: '/login'}) \n        } else {\n            this.setState({page: e.target.name})\n        }\n    }\n\n    render() {\n        const { page } = this.state \n        const { currentUser, userData } = this.props\n        return (\n            <div className='nav-bar'>\n                <NavLink to='/'>\n                    <button onClick={this.handleActiveBtnChange} name='/' className={page === '/'? 'nav-btn active' : 'nav-btn'}>Home</button>\n                </NavLink>\n                {currentUser&& userData&& userData.coach&&\n                    <NavLink to='/createclass'>\n                        <button onClick={this.handleActiveBtnChange} name='/createclass' className={page === '/createclass'? 'nav-btn active' : 'nav-btn'}>Create Class</button>\n                    </NavLink>\n                }\n                {currentUser&& userData&& userData.coach&&\n                    <NavLink to='/clients'>\n                        <button onClick={this.handleActiveBtnChange} name='/clients' className={page === '/clients'? 'nav-btn active' : 'nav-btn'}>Clients</button>\n                    </NavLink>\n                }\n                {currentUser&& userData&& !userData.coach&&\n                <NavLink to='/classes'>\n                    <button onClick={this.handleActiveBtnChange} name='/classes' className={page === '/classes'? 'nav-btn active' : 'nav-btn'}>Book Class</button>\n                </NavLink>\n                }\n                {currentUser&&\n                <NavLink to='/profile'>\n                    <button onClick={this.handleActiveBtnChange} name='/profile' className={page === '/profile'? 'nav-btn active' : 'nav-btn'}>Profile</button>\n                </NavLink >\n                }\n                {currentUser?\n                <button className='nav-btn' onClick={this.props.logout}>Log Out</button> \n                :\n                <NavLink to='/login'>\n                    <button onClick={this.handleActiveBtnChange} name='/login' className={page === '/login'? 'nav-btn active' : 'nav-btn'}>Log In</button>\n                </NavLink>\n                }\n                <h3 className='logo-2'>WOD WITH FARIS</h3>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './Classes.css'\n\nexport default class DatePick extends Component {\n\n\n\n\n  render() {\n    return (\n      <div>\n        <input onChange={this.props.handleChange} value={this.props.date} className='date-picker' type='date' name='date'/>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react'\nimport PopPop from 'react-poppop';\nimport './Classes.css'\n\nexport default class ClassModal extends Component {\n    state = {\n        show: false, \n        clients: [], \n        error: null,\n      }\n\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/usersessions?class_id=${this.props.oneClass.id}`, {\n        }).then(resp => resp.json()).then(clients => this.setState({clients}))\n    }\n  \n  \n    toggleShow = show => {\n      this.setState({show: show, error: null});\n    }\n\n    handleBookandUnBookClass =  id => {\n        const isBooked = this.state.clients.find(client => client.user.id === this.props.user.id)\n        if (isBooked === undefined && this.props.user.tokens > 0 && this.state.clients.length < 8) {\n            console.log(\"booking\")\n            fetch(\"https://wod-with-faris.herokuapp.com/usersession/book\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.props.user.id,\n                    session_id: id\n                })\n            }).then(resp => resp.json()).then(ClientsWithNewBooking => this.setState({clients: ClientsWithNewBooking, error: null})).then(this.props.deductToken)\n            \n        } else if(isBooked && this.props.user.tokens >= 0) {\n            fetch(`https://wod-with-faris.herokuapp.com/usersession/unbook`, {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.props.user.id,\n                    session_id: id\n                })\n            }).then(resp => resp.json()).then(deletedBooking => this.setState({clients: this.state.clients.filter(client => client.user.id !== deletedBooking.user.id), error: null})).then(this.props.addToken)\n            \n        } else if (this.props.user.tokens <= 0){\n            this.setState({error: \"Sorry, you have run out of tokens\"})\n        } else if (this.state.client.length === 8) {\n            this.setState({error: \"Sorry, this class is fully booked\"})\n        }\n        \n\n    }\n\n    render() {\n        const {show, clients, error} = this.state;\n        const {oneClass} = this.props;\n        const isBooked = clients[0]&& clients.find(client => client.user.id === this.props.user.id)\n        const now = new Date()\n        const classDateAndTime = new Date(oneClass.date + \"T\" + oneClass.time)\n        const isInPast = classDateAndTime < now? true : false\n        return (\n            <div>\n                <button class=\"class-btn\" onClick={() => this.toggleShow(true)}>{oneClass.time + \" \" + oneClass.name}</button>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                <h1 className='workout-title'>{oneClass.time + \" \" + oneClass.name}</h1> <div className='attending-progress-bar'><div style={{width:`${((clients.length/8) * 100).toFixed(2)}px`}}className='inner-progress-bar'><span className='attending-txt'>{clients.length === 8? \"Fully Booked\" : clients.length + \" / 8\"}</span></div></div>\n                <h3 className='desc-txt'><strong>Coach: </strong>{oneClass.coach.first_name + \" \" + oneClass.coach.last_name}</h3>\n                {oneClass.description.split('\\n').map(sentence => (\n                    <p className='desc-txt'>{sentence}</p> \n                ))\n                }\n                {!isInPast? <button onClick={() => this.handleBookandUnBookClass(this.props.oneClass.id)} class=\"book-btn\">{isBooked? \"Cancel\" : \"Book Class\"}</button> : <button class=\"past-btn\">Already Passed</button>}\n                {error&&\n                    <p className='error'>{this.state.error}</p>\n                }\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport DatePick from './DatePick'\nimport './Classes.css'\nimport ClassModal from './ClassModal'\n\nlet today = new Date()\nlet dd = today.getDate(); \nlet mm = today.getMonth() + 1; \n\nlet yyyy = today.getFullYear(); \nif (dd < 10) { \n    dd = '0' + dd; \n} \nif (mm < 10) { \n    mm = '0' + mm; \n} \nlet todaydate = yyyy + '-' + mm + '-' + dd; \n\nexport default class Classes extends Component {\n\n    state = {\n        classes: [],\n        date: todaydate, \n        chosenClass: null,\n        user: null,\n        isLoading: true\n    }\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/sessions?date=${this.state.date}`)\n        .then(resp => resp.json())\n        .then(classes => this.setState({classes: classes, isLoading: false}))\n\n        fetch(`https://wod-with-faris.herokuapp.com/user/getuser?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(user => this.setState({user}))\n    }\n\n    handleDateChange = e => {\n        this.setState({\n           [e.target.name]: e.target.value,\n           isLoading: true\n        })\n        fetch(`https://wod-with-faris.herokuapp.com/sessions?date=${e.target.value}`)\n        .then(resp => resp.json())\n        .then(classes => this.setState({classes: classes, isLoading: false}))\n     }\n\n     handlePickClass = id => { \n        const pickedClass = this.state.classes.find( oneClass => oneClass.id === id)\n        this.setState({chosenClass: pickedClass})\n     }\n\n     deductToken = () => {\n        const { user } = this.state \n        this.setState({user: {\n            id: user.id,\n            coach: user.coach,\n            first_name: user.first_name,\n            last_name: user.last_name, \n            email: user.email,\n            tokens: user.tokens - 1\n        }})\n     }\n     addToken = () => {\n        const { user } = this.state \n        this.setState({user: {\n            id: user.id,\n            coach: user.coach,\n            first_name: user.first_name,\n            last_name: user.last_name, \n            email: user.email,\n            tokens: user.tokens + 1\n        }})\n     }\n\n\n    render() {\n        const  { date, classes, isLoading } = this.state\n        const filteredClasses = classes.filter(oneClass => oneClass.date === date)\n        return (\n            <div>\n                <h1>Book Class</h1>\n                <DatePick date={date} handleChange={this.handleDateChange}/>\n                <div className='container'>\n                    {isLoading&& <button className='loading'></button >}\n                    {classes[0]?\n                    filteredClasses.map(oneClass => (\n                        <ClassModal addToken={this.addToken} deductToken={this.deductToken} user={this.state.user} oneClass={oneClass} handlePickClass={this.handlePickClass}/>\n                    ))\n                    :\n                    !isLoading&& <h1>No Classes</h1>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Classes.css'\n\nexport default class ClassCard extends Component {\n\n\n    handleCancelBooking = id => {\n        fetch(`https://wod-with-faris.herokuapp.com/usersession/unbook`, {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.props.user.id,\n                    session_id: id\n                })\n            }).then(resp => resp.json()).then(deletedBooking => this.props.handleCancel(deletedBooking)).then(this.props.addToken)\n    }\n\n    render() {\n        const { upcomingClass } = this.props\n        return (\n            <div className='class-card'>\n                <h2 className='card-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h2>\n                <p className='card-date'>{upcomingClass.date}</p>\n                <button onClick={() => this.handleCancelBooking(upcomingClass.id)} className='book-btn'>Cancel</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Classes.css'\nimport PopPop from 'react-poppop';\n\nexport default class CoachClassCard extends Component {\n\n    state = {\n        show: false,\n        clients: [],\n        askDeleteConfirm: false,\n        editMode: false,\n        classDescription: this.props.upcomingClass.description\n    }\n\n    handleDeleteClass = id => {\n        fetch(`https://wod-with-faris.herokuapp.com/sessions/deleted/${id}`, {\n                method: \"DELETE\"\n            }).then(resp => resp.json()).then(deletedBooking => this.props.handleCancel(deletedBooking))\n        const ids = this.state.clients.map(client => {return client.user.id})\n        fetch(\"https://wod-with-faris.herokuapp.com/sessions/returntokens\", {\n            method: \"POST\", \n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                client_ids: ids\n            })\n        }).then(this.setState({askDeleteConfirm: false}))\n    }\n\n    toggleShow = show => {\n        this.setState({show: show, tokenError: null});\n    }\n    toggleDeleteConfirm = () => {\n        this.setState({askDeleteConfirm: !this.state.askDeleteConfirm});\n    }\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/usersessions?class_id=${this.props.upcomingClass.id}`, {\n        }).then(resp => resp.json()).then(clients => this.setState({clients}))\n    }\n\n    toggleEditMode = () => {\n        this.setState({editMode: !this.state.editMode})\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit = id => {\n        fetch(`https://wod-with-faris.herokuapp.com/sessions/update/${id}`, {\n                method: \"PATCH\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    description: this.state.classDescription\n                })\n        }).then(this.setState({editMode: false}))\n    }\n\n    render() {\n        const { upcomingClass } = this.props\n        const { show, clients, askDeleteConfirm, editMode, classDescription } = this.state\n        return (\n            <div className='coach-class-card'>\n                <h2 className='card-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h2>\n                <p className='card-date'>{upcomingClass.date}</p>\n                {askDeleteConfirm? <div> <button onClick={() => this.handleDeleteClass(upcomingClass.id)} className='book-btn'>Confirm Delete</button> <button onClick={this.toggleDeleteConfirm} className='book-btn'>Cancel Delete</button> </div>: <button onClick={this.toggleDeleteConfirm} className='book-btn'>Delete Class</button>}\n                {askDeleteConfirm? undefined : <button onClick={() => this.toggleShow(true)} className='book-btn'>More Info</button>}\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                <h1 className='workout-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h1> <div className='attending-progress-bar'><div style={{width:`${((clients.length/8) * 100).toFixed(2)}px`}}className='inner-progress-bar'><span className='attending-txt'>{clients.length === 8? \"Fully Booked\" : clients.length + \" / 8\"}</span></div></div>\n                <h3 className='desc-txt'><strong>Coach: </strong>{upcomingClass.coach.first_name + \" \" + upcomingClass.coach.last_name}</h3>\n                {!editMode?\n                classDescription.split('\\n').map(sentence => (\n                    <p className='desc-txt'>{sentence}</p> \n                ))\n                :\n                <textarea className='edit-desc' value={classDescription} onChange={this.handleChange} name='classDescription'/>\n                } \n                <div>\n                {!editMode? <button className='book-btn' onClick={this.toggleEditMode}>Edit Workout</button> : <button className='book-btn' onClick={() => this.handleSubmit(upcomingClass.id)}>Submit</button>}\n                    <h3 className='desc-txt'>Signed  Up Clients</h3>\n                    {clients.map(client => (\n                        <p className='desc-txt'>- {client.user.first_name + \" \" + client.user.last_name}</p>\n                    ))}\n                    {!clients[0]&&\n                        <p className='desc-txt'>None</p>\n                    }\n\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Profile.css'\nimport ClassCard from './ClassCard'\nimport CoachClassCard from './CoachClassCard'\n\nexport default class Profile extends Component {\n\n    state = {\n        user: null, \n        upcomingClasses: []\n    }\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/user/getuser?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(user => this.setState({user}))\n\n        fetch(`https://wod-with-faris.herokuapp.com/usersession/upcomingclasses?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(upcomingClasses => this.setState({upcomingClasses}))\n    }\n\n    addToken = () => {\n        const { user } = this.state \n        this.setState({user: {\n            id: user.id,\n            coach: user.coach,\n            first_name: user.first_name,\n            last_name: user.last_name, \n            email: user.email,\n            tokens: user.tokens + 1\n        }})\n     }\n\n     handleCancel = deletedBooking => {\n        this.setState({upcomingClasses: this.state.upcomingClasses.filter(booking => booking.id !== deletedBooking.session.id)})\n     }\n     handleDelete = deletedClass => {\n        this.setState({upcomingClasses: this.state.upcomingClasses.filter(booking => booking.id !== deletedClass.id)})\n     }\n\n    render() {\n        const { user, upcomingClasses } = this.state\n        const orderedByDateUpcomingClasses = upcomingClasses[0]&& upcomingClasses.sort((a, b) => new Date(a.date) - new Date(b.date)).slice(0, 4)\n        return (\n            <div>\n                <div className='profile-container'>\n                    {user?\n                    <>\n                        <h1>{user.first_name + \" \" + user.last_name}</h1>\n                        {!user.coach&& <h2 className='tokens'>Tokens: {user.tokens}</h2>}\n                        <div className='upcoming-classes-container'>\n                            <h2 className='upcoming-classes-title'>Upcoming Classes: </h2>\n                            {!user.coach&& upcomingClasses[0]&&\n                                orderedByDateUpcomingClasses.map(upcomingClass => (\n                                    <ClassCard handleCancel={this.handleCancel} addToken={this.addToken} user={this.state.user} upcomingClass={upcomingClass}/>\n                                ))\n                            }\n                            {user.coach&& upcomingClasses[0]&&\n                                orderedByDateUpcomingClasses.map(upcomingClass => (\n                                    <CoachClassCard handleCancel={this.handleDelete} user={this.state.user} upcomingClass={upcomingClass}/>\n                                ))\n                            }\n\n                            {!upcomingClasses[0]&&<h3 className='none'>None</h3>}\n\n                            \n                            \n                        </div>\n                    </>\n                    :\n                    <button className='loading'></button >\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './CreateClass.css'\n\nexport default class CreateClass extends Component {\n\n    state = {\n        name: null,\n        description: null,\n        date: null,\n        time: null, \n        coach: null, \n        success: false,\n        errorMessage: null\n    }\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/user/getuser?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(coach => this.setState({coach}))\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n         })\n    }\n\n    handleCreateClass = () => {\n        const { name, description, date, time, coach } = this.state\n        if ( name && description && date && time  ){\n        fetch(\"https://wod-with-faris.herokuapp.com/sessions/create\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: name, \n                    description: description,\n                    date: date,\n                    time: time,\n                    user_id: coach.id\n                })\n            }).then(resp => resp.json()).then(this.setState({success: true, errorMessage: null, name: null, description: null, date: null, time: null}))\n            .catch(errorMessage => this.setState({errorMessage}))\n        } else {\n            this.setState({errorMessage: \"Please fill all fields\"})\n        }\n    } \n\n    render() {\n        const { success, errorMessage } = this.state\n        return (\n            <div>\n                <h1 className='create-class-title'>Create Class</h1>\n                {success&&\n                        <h2 className='success'>Class Created!</h2>\n                }\n                {errorMessage&&\n                        <h2 className='error-message'>{errorMessage}</h2>\n                }\n                <div className='create-class-div'>\n                    <h3 className='create-class-h3'>Name</h3>\n                    <input name='name' onChange={this.handleChange} className='create-class-input' type='text'/>\n                    <h3 className='create-class-h3' >Description</h3>\n                    <textarea name='description' onChange={this.handleChange} className='create-class-textarea'/>\n                    <h3 className='create-class-h3'>Date</h3>\n                    <input name='date' onChange={this.handleChange} className='create-class-input' type='date'/>\n                    <h3 className='create-class-h3'>Time</h3>\n                    <input name='time' onChange={this.handleChange} className='create-class-input' type='time'/>\n                    <button className='create-class-btn' onClick={this.handleCreateClass}>Create Class</button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Clients.css'\nimport PopPop from 'react-poppop';\n\nexport default class Client extends Component {\n\n    state = {\n        show: false, \n        editMode: false,\n        email: this.props.client.email,\n        tokens: this.props.client.tokens\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n    \n    toggleEditMode = () => {\n        this.setState({editMode: true})\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    submitEdit = id => {\n        fetch(`https://wod-with-faris.herokuapp.com/user/update/${id}`, {\n                method: \"PATCH\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: this.state.email,\n                    tokens: this.state.tokens\n                })\n        }).then(this.setState({editMode: false}))\n    }\n\n    render() {\n        const { client } = this.props\n        const { show, email, tokens, editMode } = this.state\n        return (\n            <div>\n                <h3 onClick={this.toggleShow} className='client'>{client.first_name + \" \" + client.last_name}</h3>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                            <div className='client-modal-container'>\n                                <h3 className='client-txt'>{client.first_name + \" \" + client.last_name}</h3>\n                                <p className='client-txt'>Email: </p> {!editMode? <p className='client-txt'>{email}</p> : <input onChange={this.handleChange} className='edit-input' value={email} name='email'/>}\n                                <p className='client-txt'>Tokens: </p> {!editMode? <p className='client-txt'>{tokens}</p> : <input onChange={this.handleChange} className='edit-input' type='number' value={tokens} name='tokens'/>}\n                                {!editMode? <button onClick={this.toggleEditMode} className='edit-btn'>Edit</button> : <button onClick={() => this.submitEdit(client.id)} className='edit-btn'>Submit</button>}\n                            </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Clients.css'\nimport Client from './Client';\n\nexport default class Clients extends Component {\n\n    state = {\n        search: null,\n        allClients: []\n    }\n\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/users/index`)\n        .then(resp => resp.json())\n        .then(allClients => this.setState({allClients}))\n    }\n\n    handleSearch = e => {\n        const search = e.target.value\n        if (search.length > 0) {\n            this.setState({search})\n        } else if (search.length === 0){\n            this.setState({search: null})\n        }\n \n    }\n\n    fuzzyMatch = (compareTerm ,term) => {\n        if (term.length === 0)\n            return 1;\n        let string = compareTerm.toLowerCase();\n        let compare = term.toLowerCase();\n        let matches = 0;\n        for (let i = 0; i < compare.length; i++) {\n            string.indexOf(compare[i]) > -1 ? matches += 1 : matches -=1;\n        }\n        return matches / compareTerm.length;\n    }\n\n    sortSearch = (clients) => {\n        const results = clients.map(client => [client, this.fuzzyMatch(client.first_name + \" \" + client.last_name, this.state.search)]);\n        results.sort((a, b) => b[1] - a[1]);\n        const filteredResults = results.filter(result => result[1] > 0)\n        return filteredResults\n    }\n\n    render() {\n        const { allClients, search } = this.state\n        const alphebetizedClients = allClients.sort((a,b) =>  a.last_name.localeCompare(b.last_name))\n        console.log(alphebetizedClients)\n        const filteredClients = search? this.sortSearch(allClients) : alphebetizedClients\n        return (\n            <div>\n                <h1>Clients</h1>\n                <input className='search-bar' onChange={this.handleSearch} name='search' type='text'/>\n                <div className='clients-container'>\n                    {allClients&& allClients[0]&&\n\n                    filteredClients.map(client => (\n                        <Client client={search? client[0] : client}/>\n                    ))\n\n                    }\n                    {allClients&& !allClients[0]&&\n                        <h2>None</h2>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport { Route } from 'react-router-dom'\nimport Home from './Components/Home';\nimport PrivateRoute from './PrivateRoute';\nimport Login from './Components/Login';\nimport SignUp from './Components/SignUp';\nimport app from './base'\nimport NavBar from './Components/NavBar';\nimport Classes from './Components/Classes';\nimport Profile from './Components/Profile';\nimport CreateClass from './Components/CreateClass';\nimport Clients from './Components/Clients';\nimport * as firebase from 'firebase/app'\n\n\nclass App extends React.Component {\n\n  state = {\n    currentUser: null, \n    userData: null\n  }\n\n  \n  handleSetUser = user => {\n    this.setState({currentUser: user})\n    fetch(`https://wod-with-faris.herokuapp.com/user/getuser?email=${user.email}`)\n        .then(resp => resp.json())\n        .then(userData => this.setState({userData}))\n  }\n\n  handleLogout = () => {\n    app.auth().signOut()\n    this.setState({currentUser: null})\n  }\n\n  render() { \n    const  { currentUser, userData } = this.state\n    return (\n      <>\n        <NavBar userData={userData} logout={this.handleLogout} currentUser={currentUser}/>\n        <PrivateRoute exact path='/classes' component={Classes}/>\n        <PrivateRoute exact path='/profile' component={Profile}/>\n        <PrivateRoute exact path='/createclass' component={CreateClass}/>\n        <PrivateRoute exact path='/clients' component={Clients}/>\n        <Route exact path='/'>\n          <Home setUser={this.handleSetUser}/>\n        </Route>\n        <Route exact path='/login'>\n          <Login setUser={this.handleSetUser}/>\n        </Route>\n        <Route exact path='/signup' component={SignUp}/>\n      </>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { AuthProvider } from './Auth'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <Router>\n        <App />\n      </Router>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}