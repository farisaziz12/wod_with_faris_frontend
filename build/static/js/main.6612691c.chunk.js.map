{"version":3,"sources":["base.js","Components/Home.js","Auth.js","PrivateRoute.js","Components/Login.js","Components/SignUp.js","Components/NavBar.js","Components/DatePick.js","Components/ClassModal.js","Components/Classes.js","Components/ClassCard.js","Components/CoachClassCard.js","Components/Profile.js","Components/CreateClass.js","Components/Client.js","Components/Clients.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_SENDER_ID","IG","require","Home","state","currentUser","props","instaPosts","auth","onAuthStateChanged","user","setUser","setState","profile","then","console","log","this","SlicedPosts","slice","className","map","post","id","src","node","display_url","Component","AuthContext","React","createContext","AuthProvider","children","useState","setCurrentUser","useEffect","Provider","value","PrivateRoute","RouteComponent","component","rest","useContext","render","routeProps","to","Login","email","password","handlelogin","a","signInWithEmailAndPassword","alert","handleChange","event","target","name","onChange","type","placeholder","onClick","withRouter","SignUp","firstName","lastName","passwordConfirm","passwordMatchError","handleSignUp","createUserWithEmailAndPassword","fetch","method","headers","body","JSON","stringify","first_name","last_name","tokens","coach","resp","json","handleSetUser","NavBar","page","handleActiveBtnChange","e","window","location","pathname","userData","logout","DatePick","date","ClassModal","show","clients","error","toggleShow","handleBookandUnBookClass","isBooked","find","client","undefined","length","user_id","session_id","ClientsWithNewBooking","deductToken","deletedBooking","filter","addToken","oneClass","now","Date","isInPast","time","class","position","open","closeBtn","closeOnEsc","onClose","closeOnOverlay","style","width","toFixed","description","today","dd","getDate","mm","getMonth","todaydate","getFullYear","Classes","classes","chosenClass","isLoading","handleDateChange","handlePickClass","pickedClass","filteredClasses","ClassCard","handleCancelBooking","handleCancel","upcomingClass","CoachClassCard","handleDeleteClass","ids","client_ids","tokenError","Profile","upcomingClasses","booking","session","handleDelete","deletedClass","orderedByDateUpcomingClasses","sort","b","CreateClass","success","errorMessage","handleCreateClass","catch","Client","editMode","toggleEditMode","submitEdit","Clients","search","allClients","handleSearch","fuzzyMatch","compareTerm","term","string","toLowerCase","compare","matches","i","indexOf","sortSearch","results","result","alphebetizedClients","localeCompare","filteredClients","App","handleLogout","signOut","exact","path","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.6612691c.chunk.js","sourcesContent":["import * as firebase from 'firebase/app'\nimport 'firebase/auth'\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID\n});\n\nexport default app;","import React, { Component } from 'react'\nimport app from '../base'\nimport './Home.css'\nconst IG = require('instagrammer');\nconst instagramUsername = 'faziz_training';\n\nexport default class Home extends Component {\n\n    state = {\n        currentUser: this.props.currentUser,\n        instaPosts: []\n    }\n\n    componentDidMount(){\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n    \n        const setUser = user => {\n            this.setState({currentUser: user})\n            this.props.setUser(user)\n        }\n        \n        IG.profile(instagramUsername).then((instaPosts) => {\n            console.log(instaPosts)\n            this.setState({instaPosts})\n        });\n      \n    }\n\n    render() {\n        const { instaPosts } = this.state\n        const SlicedPosts = instaPosts[0]? instaPosts.slice(0, 8) : []\n        return (\n            <div className='posts-container'>\n                <h2 className='title'>Recent Posts</h2>\n                <div className='posts-container'>\n                    {SlicedPosts.map(post => (\n                            <img id='insta-post' className='insta-post' src={post.node.display_url} />\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport app from './base'\n\nexport const AuthContext  = React.createContext();\n\n\nexport function AuthProvider({ children }) {\n    const  [currentUser, setCurrentUser] = useState(null);\n\n    useEffect(() => {\n        app.auth().onAuthStateChanged(setCurrentUser);\n    }, []);\n\n    return (\n        <AuthContext.Provider\n        value={{currentUser}}\n        > \n            {children}\n        </AuthContext.Provider>\n    )\n}\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Auth'\n\nexport default function PrivateRoute({ component: RouteComponent, ...rest }) {\n    const {currentUser} = useContext(AuthContext)\n    return (\n        <Route\n        {...rest}\n        render={routeProps =>\n        !!currentUser ? (\n            <RouteComponent {...routeProps} currentUser={currentUser} />\n        ) : (\n            <Redirect to={'/login'}/>\n        )\n        }\n        />\n    )\n}\n","import React from 'react';\nimport { withRouter, Redirect } from 'react-router';\nimport app from '../base';\nimport './Login.css'\nimport { NavLink } from 'react-router-dom'\n\nclass Login extends React.Component {\n\n    state = {\n        currentUser: null, \n        email: null, \n        password: null\n    }\n\n    componentDidMount(){\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n\n        const setUser = user => {\n            this.setState({currentUser: user})\n            this.props.setUser(user)\n        }\n    }\n\n    handlelogin = async () => {\n            const { email, password } = this.state;\n            try {\n                await app\n                  .auth()\n                  .signInWithEmailAndPassword(email, password);\n            } catch (error) {\n                alert(error);\n            }\n    }\n\n    handleChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n\n    \n    render(){\n        const { currentUser } = this.state\n        if (currentUser) {\n            return <Redirect to='/'/>;\n        }\n        return (\n            <div>\n                <div className=\"form-structor\">\n                    <div className=\"signup\">\n                        <h2 className=\"form-title\" id=\"signup\"><span>or</span>Log In</h2>\n                        <div className=\"form-holder\">\n                        <input onChange={this.handleChange} name='email' type=\"email\" className=\"input\" placeholder=\"Email\" />\n                        <input onChange={this.handleChange} name='password' type=\"password\" className=\"input\" placeholder=\"Password\" />\n                        </div>\n                        <button onClick={this.handlelogin} className=\"submit-btn\">Log In</button>\n                    </div>\n                    <div className=\"login slide-up\">\n                        <div className=\"center\">\n                            <NavLink to='/signup'>\n                                <h2 className=\"form-title\" id=\"login\"><span>or</span>Sign Up</h2>\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(Login);\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom'\nimport app from '../base';\nimport './Login.css'\nimport { NavLink } from 'react-router-dom'\n\nclass SignUp extends React.Component {\n\n    state = {\n        firstName: null,\n        lastName: null, \n        email: null,\n        password: null,\n        passwordConfirm: null,\n        currentUser: null,\n        passwordMatchError: \"\"\n    }\n\n\n    componentDidMount(){\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n\n        const setUser = user => {\n            this.setState({currentUser: user})\n        }\n    }\n\n    handleSignUp = async () => {\n        const { email, password, passwordConfirm } = this.state;\n        try {\n           if (password === passwordConfirm) { \n            await app\n            .auth()\n            .createUserWithEmailAndPassword(email, password);\n\n            this.setState({passwordMatchError: \"\"})\n\n            fetch(\"https://wod-with-faris.herokuapp.com/user/create\", {\n            method: \"POST\", \n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                first_name: this.state.firstName,\n                last_name: this.state.lastName,\n                tokens: 0,\n                coach: false\n            })\n            }).then(resp => resp.json()).then(resp => console.log(resp))\n\n           } else {\n               this.setState({passwordMatchError: \"Passwords do not match\"})\n           }\n\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    handleChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n\n    handleSetUser = user => {\n        this.setState({currentUser: user})\n    }\n\n\n\n    \n    render (){\n        const {currentUser} = this.state\n        console.log(currentUser)\n    \n        if (this.state.currentUser) {\n            return <Redirect to='/'/>;\n        }\n        return (\n            <div>\n                <div className=\"form-structor\">\n                    <div className=\"signup\">\n                        <h2 className=\"form-title\" id=\"signup\"><span>or</span>Sign up</h2>\n                        <div className=\"form-holder\">\n                            <form>\n                                <input onChange={this.handleChange} name='firstName' type=\"text\" className=\"input\" placeholder=\"First Name\" />\n                                <input onChange={this.handleChange} name='lastName' type=\"text\" className=\"input\" placeholder=\"Last Name\" />\n                                <input onChange={this.handleChange} name='email' type=\"email\" className=\"input\" placeholder=\"Email\" />\n                                <input onChange={this.handleChange} name='password' type=\"password\" className=\"input\" placeholder=\"Password\" />\n                                <input onChange={this.handleChange} name='passwordConfirm' type=\"password\" className=\"input\" placeholder=\"Confirm Password\" />\n                            </form>\n                        </div>\n                        <button onClick={this.handleSignUp} className=\"submit-btn\">Sign up</button>\n                    </div>\n                    <div className=\"login slide-up\">\n                        <div className=\"center\">\n                            <NavLink to='/login'>\n                                <h2 className=\"form-title\" id=\"login\"><span>or</span>Log in</h2>\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(SignUp)\n","import React, { Component } from 'react'\nimport app from '../base'\nimport { NavLink } from 'react-router-dom'\nimport './NavBar.css'\n\nexport default class NavBar extends Component {\n\n    state = {\n        page: null\n    }\n\n    componentDidMount() {\n        this.setState({page: window.location.pathname})\n    }\n\n    handleActiveBtnChange = (e) => {\n        if(e.target.name === '/profile' || e.target.name === '/classes'){\n            this.props.currentUser? this.setState({page: e.target.name}) : this.setState({page: '/login'}) \n        } else {\n            this.setState({page: e.target.name})\n        }\n    }\n\n    render() {\n        const { page } = this.state \n        const { currentUser, userData } = this.props\n        return (\n            <div className='nav-bar'>\n                <NavLink to='/'>\n                    <button onClick={this.handleActiveBtnChange} name='/' className={page === '/'? 'nav-btn active' : 'nav-btn'}>Home</button>\n                </NavLink>\n                {currentUser&& userData&& userData.coach&&\n                    <NavLink to='/createclass'>\n                        <button onClick={this.handleActiveBtnChange} name='/createclass' className={page === '/createclass'? 'nav-btn active' : 'nav-btn'}>Create Class</button>\n                    </NavLink>\n                }\n                {currentUser&& userData&& userData.coach&&\n                    <NavLink to='/clients'>\n                        <button onClick={this.handleActiveBtnChange} name='/clients' className={page === '/clients'? 'nav-btn active' : 'nav-btn'}>Clients</button>\n                    </NavLink>\n                }\n                {currentUser&& userData&& !userData.coach&&\n                <NavLink to='/classes'>\n                    <button onClick={this.handleActiveBtnChange} name='/classes' className={page === '/classes'? 'nav-btn active' : 'nav-btn'}>Book Class</button>\n                </NavLink>\n                }\n                {currentUser&&\n                <NavLink to='/profile'>\n                    <button onClick={this.handleActiveBtnChange} name='/profile' className={page === '/profile'? 'nav-btn active' : 'nav-btn'}>Profile</button>\n                </NavLink >\n                }\n                {currentUser?\n                <button className='nav-btn' onClick={this.props.logout}>Log Out</button> \n                :\n                <NavLink to='/login'>\n                    <button onClick={this.handleActiveBtnChange} name='/login' className={page === '/login'? 'nav-btn active' : 'nav-btn'}>Log In</button>\n                </NavLink>\n                }\n                <h3 className='logo-2'>WOD WITH FARIS</h3>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './Classes.css'\n\nexport default class DatePick extends Component {\n\n\n\n\n  render() {\n    return (\n      <div>\n        <input onChange={this.props.handleChange} value={this.props.date} className='date-picker' type='date' name='date'/>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react'\nimport PopPop from 'react-poppop';\nimport './Classes.css'\n\nexport default class ClassModal extends Component {\n    state = {\n        show: false, \n        clients: [], \n        error: null,\n      }\n\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/usersessions?class_id=${this.props.oneClass.id}`, {\n        }).then(resp => resp.json()).then(clients => this.setState({clients}))\n    }\n  \n  \n    toggleShow = show => {\n      this.setState({show: show, error: null});\n    }\n\n    handleBookandUnBookClass =  id => {\n        const isBooked = this.state.clients.find(client => client.user.id === this.props.user.id)\n        if (isBooked === undefined && this.props.user.tokens > 0 && this.state.clients.length < 8) {\n            console.log(\"booking\")\n            fetch(\"https://wod-with-faris.herokuapp.com/usersession/book\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.props.user.id,\n                    session_id: id\n                })\n            }).then(resp => resp.json()).then(ClientsWithNewBooking => this.setState({clients: ClientsWithNewBooking, error: null})).then(this.props.deductToken)\n            \n        } else if(isBooked && this.props.user.tokens >= 0) {\n            fetch(`https://wod-with-faris.herokuapp.com/usersession/unbook`, {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.props.user.id,\n                    session_id: id\n                })\n            }).then(resp => resp.json()).then(deletedBooking => this.setState({clients: this.state.clients.filter(client => client.user.id !== deletedBooking.user.id), error: null})).then(this.props.addToken)\n            \n        } else if (this.props.user.tokens <= 0){\n            this.setState({error: \"Sorry, you have run out of tokens\"})\n        } else if (this.state.client.length === 8) {\n            this.setState({error: \"Sorry, this class is fully booked\"})\n        }\n        \n\n    }\n\n    render() {\n        const {show, clients, error} = this.state;\n        const {oneClass} = this.props;\n        const isBooked = clients[0]&& clients.find(client => client.user.id === this.props.user.id)\n        const now = new Date()\n        const classDateAndTime = new Date(oneClass.date + \"T\" + oneClass.time)\n        const isInPast = classDateAndTime < now? true : false\n        return (\n            <div>\n                <button class=\"class-btn\" onClick={() => this.toggleShow(true)}>{oneClass.time + \" \" + oneClass.name}</button>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                <h1 className='workout-title'>{oneClass.time + \" \" + oneClass.name}</h1> <div className='attending-progress-bar'><div style={{width:`${((clients.length/8) * 100).toFixed(2)}px`}}className='inner-progress-bar'><span className='attending-txt'>{clients.length === 8? \"Fully Booked\" : clients.length + \" / 8\"}</span></div></div>\n                <h3 className='desc-txt'><strong>Coach: </strong>{oneClass.coach.first_name + \" \" + oneClass.coach.last_name}</h3>\n                <p className='desc-txt'>{oneClass.description}</p> \n                {!isInPast? <button onClick={() => this.handleBookandUnBookClass(this.props.oneClass.id)} class=\"book-btn\">{isBooked? \"Cancel\" : \"Book Class\"}</button> : <button class=\"past-btn\">Already Passed</button>}\n                {error&&\n                    <p className='error'>{this.state.error}</p>\n                }\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport DatePick from './DatePick'\nimport './Classes.css'\nimport ClassModal from './ClassModal'\n\nlet today = new Date()\nlet dd = today.getDate(); \nlet mm = today.getMonth() + 1; \n\nlet yyyy = today.getFullYear(); \nif (dd < 10) { \n    dd = '0' + dd; \n} \nif (mm < 10) { \n    mm = '0' + mm; \n} \nlet todaydate = yyyy + '-' + mm + '-' + dd; \n\nexport default class Classes extends Component {\n\n    state = {\n        classes: [],\n        date: todaydate, \n        chosenClass: null,\n        user: null,\n        isLoading: true\n    }\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/sessions?date=${this.state.date}`)\n        .then(resp => resp.json())\n        .then(classes => this.setState({classes: classes, isLoading: false}))\n\n        fetch(`https://wod-with-faris.herokuapp.com/user/getuser?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(user => this.setState({user}))\n    }\n\n    handleDateChange = e => {\n        this.setState({\n           [e.target.name]: e.target.value,\n           isLoading: true\n        })\n        fetch(`https://wod-with-faris.herokuapp.com/sessions?date=${e.target.value}`)\n        .then(resp => resp.json())\n        .then(classes => this.setState({classes: classes, isLoading: false}))\n     }\n\n     handlePickClass = id => { \n        const pickedClass = this.state.classes.find( oneClass => oneClass.id === id)\n        this.setState({chosenClass: pickedClass})\n     }\n\n     deductToken = () => {\n        const { user } = this.state \n        this.setState({user: {\n            id: user.id,\n            coach: user.coach,\n            first_name: user.first_name,\n            last_name: user.last_name, \n            email: user.email,\n            tokens: user.tokens - 1\n        }})\n     }\n     addToken = () => {\n        const { user } = this.state \n        this.setState({user: {\n            id: user.id,\n            coach: user.coach,\n            first_name: user.first_name,\n            last_name: user.last_name, \n            email: user.email,\n            tokens: user.tokens + 1\n        }})\n     }\n\n\n    render() {\n        const  { date, classes, isLoading } = this.state\n        const filteredClasses = classes.filter(oneClass => oneClass.date === date)\n        return (\n            <div>\n                <h1>Book Class</h1>\n                <DatePick date={date} handleChange={this.handleDateChange}/>\n                <div className='container'>\n                    {isLoading&& <button className='loading'></button >}\n                    {classes[0]?\n                    filteredClasses.map(oneClass => (\n                        <ClassModal addToken={this.addToken} deductToken={this.deductToken} user={this.state.user} oneClass={oneClass} handlePickClass={this.handlePickClass}/>\n                    ))\n                    :\n                    !isLoading&& <h1>No Classes</h1>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Classes.css'\n\nexport default class ClassCard extends Component {\n\n\n    handleCancelBooking = id => {\n        fetch(`https://wod-with-faris.herokuapp.com/usersession/unbook`, {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.props.user.id,\n                    session_id: id\n                })\n            }).then(resp => resp.json()).then(deletedBooking => this.props.handleCancel(deletedBooking)).then(this.props.addToken)\n    }\n\n    render() {\n        const { upcomingClass } = this.props\n        return (\n            <div className='class-card'>\n                <h2 className='card-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h2>\n                <p className='card-date'>{upcomingClass.date}</p>\n                <button onClick={() => this.handleCancelBooking(upcomingClass.id)} className='book-btn'>Cancel</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Classes.css'\nimport PopPop from 'react-poppop';\n\nexport default class CoachClassCard extends Component {\n\n    state = {\n        show: false,\n        clients: []\n    }\n\n    handleDeleteClass = id => {\n        fetch(`https://wod-with-faris.herokuapp.com/sessions/deleted/${id}`, {\n                method: \"DELETE\"\n            }).then(resp => resp.json()).then(deletedBooking => this.props.handleCancel(deletedBooking))\n        const ids = this.state.clients.map(client => {return client.user.id})\n        fetch(\"https://wod-with-faris.herokuapp.com/sessions/returntokens\", {\n            method: \"POST\", \n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                client_ids: ids\n            })\n        })\n    }\n\n    toggleShow = show => {\n        this.setState({show: show, tokenError: null});\n    }\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/usersessions?class_id=${this.props.upcomingClass.id}`, {\n        }).then(resp => resp.json()).then(clients => this.setState({clients}))\n    }\n\n    render() {\n        const { upcomingClass } = this.props\n        const { show, clients } = this.state\n        return (\n            <div className='coach-class-card'>\n                <h2 className='card-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h2>\n                <p className='card-date'>{upcomingClass.date}</p>\n                <button onClick={() => this.handleDeleteClass(upcomingClass.id)} className='book-btn'>Delete Class</button>\n                <button onClick={() => this.toggleShow(true)} className='book-btn'>More Info</button>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                <h1 className='workout-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h1> <div className='attending-progress-bar'><div style={{width:`${((clients.length/8) * 100).toFixed(2)}px`}}className='inner-progress-bar'><span className='attending-txt'>{clients.length === 8? \"Fully Booked\" : clients.length + \" / 8\"}</span></div></div>\n                <h3 className='desc-txt'><strong>Coach: </strong>{upcomingClass.coach.first_name + \" \" + upcomingClass.coach.last_name}</h3>\n                <p className='desc-txt'>{upcomingClass.description}</p> \n                <div>\n                    <h3 className='desc-txt'>Signed  Up Clients</h3>\n                    {clients.map(client => (\n                        <p className='desc-txt'>- {client.user.first_name + \" \" + client.user.last_name}</p>\n                    ))}\n                    {!clients[0]&&\n                        <p className='desc-txt'>None</p>\n                    }\n\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Profile.css'\nimport ClassCard from './ClassCard'\nimport CoachClassCard from './CoachClassCard'\n\nexport default class Profile extends Component {\n\n    state = {\n        user: null, \n        upcomingClasses: []\n    }\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/user/getuser?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(user => this.setState({user}))\n\n        fetch(`https://wod-with-faris.herokuapp.com/usersession/upcomingclasses?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(upcomingClasses => this.setState({upcomingClasses}))\n    }\n\n    addToken = () => {\n        const { user } = this.state \n        this.setState({user: {\n            id: user.id,\n            coach: user.coach,\n            first_name: user.first_name,\n            last_name: user.last_name, \n            email: user.email,\n            tokens: user.tokens + 1\n        }})\n     }\n\n     handleCancel = deletedBooking => {\n        this.setState({upcomingClasses: this.state.upcomingClasses.filter(booking => booking.id !== deletedBooking.session.id)})\n     }\n     handleDelete = deletedClass => {\n        this.setState({upcomingClasses: this.state.upcomingClasses.filter(booking => booking.id !== deletedClass.id)})\n     }\n\n    render() {\n        const { user, upcomingClasses } = this.state\n        const orderedByDateUpcomingClasses = upcomingClasses[0]&& upcomingClasses.sort((a, b) => new Date(a.date) - new Date(b.date)).slice(0, 4)\n        return (\n            <div>\n                <div className='profile-container'>\n                    {user?\n                    <>\n                        <h1>{user.first_name + \" \" + user.last_name}</h1>\n                        {!user.coach&& <h2 className='tokens'>Tokens: {user.tokens}</h2>}\n                        <div className='upcoming-classes-container'>\n                            <h2 className='upcoming-classes-title'>Upcoming Classes: </h2>\n                            {!user.coach&& upcomingClasses[0]&&\n                                orderedByDateUpcomingClasses.map(upcomingClass => (\n                                    <ClassCard handleCancel={this.handleCancel} addToken={this.addToken} user={this.state.user} upcomingClass={upcomingClass}/>\n                                ))\n                            }\n                            {user.coach&& upcomingClasses[0]&&\n                                orderedByDateUpcomingClasses.map(upcomingClass => (\n                                    <CoachClassCard handleCancel={this.handleDelete} user={this.state.user} upcomingClass={upcomingClass}/>\n                                ))\n                            }\n\n                            {!upcomingClasses[0]&&<h3 className='none'>None</h3>}\n\n                            \n                            \n                        </div>\n                    </>\n                    :\n                    <button className='loading'></button >\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './CreateClass.css'\n\nexport default class CreateClass extends Component {\n\n    state = {\n        name: null,\n        description: null,\n        date: null,\n        time: null, \n        coach: null, \n        success: false,\n        errorMessage: null\n    }\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/user/getuser?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(coach => this.setState({coach}))\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n         })\n    }\n\n    handleCreateClass = () => {\n        const { name, description, date, time, coach } = this.state\n        if ( name && description && date && time  ){\n        fetch(\"https://wod-with-faris.herokuapp.com/sessions/create\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: name, \n                    description: description,\n                    date: date,\n                    time: time,\n                    user_id: coach.id\n                })\n            }).then(resp => resp.json()).then(this.setState({success: true, errorMessage: null, name: null, description: null, date: null, time: null}))\n            .catch(errorMessage => this.setState({errorMessage}))\n        } else {\n            this.setState({errorMessage: \"Please fill all fields\"})\n        }\n    } \n\n    render() {\n        const { success, errorMessage } = this.state\n        return (\n            <div>\n                <h1 className='create-class-title'>Create Class</h1>\n                {success&&\n                        <h2 className='success'>Class Created!</h2>\n                }\n                {errorMessage&&\n                        <h2 className='error-message'>{errorMessage}</h2>\n                }\n                <div className='create-class-div'>\n                    <h3 className='create-class-h3'>Name</h3>\n                    <input name='name' onChange={this.handleChange} className='create-class-input' type='text'/>\n                    <h3 className='create-class-h3' >Description</h3>\n                    <textarea name='description' onChange={this.handleChange} className='create-class-textarea'/>\n                    <h3 className='create-class-h3'>Date</h3>\n                    <input name='date' onChange={this.handleChange} className='create-class-input' type='date'/>\n                    <h3 className='create-class-h3'>Time</h3>\n                    <input name='time' onChange={this.handleChange} className='create-class-input' type='time'/>\n                    <button className='create-class-btn' onClick={this.handleCreateClass}>Create Class</button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Clients.css'\nimport PopPop from 'react-poppop';\n\nexport default class Client extends Component {\n\n    state = {\n        show: false, \n        editMode: false,\n        email: this.props.client.email,\n        tokens: this.props.client.tokens\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n    \n    toggleEditMode = () => {\n        this.setState({editMode: true})\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    submitEdit = id => {\n        fetch(`https://wod-with-faris.herokuapp.com/user/update/${id}`, {\n                method: \"PATCH\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: this.state.email,\n                    tokens: this.state.tokens\n                })\n        }).then(this.setState({editMode: false}))\n    }\n\n    render() {\n        const { client } = this.props\n        const { show, email, tokens, editMode } = this.state\n        return (\n            <div>\n                <h3 onClick={this.toggleShow} className='client'>{client.first_name + \" \" + client.last_name}</h3>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                            <div className='client-modal-container'>\n                                <h3 className='client-txt'>{client.first_name + \" \" + client.last_name}</h3>\n                                <p className='client-txt'>Email: </p> {!editMode? <p className='client-txt'>{email}</p> : <input onChange={this.handleChange} className='edit-input' value={email} name='email'/>}\n                                <p className='client-txt'>Tokens: </p> {!editMode? <p className='client-txt'>{tokens}</p> : <input onChange={this.handleChange} className='edit-input' type='number' value={tokens} name='tokens'/>}\n                                {!editMode? <button onClick={this.toggleEditMode} className='edit-btn'>Edit</button> : <button onClick={() => this.submitEdit(client.id)} className='edit-btn'>Submit</button>}\n                            </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Clients.css'\nimport Client from './Client';\n\nexport default class Clients extends Component {\n\n    state = {\n        search: null,\n        allClients: []\n    }\n\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris.herokuapp.com/users/index`)\n        .then(resp => resp.json())\n        .then(allClients => this.setState({allClients}))\n    }\n\n    handleSearch = e => {\n        const search = e.target.value\n        if (search.length > 0) {\n            this.setState({search})\n        } else if (search.length === 0){\n            this.setState({search: null})\n        }\n \n    }\n\n    fuzzyMatch = (compareTerm ,term) => {\n        if (term.length === 0)\n            return 1;\n        let string = compareTerm.toLowerCase();\n        let compare = term.toLowerCase();\n        let matches = 0;\n        for (let i = 0; i < compare.length; i++) {\n            string.indexOf(compare[i]) > -1 ? matches += 1 : matches -=1;\n        }\n        return matches / compareTerm.length;\n    }\n\n    sortSearch = (clients) => {\n        const results = clients.map(client => [client, this.fuzzyMatch(client.first_name + \" \" + client.last_name, this.state.search)]);\n        results.sort((a, b) => b[1] - a[1]);\n        const filteredResults = results.filter(result => result[1] > 0)\n        return filteredResults\n    }\n\n    render() {\n        const { allClients, search } = this.state\n        const alphebetizedClients = allClients.sort((a,b) =>  a.last_name.localeCompare(b.last_name))\n        console.log(alphebetizedClients)\n        const filteredClients = search? this.sortSearch(allClients) : alphebetizedClients\n        return (\n            <div>\n                <h1>Clients</h1>\n                <input className='search-bar' onChange={this.handleSearch} name='search' type='text'/>\n                <div className='clients-container'>\n                    {allClients&& allClients[0]&&\n\n                    filteredClients.map(client => (\n                        <Client client={search? client[0] : client}/>\n                    ))\n\n                    }\n                    {allClients&& !allClients[0]&&\n                        <h2>None</h2>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Route } from 'react-router-dom'\nimport Home from './Components/Home';\nimport PrivateRoute from './PrivateRoute';\nimport Login from './Components/Login';\nimport SignUp from './Components/SignUp';\nimport { AuthContext } from './Auth';\nimport app from './base'\nimport NavBar from './Components/NavBar';\nimport Classes from './Components/Classes';\nimport Profile from './Components/Profile';\nimport CreateClass from './Components/CreateClass';\nimport Clients from './Components/Clients';\n\n\nclass App extends React.Component {\n\n  state = {\n    currentUser: null, \n    userData: null\n  }\n\n\n\n  handleSetUser = user => {\n    this.setState({currentUser: user})\n    fetch(`https://wod-with-faris.herokuapp.com/user/getuser?email=${user.email}`)\n        .then(resp => resp.json())\n        .then(userData => this.setState({userData}))\n  }\n\n  handleLogout = () => {\n    app.auth().signOut()\n    this.setState({currentUser: null})\n}\n\n\n  render() { \n    const  { currentUser, userData } = this.state\n    return (\n      <>\n        <NavBar userData={userData} logout={this.handleLogout} currentUser={currentUser}/>\n        <PrivateRoute exact path='/classes' component={Classes}/>\n        <PrivateRoute exact path='/profile' component={Profile}/>\n        <PrivateRoute exact path='/createclass' component={CreateClass}/>\n        <PrivateRoute exact path='/clients' component={Clients}/>\n        <Route exact path='/'>\n          <Home setUser={this.handleSetUser}/>\n        </Route>\n        <Route exact path='/login'>\n          <Login setUser={this.handleSetUser}/>\n        </Route>\n        <Route exact path='/signup' component={SignUp}/>\n      </>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { AuthProvider } from './Auth'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <Router>\n        <App />\n      </Router>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}