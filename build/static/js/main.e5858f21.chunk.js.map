{"version":3,"sources":["Images/faris_img.JPG","Images/about_img_1.JPG","virtual_business_card/vbc.vcf","base.js","Components/Schedule.js","Components/Home.js","Auth.js","PrivateRoute.js","Components/Login.js","Components/SignUp.js","Components/StyledLink.js","Components/StyledDropdownLink.js","Components/NavBar.js","Components/ClassModal.js","Components/Classes.js","Components/ClassCard.js","Components/CoachClassCard.js","Components/AllUpcomingClasses.js","Components/CardSection.js","Components/PTSessionCheckoutForm.js","Components/PTSessionCard.js","Components/CoachPTSessionCard.js","Components/Profile.js","Components/CreateClass.js","Components/Client.js","Components/Clients.js","Components/CheckoutForm.js","Components/BuyPasses.js","Components/LeaderboardStat.js","Components/Leaderboard.js","Components/CreatePTSession.js","Components/About.js","App.js","serviceWorker.js","webpack:///./src/index.js?b635"],"names":["module","exports","app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_SENDER_ID","measurementId","REACT_APP_MEASUREMENT_ID","Schedule","this","props","show","toggleShow","position","open","closeBtn","closeOnEsc","onClose","closeOnOverlay","className","href","Component","IG","require","Home","state","currentUser","instaPosts","showSchedule","setState","user","ReactGA","event","category","action","first_name","last_name","initialize","pageview","auth","onAuthStateChanged","setUser","profile","then","catch","error","console","log","SlicedPosts","slice","Helmet","name","content","onClick","map","post","node","shortcode","alt","id","src","display_url","AuthContext","React","createContext","AuthProvider","children","useState","setCurrentUser","useEffect","Provider","value","PrivateRoute","RouteComponent","component","rest","useContext","render","routeProps","to","Login","email","password","passwordResetEmail","emailSent","emailError","handlelogin","a","signInWithEmailAndPassword","setHome","alert","handleChange","target","handlePasswordResetEmailChange","sendPasswordResetEmail","checkAccount","resp","fetch","json","onChange","type","placeholder","withRouter","SignUp","firstName","lastName","passwordConfirm","passwordMatchError","emptyFieldsError","handleSignUp","createUserWithEmailAndPassword","method","headers","body","JSON","stringify","tokens","coach","token","message","handleSetUser","emailVerified","sendEmailVerification","StyledLink","styled","Link","StyledDropdownLink","lastPage","localStorage","getItem","NavBar","setPage","handleNavChange","e","setItem","userData","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","Button","logout","ClassModal","oneClass","clients","bookingGif","removeSelectedClass","bookingStatus","setTimeout","undefined","handleBookandUnBookClass","isBooked","find","client","length","class_capacity","Accept","user_id","session_id","ClientsWithNewBooking","deductToken","bookedNotification","sound","time","dateFormat","date","deletedBooking","filter","addToken","now","Date","isInPast","style","width","toFixed","description","split","sentence","class","localizer","momentLocalizer","moment","Classes","classes","chosenClass","isLoading","screenWidth","window","innerWidth","showClassAttendNotification","attendanceResp","ShowLowTokenNotification","handleWindowSizeChange","handleDateChange","dateFetch","handlePickClass","pickedClass","formatedClasses","start","toDate","end","add","allDay","earliestClassOftheWeek","sort","b","format","getPrevWeekAttendances","attendanceAndTokensNotificationResponse","attendancesAndTokens","responses","sessions_prev_week","toggleShowClassAttendNotification","Math","floor","random","toggleShowLowTokenNotification","addEventListener","isMobile","aria-live","aria-atomic","minHeight","top","right","Toast","Header","Body","color","onSelectEvent","defaultView","views","scrollToTime","events","startAccessor","endAccessor","height","backgroundColor","ClassCard","handleCancelBooking","handleCancel","upcomingClass","CoachClassCard","askDeleteConfirm","editMode","classDescription","addClient","allClients","clientToAdd","handleClients","formatedClients","label","handleDeleteClass","ids","client_ids","tokenError","toggleDeleteConfirm","toggleEditMode","handleSubmit","toggleAddClient","handleAddClientOrCancel","handleSetClient","options","AllUpcomingClasses","upcomingClasses","timeOrderedClasses","CARD_ELEMENT_OPTIONS","iconStyle","hidePostalCode","base","iconColor","fontSize","fontFamily","fontSmoothing","invalid","CardSection","PTSessionCheckoutForm","paymentSuccess","paymentError","paymentPending","handleNameChange","preventDefault","stripe","elements","card","getElement","CardElement","createToken","result","upcomingPTSession","price","cardPayment","client_secret","clientSecret","confirmCardPayment","payment_method","billing_details","paymentIntent","status","handlePaid","pt_session","onSubmit","required","stripePromise","loadStripe","PTSessionCard","paid","textAlign","location","userEmail","CoachPTSessionCard","ptDescription","ptLocation","ptTime","ptDate","ptPrice","handleDeletePTSession","handleDeletedBooking","parseInt","Profile","setUpcomingClasses","upcomingPTSessions","setUpcomingPTSessions","showUpcomingClasses","setShowUpcomingClasses","handleUser","upcoming","handleUpcomingClasses","ptsessions","updatedUser","booking","session","deletedClass","ptSession","ptsession","toggleShowUpcomingClasses","timeOrderedPTSessions","orderedByDateUpcomingClasses","orderedByDateUpcomingPTsessions","SlicedUpcomingClasses","SlicedUpcomingPTSessions","display","marginLeft","marginRight","Badge","CreateClass","classCapacity","success","errorMessage","handleCreateClass","Client","submitEdit","Clients","search","handleSearch","fuzzyMatch","compareTerm","term","string","toLowerCase","compare","matches","i","indexOf","sortSearch","results","alphebetizedClients","localeCompare","filteredClients","CheckoutForm","quantity","user_email","resetQuantity","BuyPasses","purchaseAmountLimit","handleQuantityChange","amount","LeaderboardStat","stat","attendances_and_activities","calories_burned","highestNoOfAttendances","Leaderboard","stats","handleLeaderboardStats","leaderboardStats","setLeaderboardStats","setIsLoading","sortedLeaderboardStats","max","apply","CreatePTSession","setName","setLocation","setClient","setDescription","setDate","setTime","setErrorMessage","setSuccess","setClients","setPrice","handleSuccess","coach_email","client_email","About","Container","fluid","Image","aboutImg1","farisPic","thumbnail","vbc","pill","App","isHome","handleLogout","signOut","removeItem","exact","path","Boolean","hostname","match","Bugsnag","plugins","BugsnagPluginReact","ErrorBoundary","getPlugin","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yNAAAA,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,4aCa5BC,G,OAVHC,gBAAuB,CAC/BC,OAAQC,0CACRC,WAAYD,iCACZE,YAAaF,wCACbG,UAAWH,iBACXI,cAAeJ,eACfK,kBAAmBL,ocAAYM,6BAC/BC,cAAeP,ocAAYQ,4B,0BCNVC,G,8KACT,IAAD,EACsBC,KAAKC,MAA1BC,EADD,EACCA,KAAMC,EADP,EACOA,WACd,OACE,6BACE,kBAAC,IAAD,CACEC,SAAS,eACTC,KAAMH,EACNI,UAAU,EACVC,YAAY,EACZC,QAAS,kBAAML,GAAW,IAC1BM,gBAAgB,GAEhB,wBAAIC,UAAU,kBAAd,YACA,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,eAAd,8KAKA,2BACE,2CADF,mEAIA,2BACE,4CADF,uCAGA,2BACE,8CADF,kEAIA,2BACE,6CADF,wEAIA,2BACE,2CADF,sCAGA,2BACE,6CADF,yDAIA,2BACE,2CADF,uCAGA,2BACE,wCACQ,IACN,uBAAGC,KAAK,kCAAR,2BAEK,IAJP,yD,GA9CwBC,c,SCEhCC,EAAKC,EAAQ,K,IAQEC,E,4MACnBC,MAAQ,CACNC,YAAa,EAAKhB,MAAMgB,YACxBC,WAAY,GACZC,cAAc,G,EAuBhBhB,WAAa,SAACD,GACZ,EAAKkB,SAAS,CAAED,aAAcjB,IAC9B,EAAKD,MAAMoB,MACTC,IAAQC,MAAM,CACZC,SAAU,OACVC,OAAO,GAAD,OACJ,EAAKxB,MAAMoB,KAAKK,WAAa,IAAM,EAAKzB,MAAMoB,KAAKM,UAD/C,gC,kEAzBS,IAAD,OAXpBL,IAAQM,WAAWtC,kBACnBgC,IAAQO,SAAS,SAYf1C,EAAI2C,OAAOC,oBAAmB,SAAUV,GAClCA,GACFW,EAAQX,MAIZ,IAAMW,EAAU,SAACX,GACf,EAAKD,SAAS,CAAEH,YAAaI,IAC7B,EAAKpB,MAAM+B,QAAQX,IAGrBR,EAAGoB,QA3BmB,kBA4BnBC,MAAK,SAAChB,GACL,EAAKE,SAAS,CAAEF,kBAEjBiB,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,Q,+BAcxB,IAAD,OACClB,EAAelB,KAAKgB,MAApBE,WACFqB,EAAcrB,EAAW,GAAKA,EAAWsB,MAAM,EAAG,GAAK,GAC7D,OACE,oCACE,kBAACC,EAAA,EAAD,KACE,iDACA,0BAAMC,KAAK,cAAcC,QAAQ,6BACjC,0BACED,KAAK,WACLC,QAAQ,iLAGZ,4BACEC,QAAS,kBAAM,EAAKzC,YAAW,IAC/BO,UAAU,sBAFZ,uBAMA,kBAAC,EAAD,CAAUR,KAAMF,KAAKgB,MAAMG,aAAchB,WAAYH,KAAKG,aAC1D,yBAAKO,UAAU,mBACb,wBAAIA,UAAU,SAAd,eACe,IACb,uBACEA,UAAU,QACVC,KAAI,6CAFN,oBAOF,yBAAKD,UAAU,mBACZ6B,EAAYM,KAAI,SAACC,GAAD,OACf,uBAAGnC,KAAI,sCAAiCmC,EAAKC,KAAKC,UAA3C,MACL,yBACEC,IAAI,GACJC,GAAG,aACHxC,UAAU,aACVyC,IAAKL,EAAKC,KAAKK,yB,GA3ECxC,a,iBCXrByC,EAAeC,IAAMC,gBAG3B,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAAY,EACAC,mBAAS,MADT,mBAC/BzC,EAD+B,KAClB0C,EADkB,KAOvC,OAJAC,qBAAU,WACNzE,EAAI2C,OAAOC,mBAAmB4B,KAC/B,IAGC,kBAACN,EAAYQ,SAAb,CACAC,MAAO,CAAC7C,gBAEHwC,GCbE,SAASM,EAAT,GAA+D,IAA5BC,EAA2B,EAAtCC,UAA8BC,EAAQ,6BAClEjD,EAAekD,qBAAWd,GAA1BpC,YACP,OACI,kBAAC,IAAD,iBACIiD,EADJ,CAEAE,OAAQ,SAAAC,GAAU,OAChBpD,EACE,kBAAC+C,EAAD,iBAAoBK,EAApB,CAAgCpD,YAAaA,KAE7C,kBAAC,IAAD,CAAUqD,GAAI,e,0DCCpBC,E,4MAEFvD,MAAQ,CACJC,YAAa,KACbuD,MAAO,KACPC,SAAU,KACVvE,MAAM,EACNwE,mBAAoB,KACpBC,WAAW,EACXC,YAAY,G,EAkBhBC,Y,sBAAc,gCAAAC,EAAA,+DACsB,EAAK9D,MAAzBwD,EADF,EACEA,MAAOC,EADT,EACSA,SADT,kBAGItF,EACH2C,OACAiD,2BAA2BP,EAAOC,GALnC,OAMA,EAAKxE,MAAM+E,SAAQ,GANnB,gDAQFC,MAAM,EAAD,IARH,yD,EAYd9E,WAAa,SAAAD,GACT,EAAKkB,SAAS,CAAClB,KAAMA,K,EAGzBgF,aAAe,SAAA3D,GACX,EAAKH,SAAL,eAAgBG,EAAM4D,OAAOzC,KAAOnB,EAAM4D,OAAOrB,S,EAErDsB,+BAAiC,SAAA7D,GAC7B,EAAKH,SAAL,eAAgBG,EAAM4D,OAAOzC,KAAOnB,EAAM4D,OAAOrB,S,EAGrDuB,uBAAyB,SAAAb,GACrB,EAAKc,aAAad,GAAOtC,MAAK,SAAAqD,GACtBA,EACApG,EAAI2C,OAAOuD,uBAAuBb,GAAOtC,KAAK,EAAKd,SAAS,CAACuD,WAAW,EAAMC,YAAY,KAE1F,EAAKxD,SAAS,CAACwD,YAAY,Q,EAKvCU,aAAe,SAAAd,GACX,OAAOgB,MAAM,kEAAD,OAAmEhB,IAC9EtC,MAAK,SAAAqD,GAAI,OAAIA,EAAKE,W,kEAlDH,IAAD,OAjBnBnE,IAAQM,WAAWtC,kBACnBgC,IAAQO,SAAS,UAmBb1C,EAAI2C,OAAOC,oBAAmB,SAASV,GAC/BA,GACAW,EAAQX,MAIhB,IAAMW,EAAU,SAAAX,GACZ,EAAKD,SAAS,CAACH,YAAaI,IAC5B,EAAKpB,MAAM+B,QAAQX,M,+BA0ClB,IAAD,SACqErB,KAAKgB,MAAtEC,EADJ,EACIA,YAAaf,EADjB,EACiBA,KAAMwE,EADvB,EACuBA,mBAAoBC,EAD3C,EAC2CA,UAAWC,EADtD,EACsDA,WAC1D,OAAI3D,EACO,kBAAC,IAAD,CAAUqD,GAAG,MAGpB,6BACI,yBAAK5D,UAAU,iBACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,aAAawC,GAAG,UAAS,oCAAvC,UACA,yBAAKxC,UAAU,eACf,2BAAOgF,SAAU1F,KAAKkF,aAAcxC,KAAK,QAAQiD,KAAK,QAAQjF,UAAU,QAAQkF,YAAY,UAC5F,2BAAOF,SAAU1F,KAAKkF,aAAcxC,KAAK,WAAWiD,KAAK,WAAWjF,UAAU,QAAQkF,YAAY,cAElG,4BAAQhD,QAAS5C,KAAK6E,YAAanE,UAAU,cAA7C,UACA,wBAAIkC,QAAS5C,KAAKG,WAAYO,UAAU,mBAAkB,+CAC1D,kBAAC,IAAD,CAAQN,SAAS,eACjBC,KAAMH,EACNI,UAAU,EACVC,YAAY,EACZC,QAAS,kBAAM,EAAKL,YAAW,IAC/BM,gBAAgB,GACZ,yBAAKC,UAAU,mCACX,wBAAIA,UAAU,uBAAd,kBACCiE,GAAY,uBAAGjE,UAAU,sBAAb,eACZkE,GAAa,uBAAGlE,UAAU,oBAAb,wCACd,uBAAGA,UAAU,uBAAb,wDACA,2BAAOoD,MAAOY,EAAoBgB,SAAU1F,KAAKoF,+BAAgC1C,KAAK,qBAAqBhC,UAAU,wBAAwBiF,KAAK,UAClJ,4BAAQ/C,QAAS,kBAAM,EAAKyC,uBAAuBX,IAAqBhE,UAAU,uBAAlF,gCAKZ,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAS4D,GAAG,WACR,wBAAI5D,UAAU,aAAawC,GAAG,SAAQ,oCAAtC,oB,GArGZI,IAAM1C,WAgHXiF,cAAWtB,G,ICjHpBuB,E,4MAEF9E,MAAQ,CACJ+E,UAAW,KACXC,SAAU,KACVxB,MAAO,KACPC,SAAU,KACVwB,gBAAiB,KACjBhF,YAAa,KACbiF,mBAAoB,GACpBvB,WAAW,EACXwB,iBAAkB,M,EAkBtBC,a,sBAAe,sCAAAtB,EAAA,2DACuD,EAAK9D,MAA/DwD,EADG,EACHA,MAAOC,EADJ,EACIA,SAAUwB,EADd,EACcA,gBAAkBF,EADhC,EACgCA,UAAWC,EAD3C,EAC2CA,SAD3C,SAGJvB,IAAawB,GAA6B,OAAVzB,EAH5B,iCAIDrF,EACL2C,OACAuE,+BAA+B7B,EAAOC,GANhC,OAOP,EAAKrD,SAAS,CAAC8E,mBAAoB,KAAMC,iBAAkB,OAE3DX,MAAM,2DAA4D,CAClEc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBlC,MAAO,EAAKxD,MAAMwD,MAClB9C,WAAY,EAAKV,MAAM+E,UACvBpE,UAAW,EAAKX,MAAMgF,SACtBW,OAAQ,EACRC,OAAO,MAER1E,MAAK,SAAAqD,GAAI,OAAIA,EAAKE,UAAQvD,MAAK,SAAAqD,GAAI,OAAIlD,QAAQC,IAAIiD,MAEtDC,MAAM,2CAA4C,CAC1Cc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBG,MAAO,iCACPxF,KAAM,iCACNyF,QAAQ,GAAD,OAAK,EAAK9F,MAAM+E,UAAY,IAAM,EAAK/E,MAAMgF,SAA7C,mBAjCZ,wBAqCIvB,GAAawB,GAAoBzB,GAAUuB,GAAcC,EAGpE,EAAK5E,SAAS,CAAC8E,mBAAoB,yBAA0BC,iBAAkB,OAF5E,EAAK/E,SAAS,CAAC+E,iBAAkB,6BAA8BD,mBAAoB,OAtC/E,0DA4CPjB,MAAM,EAAD,IA5CE,0D,EAgDfC,aAAe,SAAA3D,GACX,EAAKH,SAAL,eAAgBG,EAAM4D,OAAOzC,KAAOnB,EAAM4D,OAAOrB,S,EAGrDiD,cAAgB,SAAA1F,GACZ,EAAKD,SAAS,CAACH,YAAaI,K,kEAnEZ,IAAD,OAnBnBC,IAAQM,WAAWtC,kBACnBgC,IAAQO,SAAS,WAqBb1C,EAAI2C,OAAOC,oBAAmB,SAASV,GAC/BA,GACAW,EAAQX,MAIhB,IAAMW,EAAU,SAAAX,GACZ,EAAKD,SAAS,CAACH,YAAaI,O,+BA+D1B,IAAD,EACkErB,KAAKgB,MAArEC,EADF,EACEA,YAAa0D,EADf,EACeA,UAAWuB,EAD1B,EAC0BA,mBAAoBC,EAD9C,EAC8CA,iBACnD,GAAIlF,EAAa,CACb,GAAIA,EAAY+F,eAAkBrC,EAK9B,OADA3E,KAAKC,MAAM+E,SAAQ,GACZ,kBAAC,IAAD,CAAUV,GAAG,MAJpBrD,EAAYgG,wBACZjH,KAAKoB,SAAS,CAACuD,WAAW,IAMlC,OACI,6BACI,yBAAKjE,UAAU,iBACX,yBAAKA,UAAU,UACVwF,GAAqB,uBAAGxF,UAAU,iBAAiBwF,GAAyBC,GAAmB,uBAAGzF,UAAU,iBAAiByF,GAC9H,wBAAIzF,UAAU,aAAawC,GAAG,UAAS,oCAAvC,WACA,yBAAKxC,UAAU,eACX,8BACI,2BAAOgF,SAAU1F,KAAKkF,aAAcxC,KAAK,YAAYiD,KAAK,OAAOjF,UAAU,QAAQkF,YAAY,eAC/F,2BAAOF,SAAU1F,KAAKkF,aAAcxC,KAAK,WAAWiD,KAAK,OAAOjF,UAAU,QAAQkF,YAAY,cAC9F,2BAAOF,SAAU1F,KAAKkF,aAAcxC,KAAK,QAAQiD,KAAK,QAAQjF,UAAU,QAAQkF,YAAY,UAC5F,2BAAOF,SAAU1F,KAAKkF,aAAcxC,KAAK,WAAWiD,KAAK,WAAWjF,UAAU,QAAQkF,YAAY,aAClG,2BAAOF,SAAU1F,KAAKkF,aAAcxC,KAAK,kBAAkBiD,KAAK,WAAWjF,UAAU,QAAQkF,YAAY,uBAGjH,4BAAQhD,QAAS5C,KAAKoG,aAAc1F,UAAU,cAA9C,YAEJ,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAS4D,GAAG,UACR,wBAAI5D,UAAU,aAAawC,GAAG,SAAQ,oCAAtC,mB,GAvHXI,IAAM1C,WAkIZiF,cAAWC,G,ySC3I1B,IAAMoB,EAAaC,YAAOC,IAAPD,CAAH,KAeD,WAAClH,GAAD,OAAW,kBAACiH,EAAejH,I,+OCf1C,IAAMoH,EAAqBF,YAAOC,IAAPD,CAAH,KAeT,WAAClH,GAAD,OAAW,kBAACoH,EAAuBpH,I,QCV5CqH,EAAWC,aAAaC,QAAQ,WAEvB,SAASC,EAAOxH,GAAO,MAEZyD,mBAAS,MAFG,mBAEvBgE,GAFuB,WAIpC9D,qBAAU,WACR8D,EAAQJ,GAAsB,OAC7B,IAEH,IAAMK,EAAkB,SAACC,GACvBF,EAAQE,EAAEzC,OAAOzC,MACK,MAAlBkF,EAAEzC,OAAOzC,MACXzC,EAAM+E,SAAQ,GACduC,aAAaM,QAAQ,UAAW,OAEhCN,aAAaM,QAAQ,UAAWD,EAAEzC,OAAOzC,MACzCzC,EAAM+E,SAAQ,IAEhB/E,EAAM6H,UACJxG,IAAQC,MAAM,CACZC,SAAU,OACVC,OAAO,GAAD,OACJxB,EAAM6H,SAASpG,WAAa,IAAMzB,EAAM6H,SAASnG,UAD7C,sBAEQiG,EAAEzC,OAAOzC,SAIrBzB,EAA0BhB,EAA1BgB,YAAa6G,EAAa7H,EAAb6H,SACrB,OACE,yBAAKpH,UAAU,WACb,kBAACqH,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,UAAUC,QAAQ,QACxD,kBAACJ,EAAA,EAAOK,MAAR,uBACA,kBAACL,EAAA,EAAOM,OAAR,CAAeC,gBAAc,0BAC7B,kBAACP,EAAA,EAAOQ,SAAR,CAAiBrF,GAAG,yBAClB,kBAACsF,EAAA,EAAD,CAAK9H,UAAU,WACb,kBAAC8H,EAAA,EAAIpB,KAAL,KACE,kBAAC,EAAD,CAAY1E,KAAK,IAAIE,QAAS+E,EAAiBrD,GAAG,KAAlD,SAIF,kBAACkE,EAAA,EAAIpB,KAAL,KACE,kBAAC,EAAD,CAAY1E,KAAK,SAASE,QAAS+E,EAAiBrD,GAAG,UAAvD,UAIDrD,GACC,kBAACuH,EAAA,EAAIpB,KAAL,KACE,kBAAC,EAAD,CACE1E,KAAK,WACLE,QAAS+E,EACTrD,GAAG,YAHL,YASHrD,GAAe6G,GAAYA,EAASlB,OACnC,oCACE,kBAAC4B,EAAA,EAAIpB,KAAL,KACE,kBAAC,EAAD,CACE1E,KAAK,WACLE,QAAS+E,EACTrD,GAAG,YAHL,YAQF,kBAACmE,EAAA,EAAD,CAAaC,MAAM,SAASxF,GAAG,2BAC7B,kBAACuF,EAAA,EAAYE,KAAb,KACE,kBAAC,EAAD,CACEjG,KAAK,eACLE,QAAS+E,EACTrD,GAAG,gBAHL,UAQF,kBAACmE,EAAA,EAAYE,KAAb,KACE,kBAAC,EAAD,CACEjG,KAAK,mBACLE,QAAS+E,EACTrD,GAAG,oBAHL,iBAWPrD,GAAe6G,IAAaA,EAASlB,OACpC,oCACE,kBAAC6B,EAAA,EAAD,CAAaC,MAAM,UAAUxF,GAAG,2BAC9B,kBAACuF,EAAA,EAAYE,KAAb,KACE,kBAAC,EAAD,CACEjG,KAAK,WACLE,QAAS+E,EACTrD,GAAG,YAHL,eAQF,kBAACmE,EAAA,EAAYE,KAAb,KACE,kBAAC,EAAD,CACEjG,KAAK,aACLE,QAAS+E,EACTrD,GAAG,cAHL,kBAYV,kBAACkE,EAAA,EAAD,KACGvH,EACC,kBAACuH,EAAA,EAAIpB,KAAL,KACE,kBAACwB,EAAA,EAAD,CAAQhG,QAAS3C,EAAM4I,OAAQV,QAAQ,aAAvC,YAKF,kBAACK,EAAA,EAAIpB,KAAL,KACE,kBAAC,EAAD,CAAY1E,KAAK,SAAS4B,GAAG,UAC3B,kBAACsE,EAAA,EAAD,CAAQT,QAAQ,UAAUvF,QAAS+E,GAAnC,gB,sBCjIGmB,I,kNACnB9H,MAAQ,CACNd,OAAM,EAAKD,MAAM8I,SACjBC,QAAS,GACT5G,MAAO,KACP6G,WAAY,M,EAYd9I,WAAa,SAACD,GACZ,EAAKkB,SAAS,CAAElB,KAAMA,EAAMkC,MAAO,OACnC,EAAKnC,MAAMiJ,uB,EAGbD,WAAa,SAACE,GACRA,GACF,EAAK/H,SAAS,CACZ6H,WACE,+DAEJG,YAAW,WACT,EAAKhI,SAAS,CAAE6H,WAAY,SAC3B,WACwBI,IAAlBF,IACT,EAAK/H,SAAS,CACZ6H,WACE,+DAEJG,YAAW,WACT,EAAKhI,SAAS,CAAE6H,WAAY,SAC3B,O,EAIPK,yBAA2B,SAACpG,GAC1B,IAAMqG,EAAW,EAAKvI,MAAMgI,QAAQQ,MAClC,SAACC,GAAD,OAAYA,EAAOpI,KAAK6B,KAAO,EAAKjD,MAAMoB,KAAK6B,WAGlCmG,IAAbE,GACA,EAAKtJ,MAAMoB,KAAKsF,OAAS,GACzB,EAAK3F,MAAMgI,QAAQU,OAAS,EAAKzJ,MAAM8I,SAASY,gBAEhDnE,MAAM,gEAAiE,CACrEc,OAAQ,OACRC,QAAS,CACPqD,OAAQ,mBACR,eAAgB,oBAElBpD,KAAMC,KAAKC,UAAU,CACnBmD,QAAS,EAAK5J,MAAMoB,KAAK6B,GACzB4G,WAAY5G,MAGbhB,MAAK,SAACqD,GAAD,OAAUA,EAAKE,UACpBvD,MAAK,SAAC6H,GAAD,OACJ,EAAK3I,SAAS,CAAE4H,QAASe,EAAuB3H,MAAO,UAExDF,KAAK,EAAKjC,MAAM+J,aAChB9H,KAAK,EAAK+G,WAAWM,IACrBrH,KAAK,EAAKjC,MAAMgK,oBAEnBzE,MAAM,2CAA4C,CAChDc,OAAQ,OACRC,QAAS,CACPqD,OAAQ,mBACR,eAAgB,oBAElBpD,KAAMC,KAAKC,UAAU,CACnBG,MAAO,iCACPxF,KAAM,iCACN6I,MAAO,eACPpD,QAAQ,GAAD,OACL,EAAK7G,MAAMoB,KAAKK,WAAa,IAAM,EAAKzB,MAAMoB,KAAKM,UAD9C,uBAEQ,EAAK1B,MAAM8I,SAASoB,KAF5B,4BAEoDC,KACzD,EAAKnK,MAAM8I,SAASsB,KACpB,kBAIGd,GAAY,EAAKtJ,MAAMoB,KAAKsF,QAAU,GAC/CnB,MAAM,kEAAmE,CACvEc,OAAQ,OACRC,QAAS,CACPqD,OAAQ,mBACR,eAAgB,oBAElBpD,KAAMC,KAAKC,UAAU,CACnBmD,QAAS,EAAK5J,MAAMoB,KAAK6B,GACzB4G,WAAY5G,MAGbhB,MAAK,SAACqD,GAAD,OAAUA,EAAKE,UACpBvD,MAAK,SAACoI,GAAD,OACJ,EAAKlJ,SAAS,CACZ4H,QAAS,EAAKhI,MAAMgI,QAAQuB,QAC1B,SAACd,GAAD,OAAYA,EAAOpI,KAAK6B,KAAOoH,EAAejJ,KAAK6B,MAErDd,MAAO,UAGVF,KAAK,EAAKjC,MAAMuK,UAChBtI,KAAK,EAAK+G,WAAWM,IAExB/D,MAAM,2CAA4C,CAChDc,OAAQ,OACRC,QAAS,CACPqD,OAAQ,mBACR,eAAgB,oBAElBpD,KAAMC,KAAKC,UAAU,CACnBG,MAAO,iCACPxF,KAAM,iCACNyF,QAAQ,GAAD,OACL,EAAK7G,MAAMoB,KAAKK,WAAa,IAAM,EAAKzB,MAAMoB,KAAKM,UAD9C,yBAGL,EAAK1B,MAAM8I,SAASoB,KAAO,IAAM,EAAKlK,MAAM8I,SAASrG,KAHhD,4BAIa0H,KAClB,EAAKnK,MAAM8I,SAASsB,KACpB,kBAIG,EAAKpK,MAAMoB,KAAKsF,QAAU,EACnC,EAAKvF,SAAS,CACZgB,MACE,uFAGJ,EAAKpB,MAAMgI,QAAQU,SAAW,EAAKzJ,MAAM8I,SAASY,gBAClD,EAAK3I,MAAMgI,QAAQU,OAAS,EAAKzJ,MAAM8I,SAASY,iBAEhD,EAAKvI,SAAS,CAAEgB,MAAO,uC,kEApIN,IAAD,OAClBoD,MAAM,sEAAD,OACmExF,KAAKC,MAAM8I,SAAS7F,IAC1F,IAEChB,MAAK,SAACqD,GAAD,OAAUA,EAAKE,UACpBvD,MAAK,SAAC8G,GAAD,OAAa,EAAK5H,SAAS,CAAE4H,iB,+BAkI7B,IAAD,SACsChJ,KAAKgB,MAA1Cd,EADD,EACCA,KAAM8I,EADP,EACOA,QAAS5G,EADhB,EACgBA,MAAO6G,EADvB,EACuBA,WACtBF,EAAa/I,KAAKC,MAAlB8I,SACFQ,KACJP,EAAQ,IACRhJ,KAAKC,MAAMoB,MACX2H,EAAQQ,MAAK,SAACC,GAAD,OAAYA,EAAOpI,KAAK6B,KAAO,EAAKjD,MAAMoB,KAAK6B,OAGxDuH,EAAM,IAAIC,KAEVC,EADmB,IAAID,KAAK3B,EAASsB,KAAO,IAAMtB,EAASoB,MAC7BM,EACpC,OACE,6BACE,kBAAC,IAAD,CACErK,SAAS,eACTC,KAAMH,EACNI,UAAU,EACVC,YAAY,EACZC,QAAS,kBAAM,EAAKL,YAAW,IAC/BM,gBAAgB,GAEhB,wBAAIC,UAAU,iBACXqI,EAASoB,KAAO,IAAMpB,EAASrG,MAC5B,IACN,yBAAKhC,UAAU,0BACb,yBACEkK,MAAO,CACLC,MAAM,GAAD,QAAO7B,EAAQU,OAASX,EAASY,eAAkB,IACxD,IACI,IACCX,EAAQU,OAASX,EAASY,eAAkB,KAC/CmB,QAAQ,GAJL,OAMPpK,UAAU,sBAEV,0BAAMA,UAAU,iBACbsI,EAAQU,SAAWX,EAASY,eACzB,eACAX,EAAQU,OAAR,aAAuBX,EAASY,mBAI1C,wBAAIjJ,UAAU,cACZ,2CACCqI,EAASnC,MAAMlF,WAAa,IAAMqH,EAASnC,MAAMjF,WAElDsH,EAKA,yBAAKvI,UAAU,WAAWuC,IAAI,GAAGE,IAAK8F,IAJtCF,EAASgC,YACNC,MAAM,MACNnI,KAAI,SAACoI,GAAD,OAAc,uBAAGvK,UAAU,YAAYuK,MAI9CN,EAUA,4BAAQO,MAAM,YAAd,kBATA,4BACEtI,QAAS,kBACP,EAAK0G,yBAAyB,EAAKrJ,MAAM8I,SAAS7F,KAEpDgI,MAAM,YAEL3B,EAAW,SAAW,cAK1BnH,GAAS,uBAAG1B,UAAU,SAASV,KAAKgB,MAAMoB,a,GAlNbxB,c,+CCSxC,IAAMuK,GAAYC,aAAgBC,MAEbC,G,4MACnBtK,MAAQ,CACNuK,QAAS,GACTC,YAAa,KACbnK,KAAM,KACNoK,WAAW,EACXC,YAAaC,OAAOC,WACpBC,6BAA6B,EAC7BC,eAAgB,GAChBC,0BAA0B,G,EA0B5BC,uBAAyB,WACvB,EAAK5K,SAAS,CAAEsK,YAAaC,OAAOC,c,EAGtCK,iBAAmB,SAACrE,GAAO,IAAD,EACxB,EAAKxG,UAAL,mBACGwG,EAAEzC,OAAOzC,KAAOkF,EAAEzC,OAAOrB,OAD5B,2BAEa,GAFb,IAIA,EAAKoI,UAAUtE,EAAEzC,OAAOrB,Q,EAG1BqI,gBAAkB,SAACvE,GACjB,IAAMwE,EAAc,EAAKpL,MAAMuK,QAAQ/B,MACrC,SAACT,GAAD,OAAcA,EAAS7F,KAAO0E,EAAE1E,MAElC,EAAK9B,SAAS,CAAEoK,YAAaY,K,EAG/BpC,YAAc,WAAO,IACX3I,EAAS,EAAKL,MAAdK,KACR,EAAKD,SAAS,CACZC,KAAM,CACJ6B,GAAI7B,EAAK6B,GACT0D,MAAOvF,EAAKuF,MACZlF,WAAYL,EAAKK,WACjBC,UAAWN,EAAKM,UAChB6C,MAAOnD,EAAKmD,MACZmC,OAAQtF,EAAKsF,OAAS,KAG1BrF,IAAQC,MAAM,CACZC,SAAU,OACVC,OAAO,GAAD,OACJ,EAAKT,MAAMK,KAAKK,WAAa,IAAM,EAAKV,MAAMK,KAAKM,UAD/C,sB,EAKV6I,SAAW,WAAO,IACRnJ,EAAS,EAAKL,MAAdK,KACR,EAAKD,SAAS,CACZC,KAAM,CACJ6B,GAAI7B,EAAK6B,GACT0D,MAAOvF,EAAKuF,MACZlF,WAAYL,EAAKK,WACjBC,UAAWN,EAAKM,UAChB6C,MAAOnD,EAAKmD,MACZmC,OAAQtF,EAAKsF,OAAS,KAG1BrF,IAAQC,MAAM,CACZC,SAAU,OACVC,OAAO,GAAD,OACJ,EAAKT,MAAMK,KAAKK,WAAa,IAAM,EAAKV,MAAMK,KAAKM,UAD/C,yB,EAMVuK,UAAY,SAAC7B,GACX7E,MAAM,8DAAD,OAA+D6E,IACjEnI,MAAK,SAACqD,GAAD,OAAUA,EAAKE,UACpBvD,MAAK,SAACqJ,GAAD,OACJ,EAAKnK,SAAS,CACZmK,QAASA,EACTE,WAAW,Q,EAKnBY,gBAAkB,SAACd,GACjB,OAAOA,EAAQ1I,KAAI,SAACkG,GAAD,MAAe,CAChCL,MAAOK,EAASrG,KAChB4J,MAAOjB,KACLtC,EAASsB,KAAO,IAAMtB,EAASoB,KAC/B,oBACAoC,SACFC,IAAKnB,KAAOtC,EAASsB,KAAO,IAAMtB,EAASoB,KAAM,oBAC9CsC,IAAI,EAAG,SACPF,SACHG,QAAQ,EACRxJ,GAAI6F,EAAS7F,Q,EAIjBgG,oBAAsB,WACpB,EAAK9H,SAAS,CAAEoK,YAAa,Q,EAG/BmB,uBAAyB,WACvB,OAAO,EAAKN,gBAAgB,EAAKrL,MAAMuK,SAASqB,MAAK,SAAC9H,EAAG+H,GAAJ,OACnDxB,KAAOvG,EAAE0H,KAAKM,OAAO,SAAWzB,KAAOwB,EAAEL,KAAKM,OAAO,SACjD,EACAzB,KAAOvG,EAAE0H,KAAKM,OAAO,SAAWzB,KAAOwB,EAAEL,KAAKM,OAAO,UACpD,EACD,M,EAIRC,uBAAyB,WACvBvH,MAAM,kFAAD,OAC+E,EAAKxE,MAAMK,KAAK6B,KAEjGhB,MAAK,SAACqD,GAAD,OAAUA,EAAKE,UACpBvD,MAAK,SAACqD,GAAD,OAAUyH,EAAwCzH,MAE1D,IAAMyH,EAA0C,SAACC,GAC/C5K,QAAQC,IAAI2K,GACZ,IAAMC,EAAY,CAChB,YACA,mBACA,UACA,uCACA,yBACA,oBACA,UAG8C,IAA5CD,EAAqBE,oBACvB,EAAK/L,SAAS,CAAE0K,eAAgB,qCAChC,EAAKsB,mCAAkC,IAC9BH,EAAqBE,mBAAqB,IACnD,EAAK/L,SAAS,CACZ0K,eAAe,YAAD,OACZmB,EAAqBE,mBADT,uBAGZD,EAAUG,KAAKC,MAAMD,KAAKE,SAAWL,EAAUxD,YAGnD,EAAK0D,mCAAkC,IAErCH,EAAqBtG,QAAU,GACjC,EAAK6G,mC,EAKXJ,kCAAoC,SAAClN,GACnC,EAAKkB,SAAS,CACZyK,4BAA6B3L,K,EAIjCsN,+BAAiC,WAC/B,EAAKpM,SAAS,CACZ2K,0BAA2B,EAAK/K,MAAM+K,4B,mEAtKxCJ,OAAO8B,iBAAiB,SAAUzN,KAAKgM,0B,0CAGpB,IAAD,OAtBpB1K,IAAQM,WAAWtC,kBACnBgC,IAAQO,SAAS,YAwBf2D,MAAM,yDACHtD,MAAK,SAACqD,GAAD,OAAUA,EAAKE,UACpBvD,MAAK,SAACqJ,GAAD,OACJ,EAAKnK,SAAS,CACZmK,QAASA,EACTE,WAAW,OAIjBjG,MAAM,mEAAD,OACgExF,KAAKC,MAAMgB,YAAYuD,QAEzFtC,MAAK,SAACqD,GAAD,OAAUA,EAAKE,UACpBvD,MAAK,SAACb,GAAD,OAAU,EAAKD,SAAS,CAAEC,c,+BAuJ1B,IAAD,SASHrB,KAAKgB,MAPPuK,EAFK,EAELA,QACAE,EAHK,EAGLA,UACAD,EAJK,EAILA,YACAE,EALK,EAKLA,YACAG,EANK,EAMLA,4BACAC,EAPK,EAOLA,eACAC,EARK,EAQLA,yBAEI2B,EAAWhC,GAAe,IAChC,OACE,6BACE,yBACEiC,YAAU,SACVC,cAAY,OACZhD,MAAO,CACLxK,SAAU,QACVyN,UAAW,UAGb,yBACEjD,MAAO,CACLxK,SAAU,QACV0N,IAAK,KACLC,MAAO,OAGT,kBAACC,GAAA,EAAD,CACE9N,KAAM2L,EACNrL,QAAS,kBAAM,EAAK4M,mCAAkC,KAEtD,kBAACY,GAAA,EAAMC,OAAP,KACE,yBACE9K,IAAI,2BACJzC,UAAU,eACVuC,IAAI,KAEN,4BAAQvC,UAAU,WAAlB,gBACA,4CAEF,kBAACsN,GAAA,EAAME,KAAP,KAAapC,IAEf,kBAACkC,GAAA,EAAD,CACE9N,KAAM6L,EACNvL,QAASR,KAAKwN,gCAEd,kBAACQ,GAAA,EAAMC,OAAP,KACE,yBACE9K,IAAI,2BACJzC,UAAU,eACVuC,IAAI,KAEN,4BAAQvC,UAAU,WAAlB,gBACA,4CAEF,kBAACsN,GAAA,EAAME,KAAP,6EASN,wBAAItD,MAAO,CAAEuD,MAAO,UAApB,cACA,yBAAKzN,UAAU,aACb,kBAAC,KAAD,CACE0N,cAAepO,KAAKmM,gBACpBkC,YAAaX,EAAW,MAAQ,OAChCY,MAAO,CAAC,QAAS,OAAQ,OACzBnD,UAAWA,GACXoD,aAAchD,EAAQ,IAAMvL,KAAK2M,yBAAyB,GAAGL,MAC7DkC,OAAQxO,KAAKqM,gBAAgBd,GAC7BkD,cAAc,QACdC,YAAY,MACZ9D,MAAO,CAAE+D,OAAQ,IAAKR,MAAO,QAASS,gBAAiB,WAExDnD,GAAa,4BAAQ/K,UAAU,YAC/B6K,EAAQ,GACLC,GACE,kBAAC,GAAD,CACEhB,SAAUxK,KAAKwK,SACfR,YAAahK,KAAKgK,YAClB3I,KAAMrB,KAAKgB,MAAMK,KACjB0H,SAAUyC,EACVW,gBAAiBnM,KAAKmM,gBACtBjD,oBAAqBlJ,KAAKkJ,oBAC1Be,mBAAoBjK,KAAK+M,0BAG5BtB,GAAa,wBAAIb,MAAO,CAAEuD,MAAO,UAApB,oB,GAlRSvN,aCZhBiO,G,4MAGjBC,oBAAsB,SAAA5L,GAClBsC,MAAM,kEAAmE,CACjEc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBmD,QAAS,EAAK5J,MAAMoB,KAAK6B,GACzB4G,WAAY5G,MAEjBhB,MAAK,SAAAqD,GAAI,OAAIA,EAAKE,UAAQvD,MAAK,SAAAoI,GAAc,OAAI,EAAKrK,MAAM8O,aAAazE,MAAiBpI,KAAK,EAAKjC,MAAMuK,UAE7GhF,MAAM,2CAA4C,CAC9Cc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBG,MAAO,iCACPxF,KAAM,iCACNyF,QAAQ,GAAD,OAAK,EAAK7G,MAAMoB,KAAKK,WAAa,IAAM,EAAKzB,MAAMoB,KAAKM,UAAxD,yBAAkF,EAAK1B,MAAM+O,cAAc7E,KAAO,IAAM,EAAKlK,MAAM+O,cAActM,KAAjJ,4BAAyK0H,KAAW,EAAKnK,MAAM+O,cAAc3E,KAAM,kB,uDAKhO,IAAD,OACG2E,EAAkBhP,KAAKC,MAAvB+O,cACR,OACI,yBAAKtO,UAAU,cACX,wBAAIA,UAAU,cAAcsO,EAAc7E,KAAO,IAAM6E,EAActM,MACrE,uBAAGhC,UAAU,aAAa0J,KAAW4E,EAAc3E,KAAM,aACzD,4BAAQzH,QAAS,kBAAM,EAAKkM,oBAAoBE,EAAc9L,KAAKxC,UAAU,YAA7E,e,GApCuBE,a,mBCElBqO,G,4MAEjBjO,MAAQ,CACJd,MAAM,EACN8I,QAAS,GACTkG,kBAAkB,EAClBC,UAAU,EACVC,iBAAkB,EAAKnP,MAAM+O,cAAcjE,YAC3CsE,WAAW,EACXC,WAAY,GACZC,YAAa,M,EASjBC,cAAgB,SAAAF,GACZ,IAAMG,EAAkBH,EAAW,IAAKA,EAAWzM,KAAI,SAAA4G,GACnD,MAAO,CAAEiG,MAAOjG,EAAO/H,WAAa,IAAM+H,EAAO9H,UAAW8H,OAAQ,CAAC/H,WAAY+H,EAAO/H,WAAYC,UAAW8H,EAAO9H,UAAWuB,GAAIuG,EAAOvG,QAEhJ,EAAK9B,SAAS,CAACkO,WAAYG,K,EAG/BE,kBAAoB,SAAAzM,GAChBsC,MAAM,iEAAD,OAAkEtC,GAAM,CACrEoD,OAAQ,WACTpE,MAAK,SAAAqD,GAAI,OAAIA,EAAKE,UAAQvD,MAAK,SAAAoI,GAAc,OAAI,EAAKrK,MAAM8O,aAAazE,MAChF,IAAMsF,EAAM,EAAK5O,MAAMgI,QAAQnG,KAAI,SAAA4G,GAAW,OAAOA,EAAOpI,KAAK6B,MACjEsC,MAAM,qEAAsE,CACxEc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBmJ,WAAYD,MAEjB1N,KAAK,EAAKd,SAAS,CAAC8N,kBAAkB,M,EAG7C/O,WAAa,SAAAD,GACT,EAAKkB,SAAS,CAAClB,KAAMA,EAAM4P,WAAY,Q,EAE3CC,oBAAsB,WAClB,EAAK3O,SAAS,CAAC8N,kBAAmB,EAAKlO,MAAMkO,oB,EAIjDc,eAAiB,WACb,EAAK5O,SAAS,CAAC+N,UAAW,EAAKnO,MAAMmO,Y,EAGzCjK,aAAe,SAAA0C,GACX,EAAKxG,SAAL,eAAgBwG,EAAEzC,OAAOzC,KAAOkF,EAAEzC,OAAOrB,S,EAG7CmM,aAAe,SAAA/M,GACXsC,MAAM,gEAAD,OAAiEtC,GAAM,CACpEoD,OAAQ,QACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBqE,YAAa,EAAK/J,MAAMoO,qBAEjClN,KAAK,EAAKd,SAAS,CAAC+N,UAAU,M,EAGrCe,gBAAkB,WACd,EAAK9O,SAAS,CAACiO,WAAY,EAAKrO,MAAMqO,YACtC7J,MAAM,4DAA4DtD,MAAK,SAAAqD,GAAI,OAAIA,EAAKE,UAAQvD,MAAK,SAAAoN,GAAU,OAAI,EAAKE,cAAcF,O,EAGtIa,wBAA0B,WACjB,EAAKnP,MAAMuO,YAEL,EAAKvO,MAAMuO,aAClB/J,MAAM,gEAAiE,CACnEc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBmD,QAAS,EAAK7I,MAAMuO,YAAYrM,GAChC4G,WAAY,EAAK7J,MAAM+O,cAAc9L,OAE1ChB,MAAK,SAAAqD,GAAI,OAAIA,EAAKE,UAAQvD,KAAK,EAAKd,SAAS,CAAC4H,QAAQ,GAAD,oBAAM,EAAKhI,MAAMgI,SAAjB,CAA0B,CAAC3H,KAAM,EAAKL,MAAMuO,eAAeA,YAAa,KAAMF,UAAW,QAZjJ,EAAKjO,SAAS,CAACiO,WAAW,K,EAgBlCe,gBAAkB,SAAAxI,GACd,EAAKxG,SAAS,CAACmO,YAAa3H,EAAE6B,U,kEAnFd,IAAD,OACfjE,MAAM,sEAAD,OAAuExF,KAAKC,MAAM+O,cAAc9L,IAAM,IACxGhB,MAAK,SAAAqD,GAAI,OAAIA,EAAKE,UAAQvD,MAAK,SAAA8G,GAAO,OAAI,EAAK5H,SAAS,CAAC4H,iB,+BAoFtD,IAAD,SAC4BhJ,KAAKC,MAA9B+O,EADH,EACGA,cAAepI,EADlB,EACkBA,MADlB,EAEuG5G,KAAKgB,MAAzGd,EAFH,EAEGA,KAAM8I,EAFT,EAESA,QAASkG,EAFlB,EAEkBA,iBAAkBC,EAFpC,EAEoCA,SAAUC,EAF9C,EAE8CA,iBAAkBC,EAFhE,EAEgEA,UAAWE,EAF3E,EAE2EA,YAAaD,EAFxF,EAEwFA,WAC7F,OACI,yBAAK5O,UAAU,oBACX,wBAAIA,UAAU,cAAcsO,EAAc7E,KAAO,IAAM6E,EAActM,MACrE,uBAAGhC,UAAU,aAAa0J,KAAW4E,EAAc3E,KAAM,aACxD6E,EAAkB,iCAAM,4BAAQtM,QAAS,kBAAM,EAAK+M,kBAAkBX,EAAc9L,KAAKxC,UAAU,YAA3E,kBAAN,IAAoH,4BAAQkC,QAAS5C,KAAK+P,oBAAqBrP,UAAU,YAArD,iBAApH,KAAmN,4BAAQkC,QAAS5C,KAAK+P,oBAAqBrP,UAAU,YAArD,gBACrOwO,OAAkB7F,EAAY,4BAAQzG,QAAS,kBAAM,EAAKzC,YAAW,IAAOO,UAAU,YAAxD,aAC/B,kBAAC,IAAD,CAAQN,SAAS,eACTC,KAAMH,EACNI,UAAU,EACVC,YAAY,EACZC,QAAS,kBAAM,EAAKL,YAAW,IAC/BM,gBAAgB,GACpB,wBAAIC,UAAU,iBAAiBsO,EAAc7E,KAAO,IAAM6E,EAActM,MAN5E,IAMuF,yBAAKhC,UAAU,0BAAyB,yBAAKkK,MAAO,CAACC,MAAM,GAAD,QAAM7B,EAAQU,OAAOsF,EAAcrF,eAAkB,IAAM,IAAK,IAAOX,EAAQU,OAAOsF,EAAcrF,eAAkB,KAAKmB,QAAQ,GAAnI,OAA2IpK,UAAU,sBAAqB,0BAAMA,UAAU,iBAAoC,IAAnBsI,EAAQU,OAAc,eAAiBV,EAAQU,OAAR,aAAuBsF,EAAcrF,mBACpa,wBAAIjJ,UAAU,YAAW,2CAAyBkG,EAAMlF,WAAa,IAAMkF,EAAMjF,WAC/EwN,EAKF,8BAAUzO,UAAU,YAAYoD,MAAOsL,EAAkB1J,SAAU1F,KAAKkF,aAAcxC,KAAK,qBAJ3F0M,EAAiBpE,MAAM,MAAMnI,KAAI,SAAAoI,GAAQ,OACrC,uBAAGvK,UAAU,YAAYuK,MAK7B,6BACEkE,EAA6F,4BAAQzO,UAAU,WAAWkC,QAAS,kBAAM,EAAKqN,aAAajB,EAAc9L,MAA5E,UAAnF,4BAAQxC,UAAU,WAAWkC,QAAS5C,KAAKgQ,gBAA3C,gBACR,wBAAItP,UAAU,YAAd,sBACCsI,EAAQnG,KAAI,SAAA4G,GAAM,OACf,uBAAG/I,UAAU,YAAb,KAA2B+I,EAAOpI,KAAKK,WAAa,IAAM+H,EAAOpI,KAAKM,eAExEqH,EAAQ,IACN,uBAAGtI,UAAU,YAAb,QAEN2O,EAA4F,oCAAE,kBAAC,KAAD,CAAQ3O,UAAU,iBAAiB2P,QAASf,EAAY5J,SAAU1F,KAAKoQ,kBAAzE,IAA4F,4BAAQ1P,UAAU,WAAWkC,QAAS5C,KAAKmQ,yBAA0BZ,EAAa,SAAW,WAA1Q,4BAAQ7O,UAAU,WAAWkC,QAAS5C,KAAKkQ,iBAA3C,qB,GApIWtP,aCDvB0P,I,8KACP,IAAD,EAC6DtQ,KAAKC,MAA/DC,EADH,EACGA,KAAMqQ,EADT,EACSA,gBAAiBxB,EAD1B,EAC0BA,aAAc1N,EADxC,EACwCA,KAAMlB,EAD9C,EAC8CA,WAC7CqQ,EAAqBD,EAAgB,GAAIA,EAAgB3D,MAAK,SAAC9H,EAAG+H,GAAJ,OAAU,IAAInC,KAAK5F,EAAEuF,KAAO,IAAMvF,EAAEqF,MAAQ,IAAIO,KAAKmC,EAAExC,KAAO,IAAMwC,EAAE1C,SAASoG,EACnJ,OACI,6BACI,kBAAC,IAAD,CAAQnQ,SAAS,eACTC,KAAMH,EACNI,UAAU,EACVC,YAAY,EACZC,QAAS,kBAAML,GAAW,IAC1BM,gBAAgB,GACxB,yBAAKC,UAAU,kCACX,wBAAIA,UAAU,UAAd,wBACC8P,EAAmB3N,KAAI,SAAAmM,GAAa,OACjC,oCACI,kBAAC,GAAD,CAAgBD,aAAcA,EAAc1N,KAAMA,EAAMuF,MAAOoI,EAAcpI,MAAOoI,cAAeA,EAAc9D,mB,GAhB7FtK,c,kBCF1C6P,GAAuB,CAC3BC,UAAW,QACXC,gBAAgB,EAChB/F,MAAO,CACLgG,KAAM,CACJC,UAAW,oBACX1C,MAAO,oBACP2C,SAAU,OACVC,WAAY,0BACZC,cAAe,cACf,gBAAiB,CACf7C,MAAO,YAGX8C,QAAS,CACP9C,MAAO,UACP,SAAU,CACRA,MAAO,cAUA+C,OAJf,WACE,OAAO,kBAAC,eAAD,CAAab,QAASI,MCrBVU,I,mNAEjBnQ,MAAQ,CACJ0B,KAAM,GACN0O,gBAAgB,EAChBC,aAAc,KACdC,gBAAgB,G,EAIpBC,iBAAmB,SAAAhQ,GACf,EAAKH,SAAS,CAACsB,KAAMnB,EAAM4D,OAAOrB,S,EAGtCmM,a,uCAAe,WAAM1O,GAAN,yBAAAuD,EAAA,yDACX,EAAK1D,SAAS,CAACkQ,gBAAgB,IAC/B/P,EAAMiQ,iBAFK,EAIkB,EAAKvR,MAA1BwR,EAJG,EAIHA,OAAQC,EAJL,EAIKA,SACXD,GAAWC,EALL,wDASLC,EAAOD,EAASE,WAAWC,gBATtB,SAUUJ,EAAOK,YAAYH,GAV7B,QAULI,EAVK,QAWA3P,MACPuJ,OAAO1G,MAAM8M,EAAO3P,MAAM0E,UAElBkL,EAAsB,EAAK/R,MAA3B+R,kBACRxM,MAAM,qEAAsE,CACxEc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBuL,MAAOD,EAAkBC,MACzBlH,YAAY,4BACZlE,MAAOkL,EAAOlL,MAAM3D,OAEzBhB,MAAK,SAAAqD,GAAI,OAAIA,EAAKE,UAAQvD,MAAK,SAAAqD,GAAI,OAAI,EAAK2M,YAAY3M,EAAK4M,mBA1BzD,4C,wDA+BfD,Y,uCAAc,WAAOE,GAAP,yBAAAtN,EAAA,+DACmB,EAAK7E,MAA1BwR,EADE,EACFA,OAAQC,EADN,EACMA,SACRhP,EAAS,EAAK1B,MAAd0B,KAFE,SAIW+O,EAAOY,mBAAmBD,EAAc,CACzDE,eAAgB,CACdX,KAAMD,EAASE,WAAWC,gBAC1BU,gBAAiB,CACf7P,KAAMA,MARJ,QAIJqP,EAJI,QAaC3P,MACP,EAAKhB,SAAS,CAACkQ,gBAAgB,EAAOD,aAAcU,EAAO3P,MAAM0E,UAE7B,cAAhCiL,EAAOS,cAAcC,SACrB,EAAKrR,SAAS,CAACkQ,gBAAgB,EAAOF,gBAAgB,EAAMC,aAAc,OAC1E,EAAKpR,MAAMyS,aAEHV,EAAsB,EAAK/R,MAA3B+R,kBACRxM,MAAM,2EAA4E,CAClFc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBiM,WAAYX,EAAkB9O,OAEnChB,KACCkH,YAAW,WACP,EAAKhI,SAAS,CAACgQ,gBAAgB,MAChC,MAGH5L,MAAM,2CAA4C,CAC9Cc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBG,MAAO,iCACPxF,KAAM,iCACN6I,MAAO,eACPpD,QAAQ,GAAD,OAAK,EAAK9F,MAAM0B,KAAhB,oBAAgC,EAAKzC,MAAM+R,kBAAkBC,MAA7D,2DAAqH7H,KAAW,EAAKnK,MAAM+R,kBAAkB3H,KAAM,YAAnK,eAAqL,EAAKpK,MAAM+R,kBAAkB7H,WA9C/N,2C,6GAqDJ,IACE6H,EAAsBhS,KAAKC,MAA3B+R,kBADH,EAE0DhS,KAAKgB,MAA5D0B,EAFH,EAEGA,KAAM0O,EAFT,EAESA,eAAgBC,EAFzB,EAEyBA,aAAcC,EAFvC,EAEuCA,eAC5C,OACI,6BACI,yBAAK5Q,UAAU,iBACV0Q,GAAgB,uBAAG1Q,UAAU,mBAAb,sBAChB2Q,GAAc,uBAAG3Q,UAAU,iBAAb,UAAqC2Q,GACvDD,EACG,wBAAI1Q,UAAU,mBAAd,kDAEJ,oCACI,yBAAKwK,MAAM,gBACP,wBAAIxK,UAAU,iBAAd,cAA0CsR,EAAkBC,QAEhE,0BAAMvR,UAAU,OAAOkS,SAAU5S,KAAKiQ,cAClC,2BAAOvP,UAAU,kBAAkBmS,UAAQ,EAAC/O,MAAOpB,EAAMgD,SAAU1F,KAAKuR,iBAAkB5L,KAAK,OAAOC,YAAY,mCAClH,kBAAC,GAAD,MACC0L,EAAgB,4BAAQ5Q,UAAU,mBAAlB,KAAiD,4BAAQA,UAAU,WAAlB,e,GApHvCE,cCG7CkS,I,OAAgBC,aAAW,+CAEZC,G,4MAEjBhS,MAAQ,CACJd,MAAM,EACN+S,KAAM,EAAKhT,MAAM+R,kBAAkBiB,M,EAGvC9S,WAAa,SAAAD,GACT,EAAKkB,SAAS,CAAClB,KAAMA,K,EAGzBwS,WAAa,WACT,EAAKtR,SAAS,CAAC6R,MAAM,K,uDAGf,IAAD,SAC+BjT,KAAKC,MAAjC+R,EADH,EACGA,kBAAmB3Q,EADtB,EACsBA,KADtB,EAEkBrB,KAAKgB,MAApBd,EAFH,EAEGA,KAAM+S,EAFT,EAESA,KACd,OACI,yBAAKvS,UAAU,cACX,wBAAIA,UAAU,cAAcsR,EAAkB7H,KAAO,IAAM6H,EAAkBtP,MAC7E,uBAAGhC,UAAU,aAAa0J,KAAW4H,EAAkB3H,KAAM,aAC7D,4BAAQzH,QAAS,kBAAM,EAAKzC,YAAW,IAAOO,UAAU,YAAauS,EAAkB,aAAZ,WAC3E,kBAAC,IAAD,CAAQ7S,SAAS,eACTC,KAAMH,EACNI,UAAU,EACVC,YAAY,EACZC,QAAS,kBAAM,EAAKL,YAAW,IAC/BM,gBAAgB,GACxB,yBAAKC,UAAU,oBACX,wBAAIA,UAAU,kBAAkBsR,EAAkB7H,KAAO,IAAM6H,EAAkBtP,MACjF,yBAAKhC,UAAU,kBAAiB,uBAAGkK,MAAO,CAACsI,UAAW,WAAtB,WAAyC,uBAAGtI,MAAOqI,EAAM,CAAC9E,MAAO,SAAW,CAACA,MAAO,QAAS8E,EAAM,OAAS,cAE5I,wBAAIvS,UAAU,YAAW,8CAA4BsR,EAAkBmB,UACtEnB,EAAkBjH,YAAYC,MAAM,MAAMnI,KAAI,SAAAoI,GAAQ,OACvD,uBAAGvK,UAAU,YAAYuK,OAGvBgI,GACE,kBAAC,YAAD,CAAUxB,OAAQqB,IAClB,kBAAC,oBAAD,MACK,gBAAGrB,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAX,OACD,kBAAC,GAAD,CAAuBgB,WAAY,EAAKA,WAAYU,UAAW/R,EAAKmD,MAAOwN,kBAAmBA,EAAmBP,OAAQA,EAAQC,SAAUA,e,GA1C5H9Q,aCNtByS,G,4MAEjBrS,MAAQ,CACJd,MAAM,EACNgP,kBAAkB,EAClBC,UAAU,EACVmE,cAAe,EAAKrT,MAAM+R,kBAAkBjH,YAC5CwI,WAAY,EAAKtT,MAAM+R,kBAAkBmB,SACzCK,OAAQ,EAAKvT,MAAM+R,kBAAkB7H,KACrCsJ,OAAQ,EAAKxT,MAAM+R,kBAAkB3H,KACrCqJ,QAAS,EAAKzT,MAAM+R,kBAAkBC,O,EAS1C0B,sBAAwB,SAAAzQ,GACpBsC,MAAM,kEAAD,OAAmEtC,GAAM,CACtEoD,OAAQ,WACTpE,MAAK,SAAAqD,GAAI,OAAIA,EAAKE,UAAQvD,MAAK,SAAAoI,GAAc,OAAI,EAAKsJ,qBAAqBtJ,O,EAGtFsJ,qBAAuB,SAAAtJ,GACnB,EAAKrK,MAAM8O,aAAazE,GACxB,EAAKlJ,SAAS,CAAC8N,kBAAkB,K,EAGrC/O,WAAa,SAAAD,GACT,EAAKkB,SAAS,CAAClB,KAAMA,K,EAEzB6P,oBAAsB,WAClB,EAAK3O,SAAS,CAAC8N,kBAAmB,EAAKlO,MAAMkO,oB,EAIjDc,eAAiB,WACb,EAAK5O,SAAS,CAAC+N,UAAW,EAAKnO,MAAMmO,Y,EAGzCjK,aAAe,SAAA0C,GACX,EAAKxG,SAAL,eAAgBwG,EAAEzC,OAAOzC,KAAOkF,EAAEzC,OAAOrB,S,EAG7CmM,aAAe,SAAA/M,GACXsC,MAAM,kEAAD,OAAmEtC,GAAM,CACtEoD,OAAQ,QACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBqE,YAAa,EAAK/J,MAAMsS,cACxBH,SAAU,EAAKnS,MAAMuS,WACrBpJ,KAAM,EAAKnJ,MAAMwS,OACjBnJ,KAAM,EAAKrJ,MAAMyS,OACjBxB,MAAO4B,SAAS,EAAK7S,MAAM0S,aAEpCxR,KAAK,EAAKd,SAAS,CAAC+N,UAAU,M,oGAG3B,IAAD,SACiCnP,KAAKC,MAAnC+R,EADH,EACGA,kBAAmBvI,EADtB,EACsBA,OADtB,EAE4FzJ,KAAKgB,MAA9Fd,EAFH,EAEGA,KAAMgP,EAFT,EAESA,iBAAkBC,EAF3B,EAE2BA,SAAUmE,EAFrC,EAEqCA,cAAeC,EAFpD,EAEoDA,WAAYC,EAFhE,EAEgEA,OAAQC,EAFxE,EAEwEA,OAAQC,EAFhF,EAEgFA,QACrF,OACI,yBAAKhT,UAAU,oBACX,wBAAIA,UAAU,cAAcsR,EAAkB7H,KAAO,IAAM6H,EAAkBtP,MAC7E,uBAAGhC,UAAU,aAAa0J,KAAW4H,EAAkB3H,KAAM,aAC5D6E,EAAkB,iCAAM,4BAAQtM,QAAS,kBAAM,EAAK+Q,sBAAsB3B,EAAkB9O,KAAKxC,UAAU,YAAnF,kBAAN,IAA4H,4BAAQkC,QAAS5C,KAAK+P,oBAAqBrP,UAAU,YAArD,iBAA5H,KAA2N,4BAAQkC,QAAS5C,KAAK+P,oBAAqBrP,UAAU,YAArD,gBAC7OwO,OAAkB7F,EAAY,4BAAQzG,QAAS,kBAAM,EAAKzC,YAAW,IAAOO,UAAU,YAAxD,aAC/B,kBAAC,IAAD,CAAQN,SAAS,eACTC,KAAMH,EACNI,UAAU,EACVC,YAAY,EACZC,QAAS,kBAAM,EAAKL,YAAW,IAC/BM,gBAAgB,GACpB,wBAAIC,UAAU,iBAAiBsR,EAAkB7H,KAAO,IAAM6H,EAAkBtP,MAChF,6BAAK,uBAAGkI,MAAO,CAACsI,UAAW,SAAU/E,MAAO,UAAvC,WAAyD,uBAAGvD,MAAOoH,EAAkBiB,KAAM,CAAC9E,MAAO,SAAW,CAACA,MAAO,QAAS6D,EAAkBiB,KAAM,OAAS,cACrK,wBAAIvS,UAAU,YAAd,WAAkC+I,EAAO/H,WAAa,IAAM+H,EAAO9H,WACnE,wBAAIjB,UAAU,YAAd,cAAsCyO,EAAoB,2BAAOxJ,KAAK,SAASjD,KAAK,UAAUoB,MAAO4P,EAAShO,SAAU1F,KAAKkF,eAA7EwO,GAChD,wBAAIhT,UAAU,YAAd,aAAqCyO,EAAuB,2BAAOxJ,KAAK,OAAOjD,KAAK,aAAaoB,MAAOyP,EAAY7N,SAAU1F,KAAKkF,eAApFqO,GAC/C,wBAAI7S,UAAU,YAAd,SAAiCyO,EAA2C,2BAAOxJ,KAAK,OAAOjD,KAAK,SAASoB,MAAO2P,EAAQ/N,SAAU1F,KAAKkF,eAAhGkF,KAAWqJ,EAAQ,aAC9D,wBAAI/S,UAAU,YAAd,SAAiCyO,EAAmB,2BAAOxJ,KAAK,OAAOjD,KAAK,SAASoB,MAAO0P,EAAQ9N,SAAU1F,KAAKkF,eAAxEsO,GACzCrE,EAKF,8BAAUzO,UAAU,YAAYoD,MAAOwP,EAAe5N,SAAU1F,KAAKkF,aAAcxC,KAAK,kBAJxF4Q,EAActI,MAAM,MAAMnI,KAAI,SAAAoI,GAAQ,OAClC,uBAAGvK,UAAU,YAAYuK,MAK7B,6BACEkE,EAA6F,4BAAQzO,UAAU,WAAWkC,QAAS,kBAAM,EAAKqN,aAAa+B,EAAkB9O,MAAhF,UAAnF,4BAAQxC,UAAU,WAAWkC,QAAS5C,KAAKgQ,gBAA3C,uB,GA7FgBpP,a,gBCWjC,SAASkT,GAAQ7T,GAAQ,IAAD,EACbyD,mBAAS,MADI,mBAC9BrC,EAD8B,KACxBW,EADwB,OAES0B,mBAAS,IAFlB,mBAE9B6M,EAF8B,KAEbwD,EAFa,OAGerQ,mBAAS,IAHxB,mBAG9BsQ,EAH8B,KAGVC,EAHU,OAIiBvQ,oBAAS,GAJ1B,mBAI9BwQ,EAJ8B,KAITC,EAJS,KAMrCvQ,qBAAU,WAVVtC,IAAQM,WAAWtC,kBACnBgC,IAAQO,SAAS,YAYf2D,MAAM,mEAAD,OACgEvF,EAAMgB,YAAYuD,QAEpFtC,MAAK,SAACqD,GAAD,OAAUA,EAAKE,UACpBvD,MAAK,SAACb,GAAD,OAAU+S,EAAW/S,MAE7BmE,MAAM,kFAAD,OAC+EvF,EAAMgB,YAAYuD,QAEnGtC,MAAK,SAACqD,GAAD,OAAUA,EAAKE,UACpBvD,MAAK,SAACmS,GAAD,OAAcC,EAAsBD,QAC3C,CAACpU,EAAMgB,YAAYuD,QAEtB,IAAM8P,EAAwB,SAACD,GAC7BN,EAAmBM,EAAS9I,SAC5B0I,EAAsBI,EAASE,aAG3BH,EAAa,SAAC/S,GAClBW,EAAQX,IAGJmJ,EAAW,WACf,IAAMgK,EAAc,CAClBtR,GAAI7B,EAAK6B,GACT0D,MAAOvF,EAAKuF,MACZlF,WAAYL,EAAKK,WACjBC,UAAWN,EAAKM,UAChB6C,MAAOnD,EAAKmD,MACZmC,OAAQtF,EAAKsF,OAAS,GAExB3E,EAAQwS,IAGJzF,EAAe,SAACzE,GACpByJ,EACExD,EAAgBhG,QACd,SAACkK,GAAD,OAAaA,EAAQvJ,MAAMhI,KAAOoH,EAAeoK,QAAQxR,QAIzDyM,EAAoB,SAACgF,GACzBZ,EACExD,EAAgBhG,QAAO,SAACkK,GAAD,OAAaA,EAAQvJ,MAAMhI,KAAOyR,EAAazR,QAGpEyQ,EAAwB,SAACgB,GAC7BV,EACED,EAAmBzJ,QACjB,SAACqK,GAAD,OAAeA,EAAUC,UAAU3R,KAAOyR,EAAazR,QAKvD4R,EAA4B,SAAC5U,GACjCiU,EAAuBjU,IAGnBsQ,EAAqBD,EAAgB,GACvCA,EAAgB,GAAGrF,MACjBqF,EAAgB3D,MACd,SAAC9H,EAAG+H,GAAJ,OACE,IAAInC,KAAK5F,EAAEoG,MAAMb,KAAO,IAAMvF,EAAEoG,MAAMf,MACtC,IAAIO,KAAKmC,EAAE3B,MAAMb,KAAO,IAAMwC,EAAE3B,MAAMf,SAE1CoG,EAAgB3D,MACd,SAAC9H,EAAG+H,GAAJ,OACE,IAAInC,KAAK5F,EAAEuF,KAAO,IAAMvF,EAAEqF,MAAQ,IAAIO,KAAKmC,EAAExC,KAAO,IAAMwC,EAAE1C,SAElEoG,EACEwE,EAAwBf,EAAmB,GAC7CA,EAAmB,GAAGa,UACpBb,EAAmBpH,MACjB,SAAC9H,EAAG+H,GAAJ,OACE,IAAInC,KAAK5F,EAAE+P,UAAUxK,KAAO,IAAMvF,EAAE+P,UAAU1K,MAC9C,IAAIO,KAAKmC,EAAEgI,UAAUxK,KAAO,IAAMwC,EAAEgI,UAAU1K,SAElD6J,EAAmBpH,MACjB,SAAC9H,EAAG+H,GAAJ,OACE,IAAInC,KAAK5F,EAAEuF,KAAO,IAAMvF,EAAEqF,MAAQ,IAAIO,KAAKmC,EAAExC,KAAO,IAAMwC,EAAE1C,SAElE6J,EACEgB,EACJxE,GACAA,EAAmB5D,MAAK,SAAC9H,EAAG+H,GAAJ,OAAU,IAAInC,KAAK5F,EAAEuF,MAAQ,IAAIK,KAAKmC,EAAExC,SAC5D4K,EACJF,GACAA,EAAsBnI,MAAK,SAAC9H,EAAG+H,GAAJ,OAAU,IAAInC,KAAK5F,EAAEuF,MAAQ,IAAIK,KAAKmC,EAAExC,SAC/D6K,EACJF,GAAgCA,EAA6BxS,MAAM,EAAG,GAClE2S,EACJF,GACAA,EAAgCzS,MAAM,EAAG,GAC3C,OACE,6BACE,yBAAK9B,UAAU,qBACZW,EACC,oCACE,wBAAIX,UAAU,WACXW,EAAKK,WAAa,IAAML,EAAKM,YAE9BN,EAAKuF,OACL,kBAACgC,EAAA,EAAD,CACEgC,MAAO,CACLwK,QAAS,QACTC,WAAY,OACZC,YAAa,QAEfnN,QAAS9G,EAAKsF,OAAS,EAAI,UAAY,UANzC,gBAQe,kBAAC4O,GAAA,EAAD,CAAOpN,QAAQ,SAAS9G,EAAKsF,QAC1C,0BAAMjG,UAAU,WAAhB,iBAGJ,yBAAKA,UAAU,8BACb,6BACE,wBAAIA,UAAU,0BAAd,uBACEW,EAAKuF,OACL2J,EAAgB,IAChB2E,EAAsBrS,KAAI,SAACmM,GAAD,OACxB,kBAAC,GAAD,CACED,aAAcA,EACdvE,SAAUA,EACVnJ,KAAMA,EACN2N,cAAeA,EAAc9D,WAGlC7J,EAAKuF,OAAS2J,EAAgB,IAC7B,4BACE3N,QAAS,kBAAMkS,GAA0B,IACzCpU,UAAU,4BAFZ,wBAODwT,GACC,kBAAC,GAAD,CACE/T,WAAY2U,EACZ/F,aAAcY,EACdtO,KAAMA,EACNnB,KAAMgU,EACN3D,gBAAiByE,IAGpB3T,EAAKuF,OACJ2J,EAAgB,IAChB2E,EAAsBrS,KAAI,SAACmM,GAAD,OACxB,kBAAC,GAAD,CACED,aAAcY,EACdtO,KAAMA,EACNuF,MAAOoI,EAAcpI,MACrBoI,cAAeA,EAAc9D,YAGjCqF,EAAgB,IAAM,wBAAI7P,UAAU,QAAd,SAE1B,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,0BAAd,wBACwB,MAEtBW,EAAKuF,OACLoN,EAAmB,IACnBmB,EAAyBtS,KAAI,SAACmP,GAAD,OAC3B,kBAAC,GAAD,CACE3Q,KAAMA,EACN2Q,kBAAmBA,OAGxB3Q,EAAKuF,OACJoN,EAAmB,IACnBmB,EAAyBtS,KAAI,SAACmP,GAAD,OAC3B,kBAAC,GAAD,CACEjD,aAAc4E,EACdtS,KAAMA,EACN2Q,kBAAmBA,EAAkB6C,UACrCpL,OAAQuI,EAAkB3Q,YAKhC2S,EAAmB,IAAM,wBAAItT,UAAU,QAAd,UAI/B,4BAAQA,UAAU,c,WC9MP8U,G,4MAEjBxU,MAAQ,CACJ0B,KAAM,KACNqI,YAAa,KACbV,KAAM,KACNF,KAAM,KACNsL,cAAe,EACf7O,MAAO,KACP8O,SAAS,EACTC,aAAc,M,EASlBzQ,aAAe,SAAA0C,GACX,EAAKxG,SAAL,eACKwG,EAAEzC,OAAOzC,KAAOkF,EAAEzC,OAAOrB,S,EAIlC8R,kBAAoB,WAAO,IAAD,EAC0C,EAAK5U,MAA7D0B,EADc,EACdA,KAAMqI,EADQ,EACRA,YAAaV,EADL,EACKA,KAAMF,EADX,EACWA,KAAMvD,EADjB,EACiBA,MAAO6O,EADxB,EACwBA,cACzC/S,GAAQqI,GAAeV,GAAQF,GAAQsL,EAC5CjQ,MAAM,+DAAgE,CAC9Dc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBhE,KAAMA,EACNqI,YAAaA,EACbV,KAAMA,EACNF,KAAMA,EACNR,eAAgBkK,SAAS4B,GACzB5L,QAASjD,EAAM1D,OAEpBhB,MAAK,SAAAqD,GAAI,OAAIA,EAAKE,UAAQvD,KAAK,EAAKd,SAAS,CAACsU,SAAS,EAAMC,aAAc,KAAMjT,KAAM,GAAIqI,YAAa,GAAIV,KAAM,GAAIF,KAAM,MAC9HhI,OAAM,SAAAwT,GAAY,OAAI,EAAKvU,SAAS,CAACuU,oBAEtC,EAAKvU,SAAS,CAACuU,aAAc,4B,kEAhCjB,IAAD,OACfnQ,MAAM,mEAAD,OAAoExF,KAAKC,MAAMgB,YAAYuD,QAC/FtC,MAAK,SAAAqD,GAAI,OAAIA,EAAKE,UAClBvD,MAAK,SAAA0E,GAAK,OAAI,EAAKxF,SAAS,CAACwF,e,+BAiCxB,IAAD,EAC2E5G,KAAKgB,MAA7E0U,EADH,EACGA,QAASC,EADZ,EACYA,aAAcjT,EAD1B,EAC0BA,KAAM2H,EADhC,EACgCA,KAAMU,EADtC,EACsCA,YAAaZ,EADnD,EACmDA,KAAMsL,EADzD,EACyDA,cAC9D,OACI,6BACI,wBAAI/U,UAAU,sBAAd,gBACCgV,GACO,wBAAIhV,UAAU,WAAd,kBAEPiV,GACO,wBAAIjV,UAAU,iBAAiBiV,GAEvC,yBAAKjV,UAAU,oBACX,wBAAIA,UAAU,mBAAd,QACA,2BAAOgC,KAAK,OAAOoB,MAAOpB,EAAMgD,SAAU1F,KAAKkF,aAAcxE,UAAU,qBAAqBiF,KAAK,SACjG,wBAAIjF,UAAU,mBAAd,eACA,8BAAUgC,KAAK,cAAcoB,MAAOiH,EAAarF,SAAU1F,KAAKkF,aAAcxE,UAAU,0BACxF,wBAAIA,UAAU,mBAAd,QACA,2BAAOgC,KAAK,OAAOoB,MAAOuG,EAAM3E,SAAU1F,KAAKkF,aAAcxE,UAAU,qBAAqBiF,KAAK,SACjG,wBAAIjF,UAAU,mBAAd,QACA,2BAAOgC,KAAK,OAAOoB,MAAOqG,EAAMzE,SAAU1F,KAAKkF,aAAcxE,UAAU,qBAAqBiF,KAAK,SACjG,wBAAIjF,UAAU,mBAAd,kBACA,2BAAOgC,KAAK,gBAAgBoB,MAAO2R,EAAe/P,SAAU1F,KAAKkF,aAAcxE,UAAU,qBAAqBiF,KAAK,WACnH,4BAAQjF,UAAU,mBAAmBkC,QAAS5C,KAAK4V,mBAAnD,sB,GAvEqBhV,aCCpBiV,I,mNAEjB7U,MAAQ,CACJd,MAAM,EACNiP,UAAU,EACV3K,MAAO,EAAKvE,MAAMwJ,OAAOjF,MACzBmC,OAAQ,EAAK1G,MAAMwJ,OAAO9C,Q,EAG9BxG,WAAa,SAAAD,GACT,EAAKkB,SAAS,CAAClB,KAAMA,K,EAGzB8P,eAAiB,WACb,EAAK5O,SAAS,CAAC+N,UAAU,K,EAG7BjK,aAAe,SAAA0C,GACX,EAAKxG,SAAL,eAAgBwG,EAAEzC,OAAOzC,KAAOkF,EAAEzC,OAAOrB,S,EAI7CgS,WAAa,SAAA5S,GACTsC,MAAM,4DAAD,OAA6DtC,GAAM,CAChEoD,OAAQ,QACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBlC,MAAO,EAAKxD,MAAMwD,MAClBmC,OAAQ,EAAK3F,MAAM2F,WAE5BzE,KAAK,EAAKd,SAAS,CAAC+N,UAAU,M,uDAG3B,IAAD,OACG1F,EAAWzJ,KAAKC,MAAhBwJ,OADH,EAEqCzJ,KAAKgB,MAAvCd,EAFH,EAEGA,KAAMsE,EAFT,EAESA,MAAOmC,EAFhB,EAEgBA,OAAQwI,EAFxB,EAEwBA,SAC7B,OACI,6BACI,wBAAIvM,QAAS5C,KAAKG,WAAaO,UAAWiG,GAAS,EAAG,uBAAyB,UAAW8C,EAAO/H,WAAa,IAAM+H,EAAO9H,WAC3H,kBAAC,IAAD,CAAQvB,SAAS,eACTC,KAAMH,EACNI,UAAU,EACVC,YAAY,EACZC,QAAS,kBAAM,EAAKL,YAAW,IAC/BM,gBAAgB,GACZ,yBAAKC,UAAU,0BACX,wBAAIA,UAAU,cAAc+I,EAAO/H,WAAa,IAAM+H,EAAO9H,WAC7D,uBAAGjB,UAAU,cAAb,WAFJ,IAE4CyO,EAAkD,2BAAOzJ,SAAU1F,KAAKkF,aAAcxE,UAAU,aAAaoD,MAAOU,EAAO9B,KAAK,UAAtH,uBAAGhC,UAAU,cAAc8D,GAC7E,uBAAG9D,UAAU,cAAb,kBAHJ,IAGmDyO,EAAmD,2BAAOzJ,SAAU1F,KAAKkF,aAAcxE,UAAU,aAAaiF,KAAK,SAAS7B,MAAO6C,EAAQjE,KAAK,WAAtI,uBAAGhC,UAAU,cAAciG,GAClFwI,EAAqF,4BAAQvM,QAAS,kBAAM,EAAKkT,WAAWrM,EAAOvG,KAAKxC,UAAU,YAA7D,UAA3E,4BAAQkC,QAAS5C,KAAKgQ,eAAgBtP,UAAU,YAAhD,e,GApDRE,cCAfmV,G,4MAEjB/U,MAAQ,CACJgV,OAAQ,KACR1G,WAAY,I,EAUhB2G,aAAe,SAAArO,GACX,IAAMoO,EAASpO,EAAEzC,OAAOrB,MACpBkS,EAAOtM,OAAS,EAChB,EAAKtI,SAAS,CAAC4U,WACU,IAAlBA,EAAOtM,QACd,EAAKtI,SAAS,CAAC4U,OAAQ,Q,EAK/BE,WAAa,SAACC,EAAaC,GACvB,GAAoB,IAAhBA,EAAK1M,OACL,OAAO,EAIX,IAHA,IAAI2M,EAASF,EAAYG,cACrBC,EAAUH,EAAKE,cACfE,EAAU,EACLC,EAAI,EAAGA,EAAIF,EAAQ7M,OAAQ+M,IAChCJ,EAAOK,QAAQH,EAAQE,KAAO,EAAID,GAAW,EAAIA,GAAU,EAE/D,OAAOA,EAAUL,EAAYzM,Q,EAGjCiN,WAAa,SAAC3N,GACV,IAAM4N,EAAU5N,EAAQnG,KAAI,SAAA4G,GAAM,MAAI,CAACA,EAAQ,EAAKyM,WAAWzM,EAAO/H,WAAa,IAAM+H,EAAO9H,UAAW,EAAKX,MAAMgV,YAGtH,OAFAY,EAAQhK,MAAK,SAAC9H,EAAG+H,GAAJ,OAAUA,EAAE,GAAK/H,EAAE,MACR8R,EAAQrM,QAAO,SAAAwH,GAAM,OAAIA,EAAO,GAAK,M,kEA/B7C,IAAD,OACfvM,MAAM,4DACLtD,MAAK,SAAAqD,GAAI,OAAIA,EAAKE,UAClBvD,MAAK,SAAAoN,GAAU,OAAI,EAAKlO,SAAS,CAACkO,oB,+BAgC7B,IAAD,EAC0BtP,KAAKgB,MAA5BsO,EADH,EACGA,WAAY0G,EADf,EACeA,OACda,EAAsBvH,EAAW1C,MAAK,SAAC9H,EAAE+H,GAAH,OAAU/H,EAAEnD,UAAUmV,cAAcjK,EAAElL,cAC5EoV,EAAkBf,EAAQhW,KAAK2W,WAAWrH,GAAcuH,EAC9D,OACI,6BACI,uCACA,2BAAOnW,UAAU,aAAagF,SAAU1F,KAAKiW,aAAcvT,KAAK,SAASiD,KAAK,SAC9E,yBAAKjF,UAAU,qBACV4O,GAAaA,EAAW,IAEzByH,EAAgBlU,KAAI,SAAA4G,GAAM,OACtB,kBAAC,GAAD,CAAQA,OAAQuM,EAAQvM,EAAO,GAAKA,OAIvC6F,IAAcA,EAAW,IACtB,0C,GA5Da1O,aCEhBoW,I,mNAEjBhW,MAAQ,CACJ0B,KAAM,GACN0O,gBAAgB,EAChBC,aAAc,KACdC,gBAAgB,G,EAIpBC,iBAAmB,SAAAhQ,GACf,EAAKH,SAAS,CAACsB,KAAMnB,EAAM4D,OAAOrB,S,EAGtCmM,a,uCAAe,WAAM1O,GAAN,yBAAAuD,EAAA,yDACX,EAAK1D,SAAS,CAACkQ,gBAAgB,IAC/B/P,EAAMiQ,iBAFK,EAIkB,EAAKvR,MAA1BwR,EAJG,EAIHA,OAAQC,EAJL,EAIKA,SACXD,GAAWC,EALL,wDASLC,EAAOD,EAASE,WAAWC,gBATtB,SAUUJ,EAAOK,YAAYH,GAV7B,QAULI,EAVK,QAWA3P,OACPuJ,OAAO1G,MAAM8M,EAAO3P,MAAM0E,SAC1B,EAAK1F,SAAS,CAACkQ,gBAAgB,MAEvB2F,EAAa,EAAKhX,MAAlBgX,SACRzR,MAAM,oEAAqE,CACvEc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBuQ,SAAUA,EACVlM,YAAY,GAAD,OAAKkM,EAAL,kBACXpQ,MAAOkL,EAAOlL,MAAM3D,OAEzBhB,MAAK,SAAAqD,GAAI,OAAIA,EAAKE,UAAQvD,MAAK,SAAAqD,GAAI,OAAI,EAAK2M,YAAY3M,EAAK4M,mBA3BzD,4C,wDAgCfD,Y,uCAAc,WAAOE,GAAP,6BAAAtN,EAAA,+DACmB,EAAK7E,MAA1BwR,EADE,EACFA,OAAQC,EADN,EACMA,SACRhP,EAAS,EAAK1B,MAAd0B,KAFE,SAIW+O,EAAOY,mBAAmBD,EAAc,CACzDE,eAAgB,CACdX,KAAMD,EAASE,WAAWC,gBAC1BU,gBAAiB,CACf7P,KAAMA,MARJ,QAIJqP,EAJI,QAaC3P,MACP,EAAKhB,SAAS,CAACkQ,gBAAgB,EAAOD,aAAcU,EAAO3P,MAAM0E,UAE7B,cAAhCiL,EAAOS,cAAcC,SACrB,EAAKrR,SAAS,CAACkQ,gBAAgB,EAAOF,gBAAgB,EAAMC,aAAc,OAD7B,EAGb,EAAKpR,MAA7BgX,EAHqC,EAGrCA,SAAU7D,EAH2B,EAG3BA,UAClB5N,MAAM,oEAAqE,CAC3Ec,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBuQ,SAAUA,EACVC,WAAY9D,MAEjBlR,KACCkH,YAAW,WACP,EAAKhI,SAAS,CAACgQ,gBAAgB,IAC/B,EAAKnR,MAAME,YAAW,GACtB,EAAKF,MAAMkX,kBACZ,MAGH3R,MAAM,2CAA4C,CAC9Cc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBG,MAAO,iCACPxF,KAAM,iCACN6I,MAAO,eACPpD,QAAQ,GAAD,OAAK,EAAK9F,MAAM0B,KAAhB,sBAAkC,EAAKzC,MAAMgX,SAA7C,uBAhDb,2C,6GAuDJ,IAAD,EACkCjX,KAAKC,MAApCC,EADH,EACGA,KAAMC,EADT,EACSA,WAAY8W,EADrB,EACqBA,SADrB,EAE0DjX,KAAKgB,MAA5D0B,EAFH,EAEGA,KAAM0O,EAFT,EAESA,eAAgBC,EAFzB,EAEyBA,aAAcC,EAFvC,EAEuCA,eAC5C,OACI,6BACI,kBAAC,IAAD,CAAQlR,SAAS,eACTC,KAAMH,EACNI,UAAU,EACVC,YAAY,EACZC,QAAS,kBAAML,GAAW,IAC1BM,gBAAgB,GACxB,yBAAKC,UAAU,iBACV0Q,GAAgB,uBAAG1Q,UAAU,mBAAb,sBAChB2Q,GAAc,uBAAG3Q,UAAU,iBAAb,UAAqC2Q,GACvDD,EACG,wBAAI1Q,UAAU,mBAAd,cAA4CV,KAAKC,MAAMgX,SAAvD,mDAEJ,oCACI,yBAAK/L,MAAM,gBACP,wBAAIxK,UAAU,iBAA8B,IAAbuW,EAAgB,gBAAiBA,EAAW,kBAC3E,wBAAIvW,UAAU,iBAAd,cAAqD,GAAXuW,IAE9C,0BAAMvW,UAAU,OAAOkS,SAAU5S,KAAKiQ,cAClC,2BAAOvP,UAAU,kBAAkBmS,UAAQ,EAAC/O,MAAOpB,EAAMgD,SAAU1F,KAAKuR,iBAAkB5L,KAAK,OAAOC,YAAY,mCAClH,kBAAC,GAAD,MACC0L,EAAgB,4BAAQ5Q,UAAU,mBAAlB,KAAiD,4BAAQA,UAAU,WAAlB,oB,GA9HhDE,cCEpCkS,GAAgBC,aAAW,8CAEZqE,G,4MAEjBpW,MAAQ,CACJiW,SAAU,EACVI,qBAAqB,EACrBnX,MAAM,G,EAGVoX,qBAAuB,SAAAC,GAAW,IACtBN,EAAa,EAAKjW,MAAlBiW,SACJA,EAAW,GAAKA,EAAW,EAC3B,EAAK7V,SAAS,CAAC6V,SAAUA,EAAWM,EAAQF,qBAAqB,IAC5C,IAAbJ,GAA6B,IAAXM,EAC1B,EAAKnW,SAAS,CAAC6V,SAAU,EAAGI,qBAAqB,IAC9B,IAAbJ,IAA8B,IAAZM,EACxB,EAAKnW,SAAS,CAAC6V,SAAUA,EAAWM,EAAQF,qBAAqB,IAC7C,IAAbJ,GACP,EAAK7V,SAAS,CAACiW,qBAAqB,IAExC/V,IAAQC,MAAM,CACVC,SAAU,OACVC,OAAO,GAAD,OAAK8V,EAAL,uC,EAIdJ,cAAgB,WACZ,EAAK/V,SAAS,CAAC6V,SAAU,K,EAG7B9W,WAAa,SAAAD,GACL,EAAKc,MAAMiW,SAAW,EACtB,EAAK7V,SAAS,CAAClB,KAAMA,IACU,IAAxB,EAAKc,MAAMiW,UAClBtL,OAAO1G,MAAM,gDAGjB3D,IAAQC,MAAM,CACVC,SAAU,OACVC,OAAO,6B,uDAIL,IAAD,SACqCzB,KAAKgB,MAAvCiW,EADH,EACGA,SAAUI,EADb,EACaA,oBAClB,OACI,6BACI,0CACA,yBAAK3W,UAAU,gBACX,6BACI,wBAAIA,UAAU,kBAAd,gBACC2W,GAAsB,uBAAG3W,UAAU,SAAb,+BACvB,wBAAIA,UAAU,YAAYuW,GAC1B,yBAAKvW,UAAU,qBACX,4BAAQA,UAAU,eAAekC,QAAS,kBAAM,EAAK0U,sBAAsB,KAA3E,KACA,4BAAQ5W,UAAU,eAAekC,QAAS,kBAAM,EAAK0U,qBAAqB,KAA1E,MAEJ,wBAAI5W,UAAU,SAAd,cAA6C,GAAXuW,GAClC,4BAAQrU,QAAS,kBAAM,EAAKzC,YAAW,IAAOO,UAAU,gBAAxD,YACA,kBAAC,YAAD,CAAU+Q,OAAQqB,IAClB,kBAAC,oBAAD,MACK,gBAAGrB,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAX,OACD,kBAAC,GAAD,CAAcyF,cAAe,EAAKA,cAAe/D,UAAW,EAAKnT,MAAMgB,YAAYuD,MAAOtE,KAAM,EAAKc,MAAMd,KAAMC,WAAY,EAAKA,WAAY8W,SAAUA,EAAUxF,OAAQA,EAAQC,SAAUA,e,GA7DjL9Q,a,OCPxB,SAAS4W,GAAgBvX,GAAQ,IAAD,EAEmBA,EAAMwX,KAA5DpW,EAFmC,EAEnCA,KAAMqW,EAF6B,EAE7BA,2BAA4BC,EAFC,EAEDA,gBAE1C,OACI,wBAAIjX,UAAU,mBAAmBkK,MAAO3K,EAAM2X,yBAA2BF,EAA4B,CAACvJ,MAAO,QAASS,gBAAiB,SAAW,MAC9I,4BAAKvN,GACL,4BAAKqW,GACL,gCAAMC,EAAN,UCPG,SAASE,KACtBjU,qBAAU,WACR4B,MACE,wEAECtD,MAAK,SAACqD,GAAD,OAAUA,EAAKE,UACpBvD,MAAK,SAAC4V,GAAD,OAAWC,EAAuBD,QACzC,IAPiC,MASYpU,mBAAS,IATrB,mBAS7BsU,EAT6B,KASXC,EATW,OAUFvU,oBAAS,GAVP,mBAU7B+H,EAV6B,KAUlByM,EAVkB,KAY9BH,EAAyB,SAACC,GAC9BC,EAAoBD,GACpBE,GAAa,IAGTC,EACJH,EAAiB,IACjBA,EAAiBpL,MACf,SAAC9H,EAAG+H,GAAJ,OAAUA,EAAE6K,2BAA6B5S,EAAE4S,8BAGzCA,EACJM,EAAiB,IACjBA,EAAiBnV,KAAI,SAAC4U,GAAD,OAAUA,EAAKC,8BAEhCE,EAAyBvK,KAAK+K,IAAIC,MACtChL,KACAqK,GAGF,OACE,6BACE,wBAAI9M,MAAO,CAAEuD,MAAO,UAApB,eACA,yBAAKzN,UAAU,mBACb,2BAAOA,UAAU,qBACf,4BACE,oCACA,uCACA,4CAEDyX,GACCA,EAAuBtV,KAAI,SAAC4U,GAAD,OACzB,kBAAC,GAAD,CACEA,KAAMA,EACNG,uBAAwBA,QAI/BnM,GACC,yBAAK/K,UAAU,mBACb,4BAAQA,UAAU,eCpDf,SAAS4X,GAAgBrY,GAAQ,IAAD,EACnByD,mBAAS,MADU,mBACpChB,EADoC,KAC9B6V,EAD8B,OAEX7U,mBAAS,MAFE,mBAEpCyP,EAFoC,KAE1BqF,EAF0B,OAGf9U,mBAAS,MAHM,mBAGpC+F,EAHoC,KAG5BgP,EAH4B,OAIL/U,mBAAS,MAJJ,mBAIpCqH,EAJoC,KAIvB2N,EAJuB,OAKnBhV,mBAAS,MALU,mBAKpC2G,EALoC,KAK9BsO,EAL8B,OAMnBjV,mBAAS,MANU,mBAMpCyG,EANoC,KAM9ByO,EAN8B,OAOHlV,oBAAS,GAPN,mBAOpCiS,EAPoC,KAOtBkD,EAPsB,OAQbnV,oBAAS,GARI,mBAQpCgS,EARoC,KAQ3BoD,EAR2B,OASbpV,mBAAS,IATI,mBASpCsF,EAToC,KAS3B+P,EAT2B,OAUjBrV,mBAAS,IAVQ,mBAUpCuO,EAVoC,KAU7B+G,EAV6B,KAY3CpV,qBAAU,WACN4B,MAAM,4DAA4DtD,MAAK,SAAAqD,GAAI,OAAIA,EAAKE,UAAQvD,MAAK,SAAAoN,GAAU,OAAIE,EAAcF,QAC9H,IAEH,IA0BM2J,EAAgB,WAClBH,EAAW,uBACXD,EAAgB,IAChBN,EAAQ,IACRG,EAAe,IACfC,EAAQ,IACRC,EAAQ,IACRH,EAAU,IACVD,EAAY,IACZQ,EAAS,KAGPxJ,EAAgB,SAAAF,GAClB,IAAMG,EAAkBH,EAAW,IAAKA,EAAWzM,KAAI,SAAA4G,GACnD,MAAO,CAAEiG,MAAOjG,EAAO/H,WAAa,IAAM+H,EAAO9H,UAAW6C,MAAOiF,EAAOjF,UAE9EuU,EAAWtJ,IAOf,OACI,6BACI,wBAAI/O,UAAU,sBAAd,qBACKgV,GACO,wBAAIhV,UAAU,WAAd,uBAEPiV,GACO,wBAAIjV,UAAU,iBAAiBiV,GAEvC,yBAAKjV,UAAU,oBACX,wBAAIA,UAAU,mBAAd,QACA,2BAAOgC,KAAK,OAAOoB,MAAOpB,EAAMgD,SAAU,SAACkC,GAAD,OAAO2Q,EAAQ3Q,EAAEzC,OAAOrB,QAAQpD,UAAU,qBAAqBiF,KAAK,SAC9G,wBAAIjF,UAAU,mBAAd,eACA,8BAAUgC,KAAK,cAAcoB,MAAOiH,EAAarF,SAAU,SAACkC,GAAD,OAAO8Q,EAAe9Q,EAAEzC,OAAOrB,QAAQpD,UAAU,0BAC5G,wBAAIA,UAAU,mBAAd,QACA,2BAAOgC,KAAK,OAAOoB,MAAOuG,EAAM3E,SAAU,SAACkC,GAAD,OAAO+Q,EAAQ/Q,EAAEzC,OAAOrB,QAAQpD,UAAU,qBAAqBiF,KAAK,SAC9G,wBAAIjF,UAAU,mBAAd,QACA,2BAAOgC,KAAK,OAAOgD,SAAU,SAACkC,GAAD,OAAOgR,EAAQhR,EAAEzC,OAAOrB,QAAQpD,UAAU,qBAAqBiF,KAAK,SACjG,wBAAIjF,UAAU,mBAAd,YACA,2BAAOgC,KAAK,WAAWoB,MAAOqP,EAAUzN,SAAU,SAACkC,GAAD,OAAO4Q,EAAY5Q,EAAEzC,OAAOrB,QAAQpD,UAAU,qBAAqBiF,KAAK,SAC1H,wBAAIjF,UAAU,mBAAd,eACA,2BAAOgC,KAAK,QAAQoB,MAAOmO,EAAOvM,SAAU,SAACkC,GAAD,OAAOoR,EAASpR,EAAEzC,OAAOrB,QAAQpD,UAAU,qBAAqBiF,KAAK,WACjH,wBAAIjF,UAAU,mBAAd,UACA,kBAAC,KAAD,CAAQA,UAAU,sBAAsB2P,QAASrH,EAAStD,SA3BlD,SAAAkC,GACpB6Q,EAAU7Q,EAAEpD,UA2BA,4BAAQ9D,UAAU,wBAAwBkC,QAzE5B,WACrBF,GAAQqI,GAAeV,GAAQF,GAAQV,GAAU0J,GAAYlB,EAC9DzM,MAAM,iEAAkE,CAChEc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBhE,KAAMA,EACNqI,YAAaA,EACbV,KAAMA,EACNF,KAAMA,EACNgJ,SAAUA,EACVF,MAAM,EACNhB,MAAO4B,SAAS5B,GAChBiH,YAAajZ,EAAMgB,YAAYuD,MAC/B2U,aAAc1P,MAEnBvH,MAAK,SAAAqD,GAAI,OAAIA,EAAKE,UAAQvD,KAAK+W,GACjC9W,OAAM,SAAAwT,GAAY,OAAIkD,EAAgBlD,MAEvCkD,EAAgB,4BAmDZ,uB,6FCnFL,SAASO,KACtB,OACE,6BACE,qCACA,kBAACC,GAAA,EAAD,CAAWC,OAAK,GACd,uBAAG5Y,UAAU,aAAb,kcASA,kBAAC6Y,GAAA,EAAD,CAAO7Y,UAAU,iBAAiByC,IAAKqW,KAAWF,OAAO,IACzD,wBAAI5Y,UAAU,sBAAd,YACA,kBAAC6Y,GAAA,EAAD,CAAO7Y,UAAU,iBAAiByC,IAAKsW,KAAUC,WAAS,IAC1D,wBAAIhZ,UAAU,wBAAd,iCACA,kBAACkI,EAAA,EAAD,CAAQlI,UAAU,iBAAiByH,QAAQ,WACzC,uBAAGzH,UAAU,iBAAiBC,KAAMgZ,MAApC,YAIF,wBAAIjZ,UAAU,sBAAd,mBACA,uBAAGA,UAAU,sBAAb,8BACA,uBAAGA,UAAU,sBAAb,8BACA,uBAAGA,UAAU,sBAAb,kCACA,uBAAGA,UAAU,sBAAb,wCAGA,uBAAGA,UAAU,sBAAb,0CAGA,uBAAGA,UAAU,sBAAb,mBAEE,kBAAC6U,GAAA,EAAD,CAAO7U,UAAU,kBAAkBkZ,MAAI,EAACzR,QAAQ,WAAhD,aAGA,kBAACoN,GAAA,EAAD,CAAO7U,UAAU,kBAAkBkZ,MAAI,EAACzR,QAAQ,WAAhD,cAGA,kBAACoN,GAAA,EAAD,CAAO7U,UAAU,kBAAkBkZ,MAAI,EAACzR,QAAQ,WAAhD,mBAGA,kBAACoN,GAAA,EAAD,CAAO7U,UAAU,kBAAkBkZ,MAAI,EAACzR,QAAQ,WAAhD,uBAGA,kBAACoN,GAAA,EAAD,CAAO7U,UAAU,kBAAkBkZ,MAAI,EAACzR,QAAQ,WAAhD,gBAGA,kBAACoN,GAAA,EAAD,CAAO7U,UAAU,kBAAkBkZ,MAAI,EAACzR,QAAQ,WAAhD,6BAGA,kBAACoN,GAAA,EAAD,CAAO7U,UAAU,kBAAkBkZ,MAAI,EAACzR,QAAQ,WAAhD,wB,IC6CK0R,G,4MAtFb7Y,MAAQ,CACNC,YAAa,KACb6G,SAAU,KACVgS,QAAQ,G,EAYV/S,cAAgB,SAAC1F,GACf,EAAKD,SAAS,CAAEH,YAAaI,IAC7BmE,MAAM,mEAAD,OACgEnE,EAAKmD,QAEvEtC,MAAK,SAACqD,GAAD,OAAUA,EAAKE,UACpBvD,MAAK,SAAC4F,GAAD,OAAc,EAAK1G,SAAS,CAAE0G,iB,EAGxC9C,QAAU,SAAChE,GACT,EAAKI,SAAS,CAAE0Y,OAAQ9Y,K,EAG1B+Y,aAAe,WACbzY,IAAQC,MAAM,CACZC,SAAU,OACVC,OAAO,GAAD,OACJ,EAAKT,MAAM8G,SAASpG,WAAa,IAAM,EAAKV,MAAM8G,SAASnG,UADvD,iBAIRxC,EAAI2C,OAAOkY,UACX,EAAK5Y,SAAS,CAAEH,YAAa,OAE7BsG,aAAa0S,WAAW,Y,mEA9BP,MADA1S,aAAaC,QAAQ,WAEpCxH,KAAKoB,SAAS,CAAE0Y,QAAQ,IAExB9Z,KAAKoB,SAAS,CAAE0Y,QAAQ,M,+BA+B1B,IAAMxS,EAAWC,aAAaC,QAAQ,WAD/B,EAEmCxH,KAAKgB,MAAvCC,EAFD,EAECA,YAAa6G,EAFd,EAEcA,SAAUgS,EAFxB,EAEwBA,OAC/B,OACE,oCACE,kBAACrS,EAAD,CACEzC,QAAShF,KAAKgF,QACd8C,SAAUA,EACVe,OAAQ7I,KAAK+Z,aACb9Y,YAAaA,IAEf,kBAAC8C,EAAD,CAAcmW,OAAK,EAACC,KAAK,WAAWlW,UAAWqH,KAC/C,kBAACvH,EAAD,CAAcmW,OAAK,EAACC,KAAK,WAAWlW,UAAW6P,KAC/C,kBAAC/P,EAAD,CAAcmW,OAAK,EAACC,KAAK,eAAelW,UAAWuR,KACnD,kBAACzR,EAAD,CAAcmW,OAAK,EAACC,KAAK,WAAWlW,UAAW8R,KAC/C,kBAAChS,EAAD,CAAcmW,OAAK,EAACC,KAAK,aAAalW,UAAWmT,KACjD,kBAACrT,EAAD,CAAcmW,OAAK,EAACC,KAAK,eAAelW,UAAW4T,KACnD,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,UAChB,kBAAC,GAAD,OAEF,kBAACpW,EAAD,CACEmW,OAAK,EACLC,KAAK,mBACLlW,UAAWqU,KAEb,kBAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,KACfL,EACC,kBAAC,EAAD,CAAMzY,KAAMyG,EAAU9F,QAAShC,KAAK+G,gBAClCO,EACF,kBAAC,IAAD,CAAUhD,GAAIgD,IAEd,kBAAC,EAAD,CAAMjG,KAAMyG,EAAU9F,QAAShC,KAAK+G,iBAGxC,kBAAC,IAAD,CAAOmT,OAAK,EAACC,KAAK,UAChB,kBAAC,EAAD,CAAOnV,QAAShF,KAAKgF,QAAShD,QAAShC,KAAK+G,iBAE9C,kBAAC,IAAD,CAAOmT,OAAK,EAACC,KAAK,WAChB,kBAAC,EAAD,CAAQnV,QAAShF,KAAKgF,gB,GAhFd1B,IAAM1C,WCTJwZ,QACW,cAA7BzO,OAAOwH,SAASkH,UAEe,UAA7B1O,OAAOwH,SAASkH,UAEhB1O,OAAOwH,SAASkH,SAASC,MACvB,2DCRNC,IAAQjO,MAAM,CACZjN,OAAQ,mCACRmb,QAAS,CAAC,IAAIC,IAAmBnX,QAGnC,IAAMoX,GAAgBH,IAAQI,UAAU,SAGxCC,IAASxW,OACP,kBAAC,IAAMyW,WAAP,KACE,kBAACrX,EAAD,KACE,kBAAC,IAAD,KACE,kBAACkX,GAAD,KACE,kBAAC,GAAD,UAKRI,SAASC,eAAe,SDuGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhZ,MAAK,SAAAiZ,GACJA,EAAaC,gBAEdjZ,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM0E,a","file":"static/js/main.e5858f21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/faris_img.5bd14a09.JPG\";","module.exports = __webpack_public_path__ + \"static/media/about_img_1.04d15c22.JPG\";","module.exports = __webpack_public_path__ + \"static/media/vbc.8b1b7968.vcf\";","import * as firebase from 'firebase/app'\nimport 'firebase/auth'\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n});\n\nexport default app;","import React, { Component } from \"react\";\nimport PopPop from \"react-poppop\";\nimport \"./Schedule.css\";\n\nexport default class Schedule extends Component {\n  render() {\n    const { show, toggleShow } = this.props;\n    return (\n      <div>\n        <PopPop\n          position=\"centerCenter\"\n          open={show}\n          closeBtn={true}\n          closeOnEsc={true}\n          onClose={() => toggleShow(false)}\n          closeOnOverlay={true}\n        >\n          <h1 className=\"schedule-title\">Schedule</h1>\n          <div className=\"schedule-container\">\n            <h3 className=\"schedule-h3\">\n              Classes with less than 2 people will be cancelled up to 4 hours\n              before class start time and early morning classes before 10:00\n              will be cancelled the night before at 20:00\n            </h3>\n            <p>\n              <strong>Monday:</strong> Outdoor Workout of the Day @ 12:15 &\n              Teens Outdoor WOD & 17:30\n            </p>\n            <p>\n              <strong>Tuesday:</strong> Outdoor Workout of the Day @ 12:15\n            </p>\n            <p>\n              <strong>Wednesday:</strong> Outdoor Workout of the Day @ 9:00 &\n              Teens Outdoor WOD & 17:30\n            </p>\n            <p>\n              <strong>Thursday:</strong> Zoom Workout of the Day @ 7:00 &\n              Outdoor Workout of the Day @ 12:15\n            </p>\n            <p>\n              <strong>Friday:</strong> Outdoor Workout of the Day @ 9:00\n            </p>\n            <p>\n              <strong>Saturday:</strong> Outdoor Mobility Class @ 10:00 &\n              Outdoor WOD @ 10:30\n            </p>\n            <p>\n              <strong>Sunday:</strong> Outdoor Workout of the Day @ 10:00\n            </p>\n            <p>\n              <strong>\n                Email{\" \"}\n                <a href=\"mailto:faziztraining@gmail.com\">\n                  faziztraining@gmail.com\n                </a>{\" \"}\n                if you would like to suggest a new class time\n              </strong>\n            </p>\n          </div>\n        </PopPop>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport app from \"../base\";\nimport \"./Home.css\";\nimport Schedule from \"./Schedule\";\nimport ReactGA from \"react-ga\";\nimport { Helmet } from \"react-helmet\";\nconst IG = require(\"instagrammer\");\nconst instagramUsername = \"faziz_training\";\n\nfunction initializeReactGA() {\n  ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n  ReactGA.pageview(\"/home\");\n}\n\nexport default class Home extends Component {\n  state = {\n    currentUser: this.props.currentUser,\n    instaPosts: [],\n    showSchedule: false,\n  };\n\n  componentDidMount() {\n    initializeReactGA();\n    app.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n      }\n    });\n\n    const setUser = (user) => {\n      this.setState({ currentUser: user });\n      this.props.setUser(user);\n    };\n\n    IG.profile(instagramUsername)\n      .then((instaPosts) => {\n        this.setState({ instaPosts });\n      })\n      .catch((error) => console.log(error));\n  }\n\n  toggleShow = (show) => {\n    this.setState({ showSchedule: show });\n    this.props.user &&\n      ReactGA.event({\n        category: \"User\",\n        action: `${\n          this.props.user.first_name + \" \" + this.props.user.last_name\n        } checked out the Schedule`,\n      });\n  };\n\n  render() {\n    const { instaPosts } = this.state;\n    const SlicedPosts = instaPosts[0] ? instaPosts.slice(0, 8) : [];\n    return (\n      <>\n        <Helmet>\n          <title>WOD-WITH-FARIS</title>\n          <meta name=\"description\" content=\"WOD-WITH-FARIS Home Page\" />\n          <meta\n            name=\"keywords\"\n            content=\"wod,with,faris,aziz,crossfit,workout,hiit,bodybuilding,mies,functional,training,outdoor,workout of the day,geneva,switzerland,versoix,coppet,coach,personal trainer,fitness\"\n          />\n        </Helmet>\n        <button\n          onClick={() => this.toggleShow(true)}\n          className=\"class-schedule-btn\"\n        >\n          View Class Schedule\n        </button>\n        <Schedule show={this.state.showSchedule} toggleShow={this.toggleShow} />\n        <div className=\"posts-container\">\n          <h2 className=\"title\">\n            Recent Posts{\" \"}\n            <a\n              className=\"title\"\n              href={`https://www.instagram.com/faziz_training/`}\n            >\n              @faziz_training\n            </a>\n          </h2>\n          <div className=\"posts-container\">\n            {SlicedPosts.map((post) => (\n              <a href={`https://www.instagram.com/p/${post.node.shortcode}/`}>\n                <img\n                  alt=\"\"\n                  id=\"insta-post\"\n                  className=\"insta-post\"\n                  src={post.node.display_url}\n                />\n              </a>\n            ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport app from './base'\n\nexport const AuthContext  = React.createContext();\n\n\nexport function AuthProvider({ children }) {\n    const  [currentUser, setCurrentUser] = useState(null);\n\n    useEffect(() => {\n        app.auth().onAuthStateChanged(setCurrentUser);\n    }, []);\n\n    return (\n        <AuthContext.Provider\n        value={{currentUser}}\n        > \n            {children}\n        </AuthContext.Provider>\n    )\n}\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Auth'\n\nexport default function PrivateRoute({ component: RouteComponent, ...rest }) {\n    const {currentUser} = useContext(AuthContext)\n    return (\n        <Route\n        {...rest}\n        render={routeProps =>\n        !!currentUser ? (\n            <RouteComponent {...routeProps} currentUser={currentUser} />\n        ) : (\n            <Redirect to={'/login'}/>\n        )\n        }\n        />\n    )\n}\n","import React from 'react';\nimport { withRouter, Redirect } from 'react-router';\nimport app from '../base';\nimport './Login.css'\nimport { NavLink } from 'react-router-dom'\nimport PopPop from 'react-poppop';\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/login');\n}\n\n\nclass Login extends React.Component {\n\n    state = {\n        currentUser: null, \n        email: null, \n        password: null,\n        show: false,\n        passwordResetEmail: null, \n        emailSent: false,\n        emailError: false\n    }\n\n    componentDidMount(){\n        initializeReactGA()\n\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n\n        const setUser = user => {\n            this.setState({currentUser: user})\n            this.props.setUser(user)\n        }\n    }\n\n    handlelogin = async () => {\n            const { email, password } = this.state;\n            try {\n                await app\n                  .auth()\n                  .signInWithEmailAndPassword(email, password);\n                  this.props.setHome(true)\n            } catch (error) {\n                alert(error);\n            }\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n\n    handleChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n    handlePasswordResetEmailChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n\n    sendPasswordResetEmail = email => {\n        this.checkAccount(email).then(resp => {\n            if (resp) {\n                app.auth().sendPasswordResetEmail(email).then(this.setState({emailSent: true, emailError: false}))\n            } else {\n                this.setState({emailError: true})\n            }\n        })\n    }\n\n    checkAccount = email => {\n        return fetch(`https://wod-with-faris-backend.herokuapp.com/users/check?email=${email}`)\n        .then(resp => resp.json())\n    }\n\n    render(){\n        const { currentUser, show, passwordResetEmail, emailSent, emailError } = this.state\n        if (currentUser) {\n            return <Redirect to='/'/>;\n        }\n        return (\n            <div>\n                <div className=\"form-structor\">\n                    <div className=\"signup\">\n                        <h2 className=\"form-title\" id=\"signup\"><span>or</span>Log In</h2>\n                        <div className=\"form-holder\">\n                        <input onChange={this.handleChange} name='email' type=\"email\" className=\"input\" placeholder=\"Email\" />\n                        <input onChange={this.handleChange} name='password' type=\"password\" className=\"input\" placeholder=\"Password\" />\n                        </div>\n                        <button onClick={this.handlelogin} className=\"submit-btn\">Log In</button>\n                        <h3 onClick={this.toggleShow} className='forgot-password'><u>Forgot Password</u></h3>\n                        <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                            <div className='forgot-password-modal-container'>\n                                <h2 className='forgot-password-txt'>Password Reset</h2>\n                                {emailSent&& <p className='email-send-success'>Email Sent!</p>}\n                                {emailError&& <p className='email-send-error'>Sorry, no account matches this email</p>}\n                                <p className='forgot-password-txt'>Please enter the email associated with your account:</p>\n                                <input value={passwordResetEmail} onChange={this.handlePasswordResetEmailChange} name='passwordResetEmail' className='forgot-password-input' type='email'/>\n                                <button onClick={() => this.sendPasswordResetEmail(passwordResetEmail)} className='forgot-password-btn'>Send Password Reset Email</button>\n                                \n                            </div>\n                        </PopPop>\n                    </div>\n                    <div className=\"login slide-up\">\n                        <div className=\"center\">\n                            <NavLink to='/signup'>\n                                <h2 className=\"form-title\" id=\"login\"><span>or</span>Sign Up</h2>\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(Login);\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom'\nimport app from '../base';\nimport './Login.css'\nimport { NavLink } from 'react-router-dom'\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n    ReactGA.pageview('/signup');\n}\n\nclass SignUp extends React.Component {\n\n    state = {\n        firstName: null,\n        lastName: null, \n        email: null,\n        password: null,\n        passwordConfirm: null,\n        currentUser: null,\n        passwordMatchError: \"\",\n        emailSent: false,\n        emptyFieldsError: null\n    }\n\n\n    componentDidMount(){\n        initializeReactGA()\n\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                setUser(user)\n            }\n        });\n\n        const setUser = user => {\n            this.setState({currentUser: user})\n        }\n    }\n\n    handleSignUp = async () => {\n        const { email, password, passwordConfirm , firstName, lastName} = this.state;\n        try {\n           if (password === passwordConfirm && email !== null) { \n            await app\n            .auth()\n            .createUserWithEmailAndPassword(email, password);\n            this.setState({passwordMatchError: null, emptyFieldsError: null})\n\n            fetch(\"https://wod-with-faris-backend.herokuapp.com/user/create\", {\n            method: \"POST\", \n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                first_name: this.state.firstName,\n                last_name: this.state.lastName,\n                tokens: 0,\n                coach: false\n            })\n            }).then(resp => resp.json()).then(resp => console.log(resp))\n\n            fetch(\"https://api.pushover.net/1/messages.json\", {\n                    method: \"POST\", \n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        token: 'adohia1ym9d8bopuvjys6zrgdu4psa',\n                        user: 'ubujnjnpw22cv58byd8w6kot7yx648',\n                        message: `${this.state.firstName + \" \" + this.state.lastName} signed up!`\n                    })\n            })\n\n           } else if (!password || !passwordConfirm || !email || !firstName || !lastName){\n               this.setState({emptyFieldsError: \"Please fill all the fields\", passwordMatchError: null})\n           } else {\n            this.setState({passwordMatchError: \"Passwords do not match\", emptyFieldsError: null})\n           }\n\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    handleChange = event => {\n        this.setState({[event.target.name]: event.target.value })\n    }\n\n    handleSetUser = user => {\n        this.setState({currentUser: user})\n    }\n\n\n\n    \n    render (){\n        const {currentUser, emailSent, passwordMatchError, emptyFieldsError} = this.state\n        if (currentUser) {\n            if(!currentUser.emailVerified && !emailSent){\n                currentUser.sendEmailVerification();\n                this.setState({emailSent: true})\n            } else {\n                this.props.setHome(true)\n                return <Redirect to='/'/>;\n            }\n        }\n        return (\n            <div>\n                <div className=\"form-structor\">\n                    <div className=\"signup\">\n                        {passwordMatchError&& <p className='sign-up-error'>{passwordMatchError}</p>}{emptyFieldsError&& <p className='sign-up-error'>{emptyFieldsError}</p>}\n                        <h2 className=\"form-title\" id=\"signup\"><span>or</span>Sign up</h2>\n                        <div className=\"form-holder\">\n                            <form>\n                                <input onChange={this.handleChange} name='firstName' type=\"text\" className=\"input\" placeholder=\"First Name\" />\n                                <input onChange={this.handleChange} name='lastName' type=\"text\" className=\"input\" placeholder=\"Last Name\" />\n                                <input onChange={this.handleChange} name='email' type=\"email\" className=\"input\" placeholder=\"Email\" />\n                                <input onChange={this.handleChange} name='password' type=\"password\" className=\"input\" placeholder=\"Password\" />\n                                <input onChange={this.handleChange} name='passwordConfirm' type=\"password\" className=\"input\" placeholder=\"Confirm Password\" />\n                            </form>\n                        </div>\n                        <button onClick={this.handleSignUp} className=\"submit-btn\">Sign up</button>\n                    </div>\n                    <div className=\"login slide-up\">\n                        <div className=\"center\">\n                            <NavLink to='/login'>\n                                <h2 className=\"form-title\" id=\"login\"><span>or</span>Log in</h2>\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(SignUp)\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: hsla(0, 0%, 100%, 0.5);\n  &:focus,\n  &:hover {\n    color: white;\n  }\n  ,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\n\nexport default (props) => <StyledLink {...props} />;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledDropdownLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  &:focus,\n  &:hover {\n    color: grey;\n  }\n  ,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\n\nexport default (props) => <StyledDropdownLink {...props} />;\n","import React, { useState, useEffect } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport ReactGA from \"react-ga\";\nimport StyledLink from \"./StyledLink\";\nimport StyledDropdownLink from \"./StyledDropdownLink\";\nimport Button from \"react-bootstrap/Button\";\n\nconst lastPage = localStorage.getItem(\"prevUrl\");\n\nexport default function NavBar(props) {\n  // eslint-disable-next-line\n  const [page, setPage] = useState(null);\n\n  useEffect(() => {\n    setPage(lastPage ? lastPage : \"/\");\n  }, []);\n\n  const handleNavChange = (e) => {\n    setPage(e.target.name);\n    if (e.target.name === \"/\") {\n      props.setHome(true);\n      localStorage.setItem(\"prevUrl\", \"/\");\n    } else {\n      localStorage.setItem(\"prevUrl\", e.target.name);\n      props.setHome(false);\n    }\n    props.userData &&\n      ReactGA.event({\n        category: \"User\",\n        action: `${\n          props.userData.first_name + \" \" + props.userData.last_name\n        } looked at ${e.target.name}`,\n      });\n  };\n\n  const { currentUser, userData } = props;\n  return (\n    <div className=\"nav-bar\">\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"#243b55\" variant=\"dark\">\n        <Navbar.Brand>WOD-WITH-FARIS</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link>\n              <StyledLink name=\"/\" onClick={handleNavChange} to=\"/\">\n                Home\n              </StyledLink>\n            </Nav.Link>\n            <Nav.Link>\n              <StyledLink name=\"/about\" onClick={handleNavChange} to=\"/about\">\n                About\n              </StyledLink>\n            </Nav.Link>\n            {currentUser && (\n              <Nav.Link>\n                <StyledLink\n                  name=\"/profile\"\n                  onClick={handleNavChange}\n                  to=\"/profile\"\n                >\n                  Profile\n                </StyledLink>\n              </Nav.Link>\n            )}\n            {currentUser && userData && userData.coach && (\n              <>\n                <Nav.Link>\n                  <StyledLink\n                    name=\"/clients\"\n                    onClick={handleNavChange}\n                    to=\"/clients\"\n                  >\n                    Clients\n                  </StyledLink>\n                </Nav.Link>\n                <NavDropdown title=\"Create\" id=\"collasible-nav-dropdown\">\n                  <NavDropdown.Item>\n                    <StyledDropdownLink\n                      name=\"/createclass\"\n                      onClick={handleNavChange}\n                      to=\"/createclass\"\n                    >\n                      Class\n                    </StyledDropdownLink>\n                  </NavDropdown.Item>\n                  <NavDropdown.Item>\n                    <StyledDropdownLink\n                      name=\"/createptsession\"\n                      onClick={handleNavChange}\n                      to=\"/createptsession\"\n                    >\n                      PT Session\n                    </StyledDropdownLink>\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </>\n            )}\n            {currentUser && userData && !userData.coach && (\n              <>\n                <NavDropdown title=\"Classes\" id=\"collasible-nav-dropdown\">\n                  <NavDropdown.Item>\n                    <StyledDropdownLink\n                      name=\"/classes\"\n                      onClick={handleNavChange}\n                      to=\"/classes\"\n                    >\n                      Book Class\n                    </StyledDropdownLink>\n                  </NavDropdown.Item>\n                  <NavDropdown.Item>\n                    <StyledDropdownLink\n                      name=\"/buypasses\"\n                      onClick={handleNavChange}\n                      to=\"/buypasses\"\n                    >\n                      Buy Passes\n                    </StyledDropdownLink>\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </>\n            )}\n          </Nav>\n          <Nav>\n            {currentUser ? (\n              <Nav.Link>\n                <Button onClick={props.logout} variant=\"secondary\">\n                  Log Out\n                </Button>\n              </Nav.Link>\n            ) : (\n              <Nav.Link>\n                <StyledLink name=\"/login\" to=\"/login\">\n                  <Button variant=\"primary\" onClick={handleNavChange}>\n                    Log In\n                  </Button>\n                </StyledLink>\n              </Nav.Link>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport PopPop from \"react-poppop\";\nimport dateFormat from \"dateformat\";\nimport \"./Classes.css\";\n\nexport default class ClassModal extends Component {\n  state = {\n    show: this.props.oneClass ? true : false,\n    clients: [],\n    error: null,\n    bookingGif: null,\n  };\n\n  componentDidMount() {\n    fetch(\n      `https://wod-with-faris-backend.herokuapp.com/usersessions?class_id=${this.props.oneClass.id}`,\n      {}\n    )\n      .then((resp) => resp.json())\n      .then((clients) => this.setState({ clients }));\n  }\n\n  toggleShow = (show) => {\n    this.setState({ show: show, error: null });\n    this.props.removeSelectedClass();\n  };\n\n  bookingGif = (bookingStatus) => {\n    if (bookingStatus) {\n      this.setState({\n        bookingGif:\n          \"https://media.giphy.com/media/cOogUoOWsZZ2hAVurb/giphy.gif\",\n      });\n      setTimeout(() => {\n        this.setState({ bookingGif: null });\n      }, 4000);\n    } else if (bookingStatus === undefined) {\n      this.setState({\n        bookingGif:\n          \"https://media.giphy.com/media/hpGAm7uGHsWhi7HVji/giphy.gif\",\n      });\n      setTimeout(() => {\n        this.setState({ bookingGif: null });\n      }, 4000);\n    }\n  };\n\n  handleBookandUnBookClass = (id) => {\n    const isBooked = this.state.clients.find(\n      (client) => client.user.id === this.props.user.id\n    );\n    if (\n      isBooked === undefined &&\n      this.props.user.tokens > 0 &&\n      this.state.clients.length < this.props.oneClass.class_capacity\n    ) {\n      fetch(\"https://wod-with-faris-backend.herokuapp.com/usersession/book\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          user_id: this.props.user.id,\n          session_id: id,\n        }),\n      })\n        .then((resp) => resp.json())\n        .then((ClientsWithNewBooking) =>\n          this.setState({ clients: ClientsWithNewBooking, error: null })\n        )\n        .then(this.props.deductToken)\n        .then(this.bookingGif(isBooked))\n        .then(this.props.bookedNotification);\n\n      fetch(\"https://api.pushover.net/1/messages.json\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          token: \"adohia1ym9d8bopuvjys6zrgdu4psa\",\n          user: \"ubujnjnpw22cv58byd8w6kot7yx648\",\n          sound: \"cashregister\",\n          message: `${\n            this.props.user.first_name + \" \" + this.props.user.last_name\n          } booked the ${this.props.oneClass.time} class that's on ${dateFormat(\n            this.props.oneClass.date,\n            \"fullDate\"\n          )}`,\n        }),\n      });\n    } else if (isBooked && this.props.user.tokens >= 0) {\n      fetch(`https://wod-with-faris-backend.herokuapp.com/usersession/unbook`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          user_id: this.props.user.id,\n          session_id: id,\n        }),\n      })\n        .then((resp) => resp.json())\n        .then((deletedBooking) =>\n          this.setState({\n            clients: this.state.clients.filter(\n              (client) => client.user.id !== deletedBooking.user.id\n            ),\n            error: null,\n          })\n        )\n        .then(this.props.addToken)\n        .then(this.bookingGif(isBooked));\n\n      fetch(\"https://api.pushover.net/1/messages.json\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          token: \"adohia1ym9d8bopuvjys6zrgdu4psa\",\n          user: \"ubujnjnpw22cv58byd8w6kot7yx648\",\n          message: `${\n            this.props.user.first_name + \" \" + this.props.user.last_name\n          } unbooked the ${\n            this.props.oneClass.time + \" \" + this.props.oneClass.name\n          } class that's on ${dateFormat(\n            this.props.oneClass.date,\n            \"fullDate\"\n          )}`,\n        }),\n      });\n    } else if (this.props.user.tokens <= 0) {\n      this.setState({\n        error:\n          'Sorry, you have run out of passes. Please buy some more on the \"Buy Passes\" page.',\n      });\n    } else if (\n      this.state.clients.length === this.props.oneClass.class_capacity ||\n      this.state.clients.length > this.props.oneClass.class_capacity\n    ) {\n      this.setState({ error: \"Sorry, this class is fully booked\" });\n    }\n  };\n\n  render() {\n    const { show, clients, error, bookingGif } = this.state;\n    const { oneClass } = this.props;\n    const isBooked =\n      clients[0] &&\n      this.props.user &&\n      clients.find((client) => client.user.id === this.props.user.id)\n        ? true\n        : false;\n    const now = new Date();\n    const classDateAndTime = new Date(oneClass.date + \"T\" + oneClass.time);\n    const isInPast = classDateAndTime < now ? true : false;\n    return (\n      <div>\n        <PopPop\n          position=\"centerCenter\"\n          open={show}\n          closeBtn={true}\n          closeOnEsc={true}\n          onClose={() => this.toggleShow(false)}\n          closeOnOverlay={true}\n        >\n          <h1 className=\"workout-title\">\n            {oneClass.time + \" \" + oneClass.name}\n          </h1>{\" \"}\n          <div className=\"attending-progress-bar\">\n            <div\n              style={{\n                width: `${((clients.length / oneClass.class_capacity) * 100 >\n                100\n                  ? 100\n                  : (clients.length / oneClass.class_capacity) * 100\n                ).toFixed(2)}px`,\n              }}\n              className=\"inner-progress-bar\"\n            >\n              <span className=\"attending-txt\">\n                {clients.length === oneClass.class_capacity\n                  ? \"Fully Booked\"\n                  : clients.length + ` / ${oneClass.class_capacity}`}\n              </span>\n            </div>\n          </div>\n          <h3 className=\"coach-name\">\n            <strong>Coach: </strong>\n            {oneClass.coach.first_name + \" \" + oneClass.coach.last_name}\n          </h3>\n          {!bookingGif ? (\n            oneClass.description\n              .split(\"\\n\")\n              .map((sentence) => <p className=\"desc-txt\">{sentence}</p>)\n          ) : (\n            <img className=\"book-gif\" alt=\"\" src={bookingGif} />\n          )}\n          {!isInPast ? (\n            <button\n              onClick={() =>\n                this.handleBookandUnBookClass(this.props.oneClass.id)\n              }\n              class=\"book-btn\"\n            >\n              {isBooked ? \"Cancel\" : \"Book Class\"}\n            </button>\n          ) : (\n            <button class=\"past-btn\">Already Passed</button>\n          )}\n          {error && <p className=\"error\">{this.state.error}</p>}\n        </PopPop>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ClassModal from \"./ClassModal\";\nimport ReactGA from \"react-ga\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"./Classes.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport Toast from \"react-bootstrap/Toast\";\n\nfunction initializeReactGA() {\n  ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n  ReactGA.pageview(\"/classes\");\n}\n\nconst localizer = momentLocalizer(moment);\n\nexport default class Classes extends Component {\n  state = {\n    classes: [],\n    chosenClass: null,\n    user: null,\n    isLoading: true,\n    screenWidth: window.innerWidth,\n    showClassAttendNotification: false,\n    attendanceResp: \"\",\n    ShowLowTokenNotification: false,\n  };\n\n  componentWillMount() {\n    window.addEventListener(\"resize\", this.handleWindowSizeChange);\n  }\n\n  componentDidMount() {\n    initializeReactGA();\n\n    fetch(`https://wod-with-faris-backend.herokuapp.com/sessions`)\n      .then((resp) => resp.json())\n      .then((classes) =>\n        this.setState({\n          classes: classes,\n          isLoading: false,\n        })\n      );\n\n    fetch(\n      `https://wod-with-faris-backend.herokuapp.com/user/getuser?email=${this.props.currentUser.email}`\n    )\n      .then((resp) => resp.json())\n      .then((user) => this.setState({ user }));\n  }\n\n  handleWindowSizeChange = () => {\n    this.setState({ screenWidth: window.innerWidth });\n  };\n\n  handleDateChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      isLoading: true,\n    });\n    this.dateFetch(e.target.value);\n  };\n\n  handlePickClass = (e) => {\n    const pickedClass = this.state.classes.find(\n      (oneClass) => oneClass.id === e.id\n    );\n    this.setState({ chosenClass: pickedClass });\n  };\n\n  deductToken = () => {\n    const { user } = this.state;\n    this.setState({\n      user: {\n        id: user.id,\n        coach: user.coach,\n        first_name: user.first_name,\n        last_name: user.last_name,\n        email: user.email,\n        tokens: user.tokens - 1,\n      },\n    });\n    ReactGA.event({\n      category: \"User\",\n      action: `${\n        this.state.user.first_name + \" \" + this.state.user.last_name\n      } Booked a Class`,\n    });\n  };\n  addToken = () => {\n    const { user } = this.state;\n    this.setState({\n      user: {\n        id: user.id,\n        coach: user.coach,\n        first_name: user.first_name,\n        last_name: user.last_name,\n        email: user.email,\n        tokens: user.tokens + 1,\n      },\n    });\n    ReactGA.event({\n      category: \"User\",\n      action: `${\n        this.state.user.first_name + \" \" + this.state.user.last_name\n      } Cancelled a Class`,\n    });\n  };\n\n  dateFetch = (date) => {\n    fetch(`https://wod-with-faris-backend.herokuapp.com/sessions?date=${date}`)\n      .then((resp) => resp.json())\n      .then((classes) =>\n        this.setState({\n          classes: classes,\n          isLoading: false,\n        })\n      );\n  };\n\n  formatedClasses = (classes) => {\n    return classes.map((oneClass) => ({\n      title: oneClass.name,\n      start: moment(\n        oneClass.date + \" \" + oneClass.time,\n        \"YYYY-MM-DD HH:mm\"\n      ).toDate(),\n      end: moment(oneClass.date + \" \" + oneClass.time, \"YYYY-MM-DD HH:mm\")\n        .add(1, \"hours\")\n        .toDate(),\n      allDay: false,\n      id: oneClass.id,\n    }));\n  };\n\n  removeSelectedClass = () => {\n    this.setState({ chosenClass: null });\n  };\n\n  earliestClassOftheWeek = () => {\n    return this.formatedClasses(this.state.classes).sort((a, b) =>\n      moment(a.end).format(\"HH:mm\") > moment(b.end).format(\"HH:mm\")\n        ? 1\n        : moment(a.end).format(\"HH:mm\") < moment(b.end).format(\"HH:mm\")\n        ? -1\n        : 0\n    );\n  };\n\n  getPrevWeekAttendances = () => {\n    fetch(\n      `https://wod-with-faris-backend.herokuapp.com/usersession/prevsessionsandtokens/${this.state.user.id}`\n    )\n      .then((resp) => resp.json())\n      .then((resp) => attendanceAndTokensNotificationResponse(resp));\n\n    const attendanceAndTokensNotificationResponse = (attendancesAndTokens) => {\n      console.log(attendancesAndTokens);\n      const responses = [\n        \"Let's Go!\",\n        \"Love the energy!\",\n        \"Wohooo!\",\n        \"💪💪💪\",\n        \"Keep the streak going!\",\n        \"Absolute Machine!\",\n        \"Beast!\",\n      ];\n\n      if (attendancesAndTokens.sessions_prev_week === 1) {\n        this.setState({ attendanceResp: \"1st class this week! Nice Start!\" });\n        this.toggleShowClassAttendNotification(true);\n      } else if (attendancesAndTokens.sessions_prev_week > 1) {\n        this.setState({\n          attendanceResp: `Class No.${\n            attendancesAndTokens.sessions_prev_week\n          } this week! ${\n            responses[Math.floor(Math.random() * responses.length)]\n          }`,\n        });\n        this.toggleShowClassAttendNotification(true);\n      }\n      if (attendancesAndTokens.tokens <= 1) {\n        this.toggleShowLowTokenNotification();\n      }\n    };\n  };\n\n  toggleShowClassAttendNotification = (show) => {\n    this.setState({\n      showClassAttendNotification: show,\n    });\n  };\n\n  toggleShowLowTokenNotification = () => {\n    this.setState({\n      ShowLowTokenNotification: !this.state.ShowLowTokenNotification,\n    });\n  };\n\n  render() {\n    const {\n      classes,\n      isLoading,\n      chosenClass,\n      screenWidth,\n      showClassAttendNotification,\n      attendanceResp,\n      ShowLowTokenNotification,\n    } = this.state;\n    const isMobile = screenWidth <= 500;\n    return (\n      <div>\n        <div\n          aria-live=\"polite\"\n          aria-atomic=\"true\"\n          style={{\n            position: \"fixed\",\n            minHeight: \"200px\",\n          }}\n        >\n          <div\n            style={{\n              position: \"fixed\",\n              top: \"2%\",\n              right: \"1%\",\n            }}\n          >\n            <Toast\n              show={showClassAttendNotification}\n              onClose={() => this.toggleShowClassAttendNotification(false)}\n            >\n              <Toast.Header>\n                <img\n                  src=\"holder.js/20x20?text=%20\"\n                  className=\"rounded mr-2\"\n                  alt=\"\"\n                />\n                <strong className=\"mr-auto\">Notification</strong>\n                <small>just now</small>\n              </Toast.Header>\n              <Toast.Body>{attendanceResp}</Toast.Body>\n            </Toast>\n            <Toast\n              show={ShowLowTokenNotification}\n              onClose={this.toggleShowLowTokenNotification}\n            >\n              <Toast.Header>\n                <img\n                  src=\"holder.js/20x20?text=%20\"\n                  className=\"rounded mr-2\"\n                  alt=\"\"\n                />\n                <strong className=\"mr-auto\">Notification</strong>\n                <small>just now</small>\n              </Toast.Header>\n              <Toast.Body>\n                {\n                  // eslint-disable-next-line\n                }\n                You're running low on tokens 😣. Time to buy some more!\n              </Toast.Body>\n            </Toast>\n          </div>\n        </div>\n        <h1 style={{ color: \"white\" }}>Book Class</h1>\n        <div className=\"container\">\n          <Calendar\n            onSelectEvent={this.handlePickClass}\n            defaultView={isMobile ? \"day\" : \"week\"}\n            views={[\"month\", \"week\", \"day\"]}\n            localizer={localizer}\n            scrollToTime={classes[0] && this.earliestClassOftheWeek()[0].start}\n            events={this.formatedClasses(classes)}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            style={{ height: 600, color: \"black\", backgroundColor: \"white\" }}\n          />\n          {isLoading && <button className=\"loading\"></button>}\n          {classes[0]\n            ? chosenClass && (\n                <ClassModal\n                  addToken={this.addToken}\n                  deductToken={this.deductToken}\n                  user={this.state.user}\n                  oneClass={chosenClass}\n                  handlePickClass={this.handlePickClass}\n                  removeSelectedClass={this.removeSelectedClass}\n                  bookedNotification={this.getPrevWeekAttendances}\n                />\n              )\n            : !isLoading && <h1 style={{ color: \"white\" }}>No Classes</h1>}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport dateFormat from 'dateformat'\nimport './Classes.css'\n\nexport default class ClassCard extends Component {\n\n\n    handleCancelBooking = id => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/usersession/unbook`, {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.props.user.id,\n                    session_id: id\n                })\n            }).then(resp => resp.json()).then(deletedBooking => this.props.handleCancel(deletedBooking)).then(this.props.addToken)\n\n            fetch(\"https://api.pushover.net/1/messages.json\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    token: 'adohia1ym9d8bopuvjys6zrgdu4psa',\n                    user: 'ubujnjnpw22cv58byd8w6kot7yx648',\n                    message: `${this.props.user.first_name + \" \" + this.props.user.last_name} unbooked the ${this.props.upcomingClass.time + \" \" + this.props.upcomingClass.name} class that's on ${dateFormat(this.props.upcomingClass.date, \"fullDate\")}`\n                })\n            })\n    }\n\n    render() {\n        const { upcomingClass } = this.props\n        return (\n            <div className='class-card'>\n                <h2 className='card-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h2>\n                <p className='card-date'>{dateFormat(upcomingClass.date, \"fullDate\")}</p>\n                <button onClick={() => this.handleCancelBooking(upcomingClass.id)} className='book-btn'>Cancel</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport dateFormat from 'dateformat'\nimport PopPop from 'react-poppop';\nimport Select from 'react-select'\nimport './Classes.css'\n\nexport default class CoachClassCard extends Component {\n\n    state = {\n        show: false,\n        clients: [],\n        askDeleteConfirm: false,\n        editMode: false,\n        classDescription: this.props.upcomingClass.description,\n        addClient: false,\n        allClients: [],\n        clientToAdd: null\n    }\n    \n    componentDidMount(){\n        fetch(`https://wod-with-faris-backend.herokuapp.com/usersessions?class_id=${this.props.upcomingClass.id}`, {\n        }).then(resp => resp.json()).then(clients => this.setState({clients}))\n    }\n\n\n    handleClients = allClients => {\n        const formatedClients = allClients[0]&& allClients.map(client => {\n            return { label: client.first_name + \" \" + client.last_name, client: {first_name: client.first_name, last_name: client.last_name, id: client.id} }\n        })\n        this.setState({allClients: formatedClients})\n    }\n\n    handleDeleteClass = id => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/sessions/deleted/${id}`, {\n                method: \"DELETE\"\n            }).then(resp => resp.json()).then(deletedBooking => this.props.handleCancel(deletedBooking))\n        const ids = this.state.clients.map(client => {return client.user.id})\n        fetch(\"https://wod-with-faris-backend.herokuapp.com/sessions/returntokens\", {\n            method: \"POST\", \n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                client_ids: ids\n            })\n        }).then(this.setState({askDeleteConfirm: false}))\n    }\n\n    toggleShow = show => {\n        this.setState({show: show, tokenError: null});\n    }\n    toggleDeleteConfirm = () => {\n        this.setState({askDeleteConfirm: !this.state.askDeleteConfirm});\n    }\n\n\n    toggleEditMode = () => {\n        this.setState({editMode: !this.state.editMode})\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit = id => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/sessions/update/${id}`, {\n                method: \"PATCH\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    description: this.state.classDescription\n                })\n        }).then(this.setState({editMode: false}))\n    }\n\n    toggleAddClient = () => {\n        this.setState({addClient: !this.state.addClient})\n        fetch('https://wod-with-faris-backend.herokuapp.com/users/index').then(resp => resp.json()).then(allClients => this.handleClients(allClients))\n    }\n\n    handleAddClientOrCancel = () => {\n        if (!this.state.clientToAdd){\n            this.setState({addClient: false})\n        } else if (this.state.clientToAdd){\n            fetch(\"https://wod-with-faris-backend.herokuapp.com/usersession/book\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.state.clientToAdd.id,\n                    session_id: this.props.upcomingClass.id\n                })\n            }).then(resp => resp.json()).then(this.setState({clients: [...this.state.clients, {user: this.state.clientToAdd}], clientToAdd: null, addClient: null}))\n        }\n    }\n\n    handleSetClient = e => {\n        this.setState({clientToAdd: e.client})\n    }\n\n    render() {\n        const { upcomingClass, coach } = this.props\n        const { show, clients, askDeleteConfirm, editMode, classDescription, addClient, clientToAdd, allClients } = this.state\n        return (\n            <div className='coach-class-card'>\n                <h2 className='card-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h2>\n                <p className='card-date'>{dateFormat(upcomingClass.date, \"fullDate\")}</p>\n                {askDeleteConfirm? <div> <button onClick={() => this.handleDeleteClass(upcomingClass.id)} className='book-btn'>Confirm Delete</button> <button onClick={this.toggleDeleteConfirm} className='book-btn'>Cancel Delete</button> </div>: <button onClick={this.toggleDeleteConfirm} className='book-btn'>Delete Class</button>}\n                {askDeleteConfirm? undefined : <button onClick={() => this.toggleShow(true)} className='book-btn'>More Info</button>}\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                    <h1 className='workout-title'>{upcomingClass.time + \" \" + upcomingClass.name}</h1> <div className='attending-progress-bar'><div style={{width:`${((clients.length/upcomingClass.class_capacity) * 100 > 100? 100 : (clients.length/upcomingClass.class_capacity) * 100).toFixed(2)}px`}}className='inner-progress-bar'><span className='attending-txt'>{clients.length === 8? \"Fully Booked\" : clients.length + ` / ${upcomingClass.class_capacity}`}</span></div></div>\n                    <h3 className='desc-txt'><strong>Coach: </strong>{coach.first_name + \" \" + coach.last_name}</h3>\n                    {!editMode?\n                    classDescription.split('\\n').map(sentence => (\n                        <p className='desc-txt'>{sentence}</p> \n                    ))\n                    :\n                    <textarea className='edit-desc' value={classDescription} onChange={this.handleChange} name='classDescription'/>\n                    } \n                    <div>\n                    {!editMode? <button className='book-btn' onClick={this.toggleEditMode}>Edit Workout</button> : <button className='book-btn' onClick={() => this.handleSubmit(upcomingClass.id)}>Submit</button>}\n                        <h3 className='desc-txt'>Signed  Up Clients</h3>\n                        {clients.map(client => (\n                            <p className='desc-txt'>- {client.user.first_name + \" \" + client.user.last_name}</p>\n                        ))}\n                        {!clients[0]&&\n                            <p className='desc-txt'>None</p>\n                        }\n                    {!addClient? <button className='book-btn' onClick={this.toggleAddClient}>Add Client</button> :<><Select className='activity-input' options={allClients} onChange={this.handleSetClient}/> <button className='book-btn' onClick={this.handleAddClientOrCancel}>{clientToAdd? 'Submit' : 'Cancel'}</button></>}\n                    </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport PopPop from 'react-poppop';\nimport './AllUpcomingClasses.css'\nimport CoachClassCard from './CoachClassCard';\n\nexport default class AllUpcomingClasses extends Component {\n    render() {\n        const { show, upcomingClasses, handleCancel, user, toggleShow } = this.props\n        const timeOrderedClasses = upcomingClasses[0]? upcomingClasses.sort((a, b) => new Date(a.date + \" \" + a.time) - new Date(b.date + \" \" + b.time)) : upcomingClasses\n        return (\n            <div>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => toggleShow(false)}\n                        closeOnOverlay={true}>\n                <div className='all-upcoming-classes-container'>\n                    <h1 className='header'>All Upcoming Classes</h1>\n                    {timeOrderedClasses.map(upcomingClass => (\n                        <>\n                            <CoachClassCard handleCancel={handleCancel} user={user} coach={upcomingClass.coach} upcomingClass={upcomingClass.class}/>\n                        </>\n                    ))}\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { CardElement } from \"@stripe/react-stripe-js\";\n\nconst CARD_ELEMENT_OPTIONS = {\n  iconStyle: \"solid\",\n  hidePostalCode: true,\n  style: {\n    base: {\n      iconColor: \"rgb(240, 57, 122)\",\n      color: \"rgb(240, 57, 122)\",\n      fontSize: \"16px\",\n      fontFamily: '\"Open Sans\", sans-serif',\n      fontSmoothing: \"antialiased\",\n      \"::placeholder\": {\n        color: \"#CFD7DF\"\n      }\n    },\n    invalid: {\n      color: \"#e5424d\",\n      \":focus\": {\n        color: \"#303238\"\n      }\n    }\n  }\n};\n\nfunction CardSection() {\n  return <CardElement options={CARD_ELEMENT_OPTIONS} />;\n}\n\nexport default CardSection","import React, { Component } from 'react'\nimport { CardElement } from \"@stripe/react-stripe-js\"\nimport CardSection from './CardSection'\nimport dateFormat from 'dateformat'\nimport './CheckoutForm.css'\n\nexport default class PTSessionCheckoutForm extends Component {\n\n    state = {\n        name: \"\",\n        paymentSuccess: false, \n        paymentError: null,\n        paymentPending: false\n    }\n\n\n    handleNameChange = event => {\n        this.setState({name: event.target.value})\n    }\n\n    handleSubmit = async event => {\n        this.setState({paymentPending: true})\n        event.preventDefault();\n    \n        const { stripe, elements } = this.props;\n        if (!stripe || !elements) {\n            return;\n        }\n\n        const card = elements.getElement(CardElement);\n        const result = await stripe.createToken(card);\n        if (result.error) {\n            window.alert(result.error.message);\n        } else {\n            const { upcomingPTSession } = this.props\n            fetch(\"https://wod-with-faris-backend.herokuapp.com/users/payforptsession\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    price: upcomingPTSession.price,\n                    description: `Personal Training Session`, \n                    token: result.token.id\n                })\n            }).then(resp => resp.json()).then(resp => this.cardPayment(resp.client_secret))\n        }\n    };\n\n\n    cardPayment = async (clientSecret) => {\n        const { stripe, elements } = this.props;\n        const { name } = this.state\n\n        const result = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n              card: elements.getElement(CardElement),\n              billing_details: {\n                name: name,\n              },\n            }\n    })\n\n        if (result.error) {\n            this.setState({paymentPending: false, paymentError: result.error.message})\n          } else {\n            if (result.paymentIntent.status === 'succeeded') {\n                this.setState({paymentPending: false, paymentSuccess: true, paymentError: null})\n                this.props.handlePaid()\n                \n                const { upcomingPTSession } = this.props\n                fetch(\"https://wod-with-faris-backend.herokuapp.com/ptsessions/confirmptsession\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    pt_session: upcomingPTSession.id\n                })\n            }).then(\n                setTimeout(() => {\n                    this.setState({paymentSuccess: false})\n                }, 6000)\n                )\n\n                fetch(\"https://api.pushover.net/1/messages.json\", {\n                    method: \"POST\", \n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        token: 'adohia1ym9d8bopuvjys6zrgdu4psa',\n                        user: 'ubujnjnpw22cv58byd8w6kot7yx648',\n                        sound: 'cashregister',\n                        message: `${this.state.name} paid CHF${this.props.upcomingPTSession.price} and confirmed the Personal Training that is on ${dateFormat(this.props.upcomingPTSession.date, \"fullDate\")} at ${this.props.upcomingPTSession.time}`\n                    })\n                })\n            }\n        }\n    }\n\n    render() {\n        const { upcomingPTSession } = this.props\n        const { name, paymentSuccess, paymentError, paymentPending } = this.state\n        return (\n            <div>\n                <div className='checkout-form'>\n                    {paymentSuccess&&<p className='payment-success'>Payment Successful</p>}\n                    {paymentError&&<p className='payment-error'>Error: {paymentError}</p>}\n                {paymentSuccess?\n                    <h1 className='payment-success'>Thank you! Your PT Session has been confirmed!</h1>\n                :\n                <>\n                    <div class=\"product-info\">\n                        <h4 className=\"product-price\">Total: CHF {upcomingPTSession.price}</h4>\n                    </div>\n                    <form className='form' onSubmit={this.handleSubmit}>\n                        <input className='name-card-input' required value={name} onChange={this.handleNameChange} type='text' placeholder='Full Name as displayed on card'/>\n                        <CardSection/>\n                        {paymentPending? <button className='loading-spinner'> </button> : <button className=\"btn-pay\">Pay</button>}\n                    </form>\n                </>\n                }\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport PopPop from 'react-poppop'\nimport dateFormat from 'dateformat'\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { ElementsConsumer } from \"@stripe/react-stripe-js\"\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport PTSessionCheckoutForm from './PTSessionCheckoutForm'\nimport './PTSessionCard.css'\n\nconst stripePromise = loadStripe('pk_live_4g3t1ZRoe5slZQbs5Vy3IaGe00fOR9THIq');\n\nexport default class PTSessionCard extends Component {\n\n    state = {\n        show: false,\n        paid: this.props.upcomingPTSession.paid\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n\n    handlePaid = () => {\n        this.setState({paid: true})\n    }\n\n    render() {\n        const { upcomingPTSession, user } = this.props\n        const { show, paid } = this.state \n        return (\n            <div className='class-card'>\n                <h2 className='card-title'>{upcomingPTSession.time + \" \" + upcomingPTSession.name}</h2>\n                <p className='card-date'>{dateFormat(upcomingPTSession.date, \"fullDate\")}</p>\n                <button onClick={() => this.toggleShow(true)} className='book-btn'>{!paid? 'Confirm' : 'Confirmed!'}</button>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                <div className='pt-session-modal'>\n                    <h1 className='pt-modal-title'>{upcomingPTSession.time + \" \" + upcomingPTSession.name}</h1>\n                    <div className='pt-paid-status'><p style={{textAlign: 'center'}}>Status: <p style={paid? {color: 'green'} : {color: 'red'}}>{paid? 'Paid' : 'Not Paid'}</p></p></div>\n                    {/* <h3 className='desc-txt'><strong>Coach: </strong>{upcomingPTSession.coach.first_name + \" \" + upcomingPTSession.coach.last_name}</h3> */}\n                    <h3 className='desc-txt'><strong>Location: </strong>{upcomingPTSession.location}</h3>\n                    {upcomingPTSession.description.split('\\n').map(sentence => (\n                    <p className='desc-txt'>{sentence}</p> \n                    ))\n                    }\n                    {!paid&&\n                        <Elements stripe={stripePromise}>\n                        <ElementsConsumer>\n                            {({ stripe, elements }) => (\n                            <PTSessionCheckoutForm handlePaid={this.handlePaid} userEmail={user.email} upcomingPTSession={upcomingPTSession} stripe={stripe} elements={elements} />\n                            )}\n                        </ElementsConsumer>\n                        </Elements>\n                    }\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport dateFormat from 'dateformat'\nimport PopPop from 'react-poppop';\nimport './Classes.css'\n\nexport default class CoachPTSessionCard extends Component {\n\n    state = {\n        show: false,\n        askDeleteConfirm: false,\n        editMode: false,\n        ptDescription: this.props.upcomingPTSession.description,\n        ptLocation: this.props.upcomingPTSession.location,\n        ptTime: this.props.upcomingPTSession.time, \n        ptDate: this.props.upcomingPTSession.date,\n        ptPrice: this.props.upcomingPTSession.price\n\n    }\n    \n    componentDidMount(){\n\n    }\n\n\n    handleDeletePTSession = id => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/ptsessions/delete/${id}`, {\n                method: \"DELETE\"\n            }).then(resp => resp.json()).then(deletedBooking => this.handleDeletedBooking(deletedBooking))\n    }\n\n    handleDeletedBooking = deletedBooking => {\n        this.props.handleCancel(deletedBooking)\n        this.setState({askDeleteConfirm: false})\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n    toggleDeleteConfirm = () => {\n        this.setState({askDeleteConfirm: !this.state.askDeleteConfirm});\n    }\n\n\n    toggleEditMode = () => {\n        this.setState({editMode: !this.state.editMode})\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit = id => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/ptsessions/update/${id}`, {\n                method: \"PATCH\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    description: this.state.ptDescription,\n                    location: this.state.ptLocation, \n                    time: this.state.ptTime,\n                    date: this.state.ptDate,\n                    price: parseInt(this.state.ptPrice)\n                })\n        }).then(this.setState({editMode: false}))\n    }\n\n    render() {\n        const { upcomingPTSession, client } = this.props\n        const { show, askDeleteConfirm, editMode, ptDescription, ptLocation, ptTime, ptDate, ptPrice } = this.state\n        return (\n            <div className='coach-class-card'>\n                <h2 className='card-title'>{upcomingPTSession.time + \" \" + upcomingPTSession.name}</h2>\n                <p className='card-date'>{dateFormat(upcomingPTSession.date, \"fullDate\")}</p>\n                {askDeleteConfirm? <div> <button onClick={() => this.handleDeletePTSession(upcomingPTSession.id)} className='book-btn'>Confirm Delete</button> <button onClick={this.toggleDeleteConfirm} className='book-btn'>Cancel Delete</button> </div>: <button onClick={this.toggleDeleteConfirm} className='book-btn'>Delete Class</button>}\n                {askDeleteConfirm? undefined : <button onClick={() => this.toggleShow(true)} className='book-btn'>More Info</button>}\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                    <h1 className='workout-title'>{upcomingPTSession.time + \" \" + upcomingPTSession.name}</h1>\n                    <div><p style={{textAlign: 'center', color: 'black'}}>Status: <p style={upcomingPTSession.paid? {color: 'green'} : {color: 'red'}}>{upcomingPTSession.paid? 'Paid' : 'Not Paid'}</p></p></div>\n                    <h3 className='desc-txt'>Client: {client.first_name + \" \" + client.last_name}</h3>\n                    <h3 className='desc-txt'>Price: CHF {!editMode? ptPrice : <input type='number' name='ptPrice' value={ptPrice} onChange={this.handleChange}/>}</h3>\n                    <h3 className='desc-txt'>Location: {!editMode? ptLocation : <input type='text' name='ptLocation' value={ptLocation} onChange={this.handleChange}/>}</h3>\n                    <h3 className='desc-txt'>Date: {!editMode? dateFormat(ptDate, \"fullDate\") : <input type='date' name='ptDate' value={ptDate} onChange={this.handleChange}/>}</h3>\n                    <h3 className='desc-txt'>Time: {!editMode? ptTime : <input type='time' name='ptTime' value={ptTime} onChange={this.handleChange}/>}</h3>\n                    {!editMode?\n                    ptDescription.split('\\n').map(sentence => (\n                        <p className='desc-txt'>{sentence}</p> \n                    ))\n                    :\n                    <textarea className='edit-desc' value={ptDescription} onChange={this.handleChange} name='ptDescription'/>\n                    } \n                    <div>\n                    {!editMode? <button className='book-btn' onClick={this.toggleEditMode}>Edit Workout</button> : <button className='book-btn' onClick={() => this.handleSubmit(upcomingPTSession.id)}>Submit</button>}\n\n                    </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { useState, useEffect } from \"react\";\nimport ClassCard from \"./ClassCard\";\nimport CoachClassCard from \"./CoachClassCard\";\nimport ReactGA from \"react-ga\";\nimport AllUpcomingClasses from \"./AllUpcomingClasses\";\nimport PTSessionCard from \"./PTSessionCard\";\nimport CoachPTSessionCard from \"./CoachPTSessionCard\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport \"./Profile.css\";\n\nfunction initializeReactGA() {\n  ReactGA.initialize(process.env.REACT_APP_GOOGLE_MEASUREMENT_ID);\n  ReactGA.pageview(\"/profile\");\n}\n\nexport default function Profile(props) {\n  const [user, setUser] = useState(null);\n  const [upcomingClasses, setUpcomingClasses] = useState([]);\n  const [upcomingPTSessions, setUpcomingPTSessions] = useState([]);\n  const [showUpcomingClasses, setShowUpcomingClasses] = useState(false);\n\n  useEffect(() => {\n    initializeReactGA();\n\n    fetch(\n      `https://wod-with-faris-backend.herokuapp.com/user/getuser?email=${props.currentUser.email}`\n    )\n      .then((resp) => resp.json())\n      .then((user) => handleUser(user));\n\n    fetch(\n      `https://wod-with-faris-backend.herokuapp.com/usersession/upcomingclasses?email=${props.currentUser.email}`\n    )\n      .then((resp) => resp.json())\n      .then((upcoming) => handleUpcomingClasses(upcoming));\n  }, [props.currentUser.email]);\n\n  const handleUpcomingClasses = (upcoming) => {\n    setUpcomingClasses(upcoming.classes);\n    setUpcomingPTSessions(upcoming.ptsessions);\n  };\n\n  const handleUser = (user) => {\n    setUser(user);\n  };\n\n  const addToken = () => {\n    const updatedUser = {\n      id: user.id,\n      coach: user.coach,\n      first_name: user.first_name,\n      last_name: user.last_name,\n      email: user.email,\n      tokens: user.tokens + 1,\n    };\n    setUser(updatedUser);\n  };\n\n  const handleCancel = (deletedBooking) => {\n    setUpcomingClasses(\n      upcomingClasses.filter(\n        (booking) => booking.class.id !== deletedBooking.session.id\n      )\n    );\n  };\n  const handleDeleteClass = (deletedClass) => {\n    setUpcomingClasses(\n      upcomingClasses.filter((booking) => booking.class.id !== deletedClass.id)\n    );\n  };\n  const handleDeletePTSession = (deletedClass) => {\n    setUpcomingPTSessions(\n      upcomingPTSessions.filter(\n        (ptSession) => ptSession.ptsession.id !== deletedClass.id\n      )\n    );\n  };\n\n  const toggleShowUpcomingClasses = (show) => {\n    setShowUpcomingClasses(show);\n  };\n\n  const timeOrderedClasses = upcomingClasses[0]\n    ? upcomingClasses[0].class\n      ? upcomingClasses.sort(\n          (a, b) =>\n            new Date(a.class.date + \"T\" + a.class.time) -\n            new Date(b.class.date + \"T\" + b.class.time)\n        )\n      : upcomingClasses.sort(\n          (a, b) =>\n            new Date(a.date + \"T\" + a.time) - new Date(b.date + \"T\" + b.time)\n        )\n    : upcomingClasses;\n  const timeOrderedPTSessions = upcomingPTSessions[0]\n    ? upcomingPTSessions[0].ptsession\n      ? upcomingPTSessions.sort(\n          (a, b) =>\n            new Date(a.ptsession.date + \" \" + a.ptsession.time) -\n            new Date(b.ptsession.date + \" \" + b.ptsession.time)\n        )\n      : upcomingPTSessions.sort(\n          (a, b) =>\n            new Date(a.date + \" \" + a.time) - new Date(b.date + \" \" + b.time)\n        )\n    : upcomingPTSessions;\n  const orderedByDateUpcomingClasses =\n    timeOrderedClasses &&\n    timeOrderedClasses.sort((a, b) => new Date(a.date) - new Date(b.date));\n  const orderedByDateUpcomingPTsessions =\n    timeOrderedPTSessions &&\n    timeOrderedPTSessions.sort((a, b) => new Date(a.date) - new Date(b.date));\n  const SlicedUpcomingClasses =\n    orderedByDateUpcomingClasses && orderedByDateUpcomingClasses.slice(0, 2);\n  const SlicedUpcomingPTSessions =\n    orderedByDateUpcomingPTsessions &&\n    orderedByDateUpcomingPTsessions.slice(0, 2);\n  return (\n    <div>\n      <div className=\"profile-container\">\n        {user ? (\n          <>\n            <h1 className=\"name-h1\">\n              {user.first_name + \" \" + user.last_name}\n            </h1>\n            {!user.coach && (\n              <Button\n                style={{\n                  display: \"block\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                }}\n                variant={user.tokens > 1 ? \"primary\" : \"danger\"}\n              >\n                Class Passes <Badge variant=\"light\">{user.tokens}</Badge>\n                <span className=\"sr-only\">class passes</span>\n              </Button>\n            )}\n            <div className=\"upcoming-classes-container\">\n              <div>\n                <h2 className=\"upcoming-classes-title\">Upcoming Classes: </h2>\n                {!user.coach &&\n                  upcomingClasses[0] &&\n                  SlicedUpcomingClasses.map((upcomingClass) => (\n                    <ClassCard\n                      handleCancel={handleCancel}\n                      addToken={addToken}\n                      user={user}\n                      upcomingClass={upcomingClass.class}\n                    />\n                  ))}\n                {user.coach && upcomingClasses[0] && (\n                  <button\n                    onClick={() => toggleShowUpcomingClasses(true)}\n                    className=\"all-upcoming-classes-btn\"\n                  >\n                    All upcoming classes\n                  </button>\n                )}\n                {showUpcomingClasses && (\n                  <AllUpcomingClasses\n                    toggleShow={toggleShowUpcomingClasses}\n                    handleCancel={handleDeleteClass}\n                    user={user}\n                    show={showUpcomingClasses}\n                    upcomingClasses={orderedByDateUpcomingClasses}\n                  />\n                )}\n                {user.coach &&\n                  upcomingClasses[0] &&\n                  SlicedUpcomingClasses.map((upcomingClass) => (\n                    <CoachClassCard\n                      handleCancel={handleDeleteClass}\n                      user={user}\n                      coach={upcomingClass.coach}\n                      upcomingClass={upcomingClass.class}\n                    />\n                  ))}\n                {!upcomingClasses[0] && <h3 className=\"none\">None</h3>}\n              </div>\n              <div className=\"upcoming-pt-sessions\">\n                <h2 className=\"upcoming-classes-title\">\n                  Upcoming PT Sessions:{\" \"}\n                </h2>\n                {!user.coach &&\n                  upcomingPTSessions[0] &&\n                  SlicedUpcomingPTSessions.map((upcomingPTSession) => (\n                    <PTSessionCard\n                      user={user}\n                      upcomingPTSession={upcomingPTSession}\n                    />\n                  ))}\n                {user.coach &&\n                  upcomingPTSessions[0] &&\n                  SlicedUpcomingPTSessions.map((upcomingPTSession) => (\n                    <CoachPTSessionCard\n                      handleCancel={handleDeletePTSession}\n                      user={user}\n                      upcomingPTSession={upcomingPTSession.ptsession}\n                      client={upcomingPTSession.user}\n                    />\n                  ))}\n              </div>\n\n              {!upcomingPTSessions[0] && <h3 className=\"none\">None</h3>}\n            </div>\n          </>\n        ) : (\n          <button className=\"loading\"></button>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react'\nimport './CreateClass.css'\n\nexport default class CreateClass extends Component {\n\n    state = {\n        name: null,\n        description: null,\n        date: null,\n        time: null,\n        classCapacity: 8, \n        coach: null, \n        success: false,\n        errorMessage: null\n    }\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris-backend.herokuapp.com/user/getuser?email=${this.props.currentUser.email}`)\n        .then(resp => resp.json())\n        .then(coach => this.setState({coach}))\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n         })\n    }\n\n    handleCreateClass = () => {\n        const { name, description, date, time, coach, classCapacity } = this.state\n        if ( name && description && date && time && classCapacity  ){\n        fetch(\"https://wod-with-faris-backend.herokuapp.com/sessions/create\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: name, \n                    description: description,\n                    date: date,\n                    time: time,\n                    class_capacity: parseInt(classCapacity),\n                    user_id: coach.id\n                })\n            }).then(resp => resp.json()).then(this.setState({success: true, errorMessage: null, name: \"\", description: \"\", date: \"\", time: \"\"}))\n            .catch(errorMessage => this.setState({errorMessage}))\n        } else {\n            this.setState({errorMessage: \"Please fill all fields\"})\n        }\n    } \n\n    render() {\n        const { success, errorMessage, name, date, description, time, classCapacity } = this.state\n        return (\n            <div>\n                <h1 className='create-class-title'>Create Class</h1>\n                {success&&\n                        <h2 className='success'>Class Created!</h2>\n                }\n                {errorMessage&&\n                        <h2 className='error-message'>{errorMessage}</h2>\n                }\n                <div className='create-class-div'>\n                    <h3 className='create-class-h3'>Name</h3>\n                    <input name='name' value={name} onChange={this.handleChange} className='create-class-input' type='text'/>\n                    <h3 className='create-class-h3' >Description</h3>\n                    <textarea name='description' value={description} onChange={this.handleChange} className='create-class-textarea'/>\n                    <h3 className='create-class-h3'>Date</h3>\n                    <input name='date' value={date} onChange={this.handleChange} className='create-class-input' type='date'/>\n                    <h3 className='create-class-h3'>Time</h3>\n                    <input name='time' value={time} onChange={this.handleChange} className='create-class-input' type='time'/>\n                    <h3 className='create-class-h3'>Class Capacity</h3>\n                    <input name='classCapacity' value={classCapacity} onChange={this.handleChange} className='create-class-input' type='number'/>\n                    <button className='create-class-btn' onClick={this.handleCreateClass}>Create Class</button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Clients.css'\nimport PopPop from 'react-poppop';\n\nexport default class Client extends Component {\n\n    state = {\n        show: false, \n        editMode: false,\n        email: this.props.client.email,\n        tokens: this.props.client.tokens\n    }\n\n    toggleShow = show => {\n        this.setState({show: show});\n    }\n    \n    toggleEditMode = () => {\n        this.setState({editMode: true})\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    submitEdit = id => {\n        fetch(`https://wod-with-faris-backend.herokuapp.com/user/update/${id}`, {\n                method: \"PATCH\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: this.state.email,\n                    tokens: this.state.tokens\n                })\n        }).then(this.setState({editMode: false}))\n    }\n\n    render() {\n        const { client } = this.props\n        const { show, email, tokens, editMode } = this.state\n        return (\n            <div>\n                <h3 onClick={this.toggleShow}  className={tokens <=1? 'low-on-tokens-client' : 'client'}>{client.first_name + \" \" + client.last_name}</h3>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={true}\n                        onClose={() => this.toggleShow(false)}\n                        closeOnOverlay={true}>\n                            <div className='client-modal-container'>\n                                <h3 className='client-txt'>{client.first_name + \" \" + client.last_name}</h3>\n                                <p className='client-txt'>Email: </p> {!editMode? <p className='client-txt'>{email}</p> : <input onChange={this.handleChange} className='edit-input' value={email} name='email'/>}\n                                <p className='client-txt'>Class Passes: </p> {!editMode? <p className='client-txt'>{tokens}</p> : <input onChange={this.handleChange} className='edit-input' type='number' value={tokens} name='tokens'/>}\n                                {!editMode? <button onClick={this.toggleEditMode} className='edit-btn'>Edit</button> : <button onClick={() => this.submitEdit(client.id)} className='edit-btn'>Submit</button>}\n                            </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Clients.css'\nimport Client from './Client';\n\nexport default class Clients extends Component {\n\n    state = {\n        search: null,\n        allClients: []\n    }\n\n\n    componentDidMount(){\n        fetch(`https://wod-with-faris-backend.herokuapp.com/users/index`)\n        .then(resp => resp.json())\n        .then(allClients => this.setState({allClients}))\n    }\n\n    handleSearch = e => {\n        const search = e.target.value\n        if (search.length > 0) {\n            this.setState({search})\n        } else if (search.length === 0){\n            this.setState({search: null})\n        }\n \n    }\n\n    fuzzyMatch = (compareTerm ,term) => {\n        if (term.length === 0)\n            return 1;\n        let string = compareTerm.toLowerCase();\n        let compare = term.toLowerCase();\n        let matches = 0;\n        for (let i = 0; i < compare.length; i++) {\n            string.indexOf(compare[i]) > -1 ? matches += 1 : matches -=1;\n        }\n        return matches / compareTerm.length;\n    }\n\n    sortSearch = (clients) => {\n        const results = clients.map(client => [client, this.fuzzyMatch(client.first_name + \" \" + client.last_name, this.state.search)]);\n        results.sort((a, b) => b[1] - a[1]);\n        const filteredResults = results.filter(result => result[1] > 0)\n        return filteredResults\n    }\n\n    render() {\n        const { allClients, search } = this.state\n        const alphebetizedClients = allClients.sort((a,b) =>  a.last_name.localeCompare(b.last_name))\n        const filteredClients = search? this.sortSearch(allClients) : alphebetizedClients\n        return (\n            <div>\n                <h1>Clients</h1>\n                <input className='search-bar' onChange={this.handleSearch} name='search' type='text'/>\n                <div className='clients-container'>\n                    {allClients&& allClients[0]&&\n\n                    filteredClients.map(client => (\n                        <Client client={search? client[0] : client}/>\n                    ))\n\n                    }\n                    {allClients&& !allClients[0]&&\n                        <h2>None</h2>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport PopPop from 'react-poppop';\nimport { CardElement } from \"@stripe/react-stripe-js\"\nimport CardSection from './CardSection'\nimport './CheckoutForm.css'\n\nexport default class CheckoutForm extends Component {\n\n    state = {\n        name: \"\",\n        paymentSuccess: false, \n        paymentError: null,\n        paymentPending: false\n    }\n\n\n    handleNameChange = event => {\n        this.setState({name: event.target.value})\n    }\n\n    handleSubmit = async event => {\n        this.setState({paymentPending: true})\n        event.preventDefault();\n    \n        const { stripe, elements } = this.props;\n        if (!stripe || !elements) {\n            return;\n        }\n\n        const card = elements.getElement(CardElement);\n        const result = await stripe.createToken(card);\n        if (result.error) {\n            window.alert(result.error.message);\n            this.setState({paymentPending: false})\n        } else {\n            const { quantity } = this.props\n            fetch(\"https://wod-with-faris-backend.herokuapp.com/users/buyclasspasses\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    quantity: quantity,\n                    description: `${quantity}X Class Passes`, \n                    token: result.token.id\n                })\n            }).then(resp => resp.json()).then(resp => this.cardPayment(resp.client_secret))\n        }\n    };\n\n\n    cardPayment = async (clientSecret) => {\n        const { stripe, elements } = this.props;\n        const { name } = this.state\n\n        const result = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n              card: elements.getElement(CardElement),\n              billing_details: {\n                name: name,\n              },\n            }\n    })\n\n        if (result.error) {\n            this.setState({paymentPending: false, paymentError: result.error.message})\n          } else {\n            if (result.paymentIntent.status === 'succeeded') {\n                this.setState({paymentPending: false, paymentSuccess: true, paymentError: null})\n                \n                const { quantity, userEmail } = this.props\n                fetch(\"https://wod-with-faris-backend.herokuapp.com/users/addclasspasses\", {\n                method: \"POST\", \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    quantity: quantity,\n                    user_email: userEmail\n                })\n            }).then(\n                setTimeout(() => {\n                    this.setState({paymentSuccess: false})\n                    this.props.toggleShow(false)\n                    this.props.resetQuantity()\n                }, 6000)\n                )\n\n                fetch(\"https://api.pushover.net/1/messages.json\", {\n                    method: \"POST\", \n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        token: 'adohia1ym9d8bopuvjys6zrgdu4psa',\n                        user: 'ubujnjnpw22cv58byd8w6kot7yx648',\n                        sound: 'cashregister',\n                        message: `${this.state.name} purchased ${this.props.quantity}X class passes`\n                    })\n                })\n            }\n        }\n    }\n\n    render() {\n        const { show, toggleShow, quantity } = this.props\n        const { name, paymentSuccess, paymentError, paymentPending } = this.state\n        return (\n            <div>\n                <PopPop position=\"centerCenter\"\n                        open={show}\n                        closeBtn={true}\n                        closeOnEsc={false}\n                        onClose={() => toggleShow(false)}\n                        closeOnOverlay={false}>\n                <div className='checkout-form'>\n                    {paymentSuccess&&<p className='payment-success'>Payment Successful</p>}\n                    {paymentError&&<p className='payment-error'>Error: {paymentError}</p>}\n                {paymentSuccess?\n                    <h1 className='payment-success'>Thank you! {this.props.quantity}X Class Passes have been added to your account!</h1>\n                :\n                <>\n                    <div class=\"product-info\">\n                        <h3 className=\"product-title\">{quantity === 1? \"1X Class Pass\": quantity + \"X Class Passes\"}</h3>\n                        <h4 className=\"product-price\">Total: CHF {quantity * 10}</h4>\n                    </div>\n                    <form className='form' onSubmit={this.handleSubmit}>\n                        <input className='name-card-input' required value={name} onChange={this.handleNameChange} type='text' placeholder='Full Name as displayed on card'/>\n                        <CardSection/>\n                        {paymentPending? <button className='loading-spinner'> </button> : <button className=\"btn-pay\">Buy Now</button>}\n                    </form>\n                </>\n                }\n                </div>\n                </PopPop>\n            </div>\n        )\n    }\n}\n\n\n","import React, { Component } from 'react'\nimport ReactGA from 'react-ga';\nimport './BuyPasses.css'\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { ElementsConsumer } from \"@stripe/react-stripe-js\"\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport CheckoutForm from './CheckoutForm';\n\nconst stripePromise = loadStripe('pk_live_4g3t1ZRoe5slZQbs5Vy3IaGe00fOR9THIq');\n\nexport default class BuyPasses extends Component {\n\n    state = {\n        quantity: 0, \n        purchaseAmountLimit: false, \n        show: false\n    }\n\n    handleQuantityChange = amount => {\n        const { quantity } = this.state\n        if (quantity > 0 && quantity < 5) {\n            this.setState({quantity: quantity + amount, purchaseAmountLimit: false})\n        } else if ( quantity === 0 && amount === 1) {\n            this.setState({quantity: 1, purchaseAmountLimit: false})\n        }else if (quantity === 5 && amount === -1) {\n            this.setState({quantity: quantity + amount, purchaseAmountLimit: false})\n        } else if (quantity === 5) {\n            this.setState({purchaseAmountLimit: true})\n        }\n        ReactGA.event({\n            category: 'User',\n            action: `${amount}X classes was added to the cart.`\n        });\n    }\n\n    resetQuantity = () => {\n        this.setState({quantity: 0})\n    }\n\n    toggleShow = show => {\n        if (this.state.quantity > 0) {\n            this.setState({show: show});\n        } else if (this.state.quantity === 0) {\n            window.alert(\"Quantity of class passes must be more than 0\")\n        }\n\n        ReactGA.event({\n            category: 'User',\n            action: `Checkout button was hit`\n        });\n    }\n\n    render() {\n        const { quantity, purchaseAmountLimit } = this.state\n        return (\n            <div>\n                <h1>Buy Passes</h1>\n                <div className='purchase-box'>\n                    <div>\n                        <h1 className='quantity-title'>Class Passes</h1>\n                        {purchaseAmountLimit&& <p className='limit'>Purchase limit is 5 classes</p>}\n                        <h1 className='quantity'>{quantity}</h1>\n                        <div className='buttons-container'>\n                            <button className='quantity-btn' onClick={() => this.handleQuantityChange(-1)}>-</button>\n                            <button className='quantity-btn' onClick={() => this.handleQuantityChange(1)}>+</button>\n                        </div>\n                        <h1 className='total'>Total: CHF {quantity * 10}</h1>\n                        <button onClick={() => this.toggleShow(true)} className='checkout-btn'>Checkout</button>\n                        <Elements stripe={stripePromise}>\n                        <ElementsConsumer>\n                            {({ stripe, elements }) => (\n                            <CheckoutForm resetQuantity={this.resetQuantity} userEmail={this.props.currentUser.email} show={this.state.show} toggleShow={this.toggleShow} quantity={quantity} stripe={stripe} elements={elements} />\n                            )}\n                        </ElementsConsumer>\n                        </Elements>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport './LeaderboardStat.css'\n\nexport default function LeaderboardStat(props) {\n\n    const { user, attendances_and_activities, calories_burned } = props.stat\n    \n    return (\n        <tr className='leaderboard-stat' style={props.highestNoOfAttendances === attendances_and_activities? {color: \"white\", backgroundColor: \"green\"} : null}>\n            <td>{user}</td>\n            <td>{attendances_and_activities}</td>\n            <td>~{calories_burned} Cal.</td>\n        </tr>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport LeaderboardStat from \"./LeaderboardStat\";\nimport \"./LeaderboardStat.css\";\n\nexport default function Leaderboard() {\n  useEffect(() => {\n    fetch(\n      \"https://wod-with-faris-backend.herokuapp.com/users/getallattendances\"\n    )\n      .then((resp) => resp.json())\n      .then((stats) => handleLeaderboardStats(stats));\n  }, []);\n\n  const [leaderboardStats, setLeaderboardStats] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const handleLeaderboardStats = (leaderboardStats) => {\n    setLeaderboardStats(leaderboardStats);\n    setIsLoading(false);\n  };\n\n  const sortedLeaderboardStats =\n    leaderboardStats[0] &&\n    leaderboardStats.sort(\n      (a, b) => b.attendances_and_activities - a.attendances_and_activities\n    );\n\n  const attendances_and_activities =\n    leaderboardStats[0] &&\n    leaderboardStats.map((stat) => stat.attendances_and_activities);\n\n  const highestNoOfAttendances = Math.max.apply(\n    Math,\n    attendances_and_activities\n  );\n\n  return (\n    <div>\n      <h1 style={{ color: \"white\" }}>Leaderboard</h1>\n      <div className=\"stats-container\">\n        <table className=\"leaderboard-table\">\n          <tr>\n            <th>Name</th>\n            <th>Classes</th>\n            <th>Cal. Burned</th>\n          </tr>\n          {sortedLeaderboardStats &&\n            sortedLeaderboardStats.map((stat) => (\n              <LeaderboardStat\n                stat={stat}\n                highestNoOfAttendances={highestNoOfAttendances}\n              />\n            ))}\n        </table>\n        {isLoading && (\n          <div className=\"loading-btn-div\">\n            <button className=\"loading\"></button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react'\nimport Select from 'react-select'\nimport './CreateClass.css'\n\nexport default function CreatePTSession(props) {\n    const [name, setName] = useState(null)\n    const [location, setLocation] = useState(null)\n    const [client, setClient] = useState(null)\n    const [description, setDescription] = useState(null)\n    const [date, setDate] = useState(null)\n    const [time, setTime] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(false)\n    const [success, setSuccess] = useState(false)\n    const [clients, setClients] = useState([])\n    const [price, setPrice] = useState(50)\n\n    useEffect(() => {\n        fetch('https://wod-with-faris-backend.herokuapp.com/users/index').then(resp => resp.json()).then(allClients => handleClients(allClients))\n    }, [])\n\n    const handleCreatePtSession = () => {\n        if ( name && description && date && time && client && location && price  ){\n            fetch(\"https://wod-with-faris-backend.herokuapp.com/ptsessions/create\", {\n                    method: \"POST\", \n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        name: name, \n                        description: description,\n                        date: date,\n                        time: time,\n                        location: location,\n                        paid: false,\n                        price: parseInt(price),\n                        coach_email: props.currentUser.email,\n                        client_email: client\n                    })\n                }).then(resp => resp.json()).then(handleSuccess)\n                .catch(errorMessage => setErrorMessage(errorMessage))\n            } else {\n                setErrorMessage(\"Please fill all fields\")\n            }\n    }\n\n    const handleSuccess = () => {\n        setSuccess(\"PT Session Created!\")\n        setErrorMessage(\"\")\n        setName(\"\")\n        setDescription(\"\")\n        setDate(\"\")\n        setTime(\"\")\n        setClient(\"\")\n        setLocation(\"\")\n        setPrice(\"\")\n    }\n\n    const handleClients = allClients => {\n        const formatedClients = allClients[0]&& allClients.map(client => {\n            return { label: client.first_name + \" \" + client.last_name, email: client.email }\n        })\n        setClients(formatedClients)\n    }\n\n    const handleSetClient = e => {\n        setClient(e.email)\n    }\n\n    return (\n        <div>\n            <h1 className='create-class-title'>Create PT Session</h1>\n                {success&&\n                        <h2 className='success'>PT Session Created!</h2>\n                }\n                {errorMessage&&\n                        <h2 className='error-message'>{errorMessage}</h2>\n                }\n                <div className='create-class-div'>\n                    <h3 className='create-class-h3'>Name</h3>\n                    <input name='name' value={name} onChange={(e) => setName(e.target.value)} className='create-class-input' type='text'/>\n                    <h3 className='create-class-h3' >Description</h3>\n                    <textarea name='description' value={description} onChange={(e) => setDescription(e.target.value)} className='create-class-textarea'/>\n                    <h3 className='create-class-h3'>Date</h3>\n                    <input name='date' value={date} onChange={(e) => setDate(e.target.value)} className='create-class-input' type='date'/>\n                    <h3 className='create-class-h3'>Time</h3>\n                    <input name='time' onChange={(e) => setTime(e.target.value)} className='create-class-input' type='time'/>\n                    <h3 className='create-class-h3'>Location</h3>\n                    <input name='location' value={location} onChange={(e) => setLocation(e.target.value)} className='create-class-input' type='text'/>\n                    <h3 className='create-class-h3'>Price (CHF)</h3>\n                    <input name='price' value={price} onChange={(e) => setPrice(e.target.value)} className='create-class-input' type='number'/>\n                    <h3 className='create-class-h3'>Client</h3>\n                    <Select className='client-select-input' options={clients} onChange={handleSetClient}/>\n                    <button className='create-pt-session-btn' onClick={handleCreatePtSession}>Create PT Session</button>\n                </div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\nimport farisPic from \"../Images/faris_img.JPG\";\nimport aboutImg1 from \"../Images/about_img_1.JPG\";\nimport vbc from \"../virtual_business_card/vbc.vcf\";\nimport Badge from \"react-bootstrap/Badge\";\nimport \"./About.css\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1>About</h1>\n      <Container fluid>\n        <p className=\"about-txt\">\n          WOD-WITH-FARIS was created with the sole purpose of making high\n          quality fitness coaching easily accesible to the masses. Workouts are\n          designed for athletes of all levels and from all backgrounds. They are\n          scalable and adjustable to any injury and the inclusion or exclusion\n          of equipment. The W-W-F program is fashioned to increase atheltic\n          perfomance (power, speed, endurance & stength) along with help improve\n          general health and quality of life.\n        </p>\n        <Image className=\"about-main-img\" src={aboutImg1} fluid={true} />\n        <h2 className=\"about-team-heading\">The Team</h2>\n        <Image className=\"about-team-img\" src={farisPic} thumbnail />\n        <h3 className=\"about-team-heading-2\">Founder and Coach: Faris Aziz</h3>\n        <Button className=\"contact-button\" variant=\"primary\">\n          <a className=\"contact-button\" href={vbc}>\n            Contact\n          </a>\n        </Button>\n        <h2 className=\"about-team-heading\">Qualifications:</h2>\n        <p className=\"qualifications-txt\">- CrossFit Level 2 Trainer</p>\n        <p className=\"qualifications-txt\">- CrossFit Level 1 Trainer</p>\n        <p className=\"qualifications-txt\">- CrossFit Scaling Certificate</p>\n        <p className=\"qualifications-txt\">\n          - CrossFit Spot the Flaw Certificate\n        </p>\n        <p className=\"qualifications-txt\">\n          - CrossFit Lesson Planning Certificate\n        </p>\n        <p className=\"qualifications-txt\">\n          Experience With:\n          <Badge className=\"experience-pill\" pill variant=\"primary\">\n            Strongman\n          </Badge>\n          <Badge className=\"experience-pill\" pill variant=\"primary\">\n            Gymnastics\n          </Badge>\n          <Badge className=\"experience-pill\" pill variant=\"primary\">\n            Olympic Lifting\n          </Badge>\n          <Badge className=\"experience-pill\" pill variant=\"primary\">\n            Functional Training\n          </Badge>\n          <Badge className=\"experience-pill\" pill variant=\"primary\">\n            Powerlifting\n          </Badge>\n          <Badge className=\"experience-pill\" pill variant=\"primary\">\n            Aerobic Capacity Training\n          </Badge>\n          <Badge className=\"experience-pill\" pill variant=\"primary\">\n            5+ Years CrossFit\n          </Badge>\n        </p>\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { Route } from \"react-router-dom\";\nimport ReactGA from \"react-ga\";\nimport Home from \"./Components/Home\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Login from \"./Components/Login\";\nimport SignUp from \"./Components/SignUp\";\nimport app from \"./base\";\nimport NavBar from \"./Components/NavBar\";\nimport Classes from \"./Components/Classes\";\nimport Profile from \"./Components/Profile\";\nimport CreateClass from \"./Components/CreateClass\";\nimport Clients from \"./Components/Clients\";\nimport BuyPasses from \"./Components/BuyPasses\";\nimport Leaderboard from \"./Components/Leaderboard\";\nimport { Redirect } from \"react-router\";\nimport CreatePTSession from \"./Components/CreatePTSession\";\nimport About from \"./Components/About\";\n\nclass App extends React.Component {\n  state = {\n    currentUser: null,\n    userData: null,\n    isHome: true,\n  };\n\n  componentWillMount() {\n    const lastPage = localStorage.getItem(\"prevUrl\");\n    if (lastPage === \"/\") {\n      this.setState({ isHome: true });\n    } else {\n      this.setState({ isHome: false });\n    }\n  }\n\n  handleSetUser = (user) => {\n    this.setState({ currentUser: user });\n    fetch(\n      `https://wod-with-faris-backend.herokuapp.com/user/getuser?email=${user.email}`\n    )\n      .then((resp) => resp.json())\n      .then((userData) => this.setState({ userData }));\n  };\n\n  setHome = (state) => {\n    this.setState({ isHome: state });\n  };\n\n  handleLogout = () => {\n    ReactGA.event({\n      category: \"User\",\n      action: `${\n        this.state.userData.first_name + \" \" + this.state.userData.last_name\n      } logged out`,\n    });\n    app.auth().signOut();\n    this.setState({ currentUser: null });\n\n    localStorage.removeItem(\"prevUrl\");\n  };\n\n  render() {\n    const lastPage = localStorage.getItem(\"prevUrl\");\n    const { currentUser, userData, isHome } = this.state;\n    return (\n      <>\n        <NavBar\n          setHome={this.setHome}\n          userData={userData}\n          logout={this.handleLogout}\n          currentUser={currentUser}\n        />\n        <PrivateRoute exact path=\"/classes\" component={Classes} />\n        <PrivateRoute exact path=\"/profile\" component={Profile} />\n        <PrivateRoute exact path=\"/createclass\" component={CreateClass} />\n        <PrivateRoute exact path=\"/clients\" component={Clients} />\n        <PrivateRoute exact path=\"/buypasses\" component={BuyPasses} />\n        <PrivateRoute exact path=\"/leaderboard\" component={Leaderboard} />\n        <Route exact path=\"/about\">\n          <About />\n        </Route>\n        <PrivateRoute\n          exact\n          path=\"/createptsession\"\n          component={CreatePTSession}\n        />\n        <Route exact path=\"/\">\n          {isHome ? (\n            <Home user={userData} setUser={this.handleSetUser} />\n          ) : lastPage ? (\n            <Redirect to={lastPage} />\n          ) : (\n            <Home user={userData} setUser={this.handleSetUser} />\n          )}\n        </Route>\n        <Route exact path=\"/login\">\n          <Login setHome={this.setHome} setUser={this.handleSetUser} />\n        </Route>\n        <Route exact path=\"/signup\">\n          <SignUp setHome={this.setHome} />\n        </Route>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport Bugsnag from '@bugsnag/js'\nimport BugsnagPluginReact from '@bugsnag/plugin-react'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { AuthProvider } from './Auth'\n\nBugsnag.start({\n  apiKey: 'f2c95ccfa378c93b437a0d07e1619053',\n  plugins: [new BugsnagPluginReact(React)]\n})\n\nconst ErrorBoundary = Bugsnag.getPlugin('react')\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <Router>\n        <ErrorBoundary>\n          <App />\n        </ErrorBoundary>\n      </Router>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}